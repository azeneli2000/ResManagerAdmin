//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ResManager {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("ResManagerDataSet")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ResManagerDataSet : System.Data.DataSet {
        
        private ARTIKUJTDataTable tableARTIKUJT;
        
        private ARTIKUJT_FURNITORETDataTable tableARTIKUJT_FURNITORET;
        
        private BLERJETDataTable tableBLERJET;
        
        private BLERJET_ARTIKUJTDataTable tableBLERJET_ARTIKUJT;
        
        private CMIMETDataTable tableCMIMET;
        
        private CMIMET_PERIUDHADataTable tableCMIMET_PERIUDHA;
        
        private CMIMET_PERIUDHA_RECETATDataTable tableCMIMET_PERIUDHA_RECETAT;
        
        private CMIMET_RECETATDataTable tableCMIMET_RECETAT;
        
        private FATURA_ARTIKUJTDataTable tableFATURA_ARTIKUJT;
        
        private FATURA_RECETATDataTable tableFATURA_RECETAT;
        
        private FATURATDataTable tableFATURAT;
        
        private FAVORITEDataTable tableFAVORITE;
        
        private FORMA_PAGESADataTable tableFORMA_PAGESA;
        
        private FURNITORETDataTable tableFURNITORET;
        
        private GRUPIDataTable tableGRUPI;
        
        private KATEGORIA_SHPENZIMIMUJORDataTable tableKATEGORIA_SHPENZIMIMUJOR;
        
        private KATEGORITE_ARTIKUJTDataTable tableKATEGORITE_ARTIKUJT;
        
        private KATEGORITE_RECETATDataTable tableKATEGORITE_RECETAT;
        
        private KATEGORITE_SHPENZIMETDataTable tableKATEGORITE_SHPENZIMET;
        
        private KATEGORITE_TAVOLINATDataTable tableKATEGORITE_TAVOLINAT;
        
        private KLIENTETDataTable tableKLIENTET;
        
        private KLIENTET_RESTORANTIDataTable tableKLIENTET_RESTORANTI;
        
        private NJESITEDataTable tableNJESITE;
        
        private OFERTATDataTable tableOFERTAT;
        
        private OFERTAT_BLERJEDataTable tableOFERTAT_BLERJE;
        
        private PERIUDHATDataTable tablePERIUDHAT;
        
        private PERSONELIDataTable tablePERSONELI;
        
        private RECETA_ARTIKUJTDataTable tableRECETA_ARTIKUJT;
        
        private RECETATDataTable tableRECETAT;
        
        private REZERVIMETDataTable tableREZERVIMET;
        
        private REZERVIMI_TAVOLINATDataTable tableREZERVIMI_TAVOLINAT;
        
        private ROLETDataTable tableROLET;
        
        private SHPENZIMETDataTable tableSHPENZIMET;
        
        private SHPENZIMET_MUJOREDataTable tableSHPENZIMET_MUJORE;
        
        private TAVOLINATDataTable tableTAVOLINAT;
        
        private TURNETDataTable tableTURNET;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ResManagerDataSet() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected ResManagerDataSet(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["ARTIKUJT"] != null)) {
                    base.Tables.Add(new ARTIKUJTDataTable(ds.Tables["ARTIKUJT"]));
                }
                if ((ds.Tables["ARTIKUJT_FURNITORET"] != null)) {
                    base.Tables.Add(new ARTIKUJT_FURNITORETDataTable(ds.Tables["ARTIKUJT_FURNITORET"]));
                }
                if ((ds.Tables["BLERJET"] != null)) {
                    base.Tables.Add(new BLERJETDataTable(ds.Tables["BLERJET"]));
                }
                if ((ds.Tables["BLERJET_ARTIKUJT"] != null)) {
                    base.Tables.Add(new BLERJET_ARTIKUJTDataTable(ds.Tables["BLERJET_ARTIKUJT"]));
                }
                if ((ds.Tables["CMIMET"] != null)) {
                    base.Tables.Add(new CMIMETDataTable(ds.Tables["CMIMET"]));
                }
                if ((ds.Tables["CMIMET_PERIUDHA"] != null)) {
                    base.Tables.Add(new CMIMET_PERIUDHADataTable(ds.Tables["CMIMET_PERIUDHA"]));
                }
                if ((ds.Tables["CMIMET_PERIUDHA_RECETAT"] != null)) {
                    base.Tables.Add(new CMIMET_PERIUDHA_RECETATDataTable(ds.Tables["CMIMET_PERIUDHA_RECETAT"]));
                }
                if ((ds.Tables["CMIMET_RECETAT"] != null)) {
                    base.Tables.Add(new CMIMET_RECETATDataTable(ds.Tables["CMIMET_RECETAT"]));
                }
                if ((ds.Tables["FATURA_ARTIKUJT"] != null)) {
                    base.Tables.Add(new FATURA_ARTIKUJTDataTable(ds.Tables["FATURA_ARTIKUJT"]));
                }
                if ((ds.Tables["FATURA_RECETAT"] != null)) {
                    base.Tables.Add(new FATURA_RECETATDataTable(ds.Tables["FATURA_RECETAT"]));
                }
                if ((ds.Tables["FATURAT"] != null)) {
                    base.Tables.Add(new FATURATDataTable(ds.Tables["FATURAT"]));
                }
                if ((ds.Tables["FAVORITE"] != null)) {
                    base.Tables.Add(new FAVORITEDataTable(ds.Tables["FAVORITE"]));
                }
                if ((ds.Tables["FORMA_PAGESA"] != null)) {
                    base.Tables.Add(new FORMA_PAGESADataTable(ds.Tables["FORMA_PAGESA"]));
                }
                if ((ds.Tables["FURNITORET"] != null)) {
                    base.Tables.Add(new FURNITORETDataTable(ds.Tables["FURNITORET"]));
                }
                if ((ds.Tables["GRUPI"] != null)) {
                    base.Tables.Add(new GRUPIDataTable(ds.Tables["GRUPI"]));
                }
                if ((ds.Tables["KATEGORIA_SHPENZIMIMUJOR"] != null)) {
                    base.Tables.Add(new KATEGORIA_SHPENZIMIMUJORDataTable(ds.Tables["KATEGORIA_SHPENZIMIMUJOR"]));
                }
                if ((ds.Tables["KATEGORITE_ARTIKUJT"] != null)) {
                    base.Tables.Add(new KATEGORITE_ARTIKUJTDataTable(ds.Tables["KATEGORITE_ARTIKUJT"]));
                }
                if ((ds.Tables["KATEGORITE_RECETAT"] != null)) {
                    base.Tables.Add(new KATEGORITE_RECETATDataTable(ds.Tables["KATEGORITE_RECETAT"]));
                }
                if ((ds.Tables["KATEGORITE_SHPENZIMET"] != null)) {
                    base.Tables.Add(new KATEGORITE_SHPENZIMETDataTable(ds.Tables["KATEGORITE_SHPENZIMET"]));
                }
                if ((ds.Tables["KATEGORITE_TAVOLINAT"] != null)) {
                    base.Tables.Add(new KATEGORITE_TAVOLINATDataTable(ds.Tables["KATEGORITE_TAVOLINAT"]));
                }
                if ((ds.Tables["KLIENTET"] != null)) {
                    base.Tables.Add(new KLIENTETDataTable(ds.Tables["KLIENTET"]));
                }
                if ((ds.Tables["KLIENTET_RESTORANTI"] != null)) {
                    base.Tables.Add(new KLIENTET_RESTORANTIDataTable(ds.Tables["KLIENTET_RESTORANTI"]));
                }
                if ((ds.Tables["NJESITE"] != null)) {
                    base.Tables.Add(new NJESITEDataTable(ds.Tables["NJESITE"]));
                }
                if ((ds.Tables["OFERTAT"] != null)) {
                    base.Tables.Add(new OFERTATDataTable(ds.Tables["OFERTAT"]));
                }
                if ((ds.Tables["OFERTAT_BLERJE"] != null)) {
                    base.Tables.Add(new OFERTAT_BLERJEDataTable(ds.Tables["OFERTAT_BLERJE"]));
                }
                if ((ds.Tables["PERIUDHAT"] != null)) {
                    base.Tables.Add(new PERIUDHATDataTable(ds.Tables["PERIUDHAT"]));
                }
                if ((ds.Tables["PERSONELI"] != null)) {
                    base.Tables.Add(new PERSONELIDataTable(ds.Tables["PERSONELI"]));
                }
                if ((ds.Tables["RECETA_ARTIKUJT"] != null)) {
                    base.Tables.Add(new RECETA_ARTIKUJTDataTable(ds.Tables["RECETA_ARTIKUJT"]));
                }
                if ((ds.Tables["RECETAT"] != null)) {
                    base.Tables.Add(new RECETATDataTable(ds.Tables["RECETAT"]));
                }
                if ((ds.Tables["REZERVIMET"] != null)) {
                    base.Tables.Add(new REZERVIMETDataTable(ds.Tables["REZERVIMET"]));
                }
                if ((ds.Tables["REZERVIMI_TAVOLINAT"] != null)) {
                    base.Tables.Add(new REZERVIMI_TAVOLINATDataTable(ds.Tables["REZERVIMI_TAVOLINAT"]));
                }
                if ((ds.Tables["ROLET"] != null)) {
                    base.Tables.Add(new ROLETDataTable(ds.Tables["ROLET"]));
                }
                if ((ds.Tables["SHPENZIMET"] != null)) {
                    base.Tables.Add(new SHPENZIMETDataTable(ds.Tables["SHPENZIMET"]));
                }
                if ((ds.Tables["SHPENZIMET_MUJORE"] != null)) {
                    base.Tables.Add(new SHPENZIMET_MUJOREDataTable(ds.Tables["SHPENZIMET_MUJORE"]));
                }
                if ((ds.Tables["TAVOLINAT"] != null)) {
                    base.Tables.Add(new TAVOLINATDataTable(ds.Tables["TAVOLINAT"]));
                }
                if ((ds.Tables["TURNET"] != null)) {
                    base.Tables.Add(new TURNETDataTable(ds.Tables["TURNET"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ARTIKUJTDataTable ARTIKUJT {
            get {
                return this.tableARTIKUJT;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ARTIKUJT_FURNITORETDataTable ARTIKUJT_FURNITORET {
            get {
                return this.tableARTIKUJT_FURNITORET;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BLERJETDataTable BLERJET {
            get {
                return this.tableBLERJET;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BLERJET_ARTIKUJTDataTable BLERJET_ARTIKUJT {
            get {
                return this.tableBLERJET_ARTIKUJT;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CMIMETDataTable CMIMET {
            get {
                return this.tableCMIMET;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CMIMET_PERIUDHADataTable CMIMET_PERIUDHA {
            get {
                return this.tableCMIMET_PERIUDHA;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CMIMET_PERIUDHA_RECETATDataTable CMIMET_PERIUDHA_RECETAT {
            get {
                return this.tableCMIMET_PERIUDHA_RECETAT;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CMIMET_RECETATDataTable CMIMET_RECETAT {
            get {
                return this.tableCMIMET_RECETAT;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FATURA_ARTIKUJTDataTable FATURA_ARTIKUJT {
            get {
                return this.tableFATURA_ARTIKUJT;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FATURA_RECETATDataTable FATURA_RECETAT {
            get {
                return this.tableFATURA_RECETAT;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FATURATDataTable FATURAT {
            get {
                return this.tableFATURAT;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FAVORITEDataTable FAVORITE {
            get {
                return this.tableFAVORITE;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FORMA_PAGESADataTable FORMA_PAGESA {
            get {
                return this.tableFORMA_PAGESA;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FURNITORETDataTable FURNITORET {
            get {
                return this.tableFURNITORET;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GRUPIDataTable GRUPI {
            get {
                return this.tableGRUPI;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public KATEGORIA_SHPENZIMIMUJORDataTable KATEGORIA_SHPENZIMIMUJOR {
            get {
                return this.tableKATEGORIA_SHPENZIMIMUJOR;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public KATEGORITE_ARTIKUJTDataTable KATEGORITE_ARTIKUJT {
            get {
                return this.tableKATEGORITE_ARTIKUJT;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public KATEGORITE_RECETATDataTable KATEGORITE_RECETAT {
            get {
                return this.tableKATEGORITE_RECETAT;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public KATEGORITE_SHPENZIMETDataTable KATEGORITE_SHPENZIMET {
            get {
                return this.tableKATEGORITE_SHPENZIMET;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public KATEGORITE_TAVOLINATDataTable KATEGORITE_TAVOLINAT {
            get {
                return this.tableKATEGORITE_TAVOLINAT;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public KLIENTETDataTable KLIENTET {
            get {
                return this.tableKLIENTET;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public KLIENTET_RESTORANTIDataTable KLIENTET_RESTORANTI {
            get {
                return this.tableKLIENTET_RESTORANTI;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public NJESITEDataTable NJESITE {
            get {
                return this.tableNJESITE;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public OFERTATDataTable OFERTAT {
            get {
                return this.tableOFERTAT;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public OFERTAT_BLERJEDataTable OFERTAT_BLERJE {
            get {
                return this.tableOFERTAT_BLERJE;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PERIUDHATDataTable PERIUDHAT {
            get {
                return this.tablePERIUDHAT;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PERSONELIDataTable PERSONELI {
            get {
                return this.tablePERSONELI;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RECETA_ARTIKUJTDataTable RECETA_ARTIKUJT {
            get {
                return this.tableRECETA_ARTIKUJT;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RECETATDataTable RECETAT {
            get {
                return this.tableRECETAT;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public REZERVIMETDataTable REZERVIMET {
            get {
                return this.tableREZERVIMET;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public REZERVIMI_TAVOLINATDataTable REZERVIMI_TAVOLINAT {
            get {
                return this.tableREZERVIMI_TAVOLINAT;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ROLETDataTable ROLET {
            get {
                return this.tableROLET;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SHPENZIMETDataTable SHPENZIMET {
            get {
                return this.tableSHPENZIMET;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SHPENZIMET_MUJOREDataTable SHPENZIMET_MUJORE {
            get {
                return this.tableSHPENZIMET_MUJORE;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TAVOLINATDataTable TAVOLINAT {
            get {
                return this.tableTAVOLINAT;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TURNETDataTable TURNET {
            get {
                return this.tableTURNET;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            ResManagerDataSet cln = ((ResManagerDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ARTIKUJT"] != null)) {
                    base.Tables.Add(new ARTIKUJTDataTable(ds.Tables["ARTIKUJT"]));
                }
                if ((ds.Tables["ARTIKUJT_FURNITORET"] != null)) {
                    base.Tables.Add(new ARTIKUJT_FURNITORETDataTable(ds.Tables["ARTIKUJT_FURNITORET"]));
                }
                if ((ds.Tables["BLERJET"] != null)) {
                    base.Tables.Add(new BLERJETDataTable(ds.Tables["BLERJET"]));
                }
                if ((ds.Tables["BLERJET_ARTIKUJT"] != null)) {
                    base.Tables.Add(new BLERJET_ARTIKUJTDataTable(ds.Tables["BLERJET_ARTIKUJT"]));
                }
                if ((ds.Tables["CMIMET"] != null)) {
                    base.Tables.Add(new CMIMETDataTable(ds.Tables["CMIMET"]));
                }
                if ((ds.Tables["CMIMET_PERIUDHA"] != null)) {
                    base.Tables.Add(new CMIMET_PERIUDHADataTable(ds.Tables["CMIMET_PERIUDHA"]));
                }
                if ((ds.Tables["CMIMET_PERIUDHA_RECETAT"] != null)) {
                    base.Tables.Add(new CMIMET_PERIUDHA_RECETATDataTable(ds.Tables["CMIMET_PERIUDHA_RECETAT"]));
                }
                if ((ds.Tables["CMIMET_RECETAT"] != null)) {
                    base.Tables.Add(new CMIMET_RECETATDataTable(ds.Tables["CMIMET_RECETAT"]));
                }
                if ((ds.Tables["FATURA_ARTIKUJT"] != null)) {
                    base.Tables.Add(new FATURA_ARTIKUJTDataTable(ds.Tables["FATURA_ARTIKUJT"]));
                }
                if ((ds.Tables["FATURA_RECETAT"] != null)) {
                    base.Tables.Add(new FATURA_RECETATDataTable(ds.Tables["FATURA_RECETAT"]));
                }
                if ((ds.Tables["FATURAT"] != null)) {
                    base.Tables.Add(new FATURATDataTable(ds.Tables["FATURAT"]));
                }
                if ((ds.Tables["FAVORITE"] != null)) {
                    base.Tables.Add(new FAVORITEDataTable(ds.Tables["FAVORITE"]));
                }
                if ((ds.Tables["FORMA_PAGESA"] != null)) {
                    base.Tables.Add(new FORMA_PAGESADataTable(ds.Tables["FORMA_PAGESA"]));
                }
                if ((ds.Tables["FURNITORET"] != null)) {
                    base.Tables.Add(new FURNITORETDataTable(ds.Tables["FURNITORET"]));
                }
                if ((ds.Tables["GRUPI"] != null)) {
                    base.Tables.Add(new GRUPIDataTable(ds.Tables["GRUPI"]));
                }
                if ((ds.Tables["KATEGORIA_SHPENZIMIMUJOR"] != null)) {
                    base.Tables.Add(new KATEGORIA_SHPENZIMIMUJORDataTable(ds.Tables["KATEGORIA_SHPENZIMIMUJOR"]));
                }
                if ((ds.Tables["KATEGORITE_ARTIKUJT"] != null)) {
                    base.Tables.Add(new KATEGORITE_ARTIKUJTDataTable(ds.Tables["KATEGORITE_ARTIKUJT"]));
                }
                if ((ds.Tables["KATEGORITE_RECETAT"] != null)) {
                    base.Tables.Add(new KATEGORITE_RECETATDataTable(ds.Tables["KATEGORITE_RECETAT"]));
                }
                if ((ds.Tables["KATEGORITE_SHPENZIMET"] != null)) {
                    base.Tables.Add(new KATEGORITE_SHPENZIMETDataTable(ds.Tables["KATEGORITE_SHPENZIMET"]));
                }
                if ((ds.Tables["KATEGORITE_TAVOLINAT"] != null)) {
                    base.Tables.Add(new KATEGORITE_TAVOLINATDataTable(ds.Tables["KATEGORITE_TAVOLINAT"]));
                }
                if ((ds.Tables["KLIENTET"] != null)) {
                    base.Tables.Add(new KLIENTETDataTable(ds.Tables["KLIENTET"]));
                }
                if ((ds.Tables["KLIENTET_RESTORANTI"] != null)) {
                    base.Tables.Add(new KLIENTET_RESTORANTIDataTable(ds.Tables["KLIENTET_RESTORANTI"]));
                }
                if ((ds.Tables["NJESITE"] != null)) {
                    base.Tables.Add(new NJESITEDataTable(ds.Tables["NJESITE"]));
                }
                if ((ds.Tables["OFERTAT"] != null)) {
                    base.Tables.Add(new OFERTATDataTable(ds.Tables["OFERTAT"]));
                }
                if ((ds.Tables["OFERTAT_BLERJE"] != null)) {
                    base.Tables.Add(new OFERTAT_BLERJEDataTable(ds.Tables["OFERTAT_BLERJE"]));
                }
                if ((ds.Tables["PERIUDHAT"] != null)) {
                    base.Tables.Add(new PERIUDHATDataTable(ds.Tables["PERIUDHAT"]));
                }
                if ((ds.Tables["PERSONELI"] != null)) {
                    base.Tables.Add(new PERSONELIDataTable(ds.Tables["PERSONELI"]));
                }
                if ((ds.Tables["RECETA_ARTIKUJT"] != null)) {
                    base.Tables.Add(new RECETA_ARTIKUJTDataTable(ds.Tables["RECETA_ARTIKUJT"]));
                }
                if ((ds.Tables["RECETAT"] != null)) {
                    base.Tables.Add(new RECETATDataTable(ds.Tables["RECETAT"]));
                }
                if ((ds.Tables["REZERVIMET"] != null)) {
                    base.Tables.Add(new REZERVIMETDataTable(ds.Tables["REZERVIMET"]));
                }
                if ((ds.Tables["REZERVIMI_TAVOLINAT"] != null)) {
                    base.Tables.Add(new REZERVIMI_TAVOLINATDataTable(ds.Tables["REZERVIMI_TAVOLINAT"]));
                }
                if ((ds.Tables["ROLET"] != null)) {
                    base.Tables.Add(new ROLETDataTable(ds.Tables["ROLET"]));
                }
                if ((ds.Tables["SHPENZIMET"] != null)) {
                    base.Tables.Add(new SHPENZIMETDataTable(ds.Tables["SHPENZIMET"]));
                }
                if ((ds.Tables["SHPENZIMET_MUJORE"] != null)) {
                    base.Tables.Add(new SHPENZIMET_MUJOREDataTable(ds.Tables["SHPENZIMET_MUJORE"]));
                }
                if ((ds.Tables["TAVOLINAT"] != null)) {
                    base.Tables.Add(new TAVOLINATDataTable(ds.Tables["TAVOLINAT"]));
                }
                if ((ds.Tables["TURNET"] != null)) {
                    base.Tables.Add(new TURNETDataTable(ds.Tables["TURNET"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableARTIKUJT = ((ARTIKUJTDataTable)(base.Tables["ARTIKUJT"]));
            if ((initTable == true)) {
                if ((this.tableARTIKUJT != null)) {
                    this.tableARTIKUJT.InitVars();
                }
            }
            this.tableARTIKUJT_FURNITORET = ((ARTIKUJT_FURNITORETDataTable)(base.Tables["ARTIKUJT_FURNITORET"]));
            if ((initTable == true)) {
                if ((this.tableARTIKUJT_FURNITORET != null)) {
                    this.tableARTIKUJT_FURNITORET.InitVars();
                }
            }
            this.tableBLERJET = ((BLERJETDataTable)(base.Tables["BLERJET"]));
            if ((initTable == true)) {
                if ((this.tableBLERJET != null)) {
                    this.tableBLERJET.InitVars();
                }
            }
            this.tableBLERJET_ARTIKUJT = ((BLERJET_ARTIKUJTDataTable)(base.Tables["BLERJET_ARTIKUJT"]));
            if ((initTable == true)) {
                if ((this.tableBLERJET_ARTIKUJT != null)) {
                    this.tableBLERJET_ARTIKUJT.InitVars();
                }
            }
            this.tableCMIMET = ((CMIMETDataTable)(base.Tables["CMIMET"]));
            if ((initTable == true)) {
                if ((this.tableCMIMET != null)) {
                    this.tableCMIMET.InitVars();
                }
            }
            this.tableCMIMET_PERIUDHA = ((CMIMET_PERIUDHADataTable)(base.Tables["CMIMET_PERIUDHA"]));
            if ((initTable == true)) {
                if ((this.tableCMIMET_PERIUDHA != null)) {
                    this.tableCMIMET_PERIUDHA.InitVars();
                }
            }
            this.tableCMIMET_PERIUDHA_RECETAT = ((CMIMET_PERIUDHA_RECETATDataTable)(base.Tables["CMIMET_PERIUDHA_RECETAT"]));
            if ((initTable == true)) {
                if ((this.tableCMIMET_PERIUDHA_RECETAT != null)) {
                    this.tableCMIMET_PERIUDHA_RECETAT.InitVars();
                }
            }
            this.tableCMIMET_RECETAT = ((CMIMET_RECETATDataTable)(base.Tables["CMIMET_RECETAT"]));
            if ((initTable == true)) {
                if ((this.tableCMIMET_RECETAT != null)) {
                    this.tableCMIMET_RECETAT.InitVars();
                }
            }
            this.tableFATURA_ARTIKUJT = ((FATURA_ARTIKUJTDataTable)(base.Tables["FATURA_ARTIKUJT"]));
            if ((initTable == true)) {
                if ((this.tableFATURA_ARTIKUJT != null)) {
                    this.tableFATURA_ARTIKUJT.InitVars();
                }
            }
            this.tableFATURA_RECETAT = ((FATURA_RECETATDataTable)(base.Tables["FATURA_RECETAT"]));
            if ((initTable == true)) {
                if ((this.tableFATURA_RECETAT != null)) {
                    this.tableFATURA_RECETAT.InitVars();
                }
            }
            this.tableFATURAT = ((FATURATDataTable)(base.Tables["FATURAT"]));
            if ((initTable == true)) {
                if ((this.tableFATURAT != null)) {
                    this.tableFATURAT.InitVars();
                }
            }
            this.tableFAVORITE = ((FAVORITEDataTable)(base.Tables["FAVORITE"]));
            if ((initTable == true)) {
                if ((this.tableFAVORITE != null)) {
                    this.tableFAVORITE.InitVars();
                }
            }
            this.tableFORMA_PAGESA = ((FORMA_PAGESADataTable)(base.Tables["FORMA_PAGESA"]));
            if ((initTable == true)) {
                if ((this.tableFORMA_PAGESA != null)) {
                    this.tableFORMA_PAGESA.InitVars();
                }
            }
            this.tableFURNITORET = ((FURNITORETDataTable)(base.Tables["FURNITORET"]));
            if ((initTable == true)) {
                if ((this.tableFURNITORET != null)) {
                    this.tableFURNITORET.InitVars();
                }
            }
            this.tableGRUPI = ((GRUPIDataTable)(base.Tables["GRUPI"]));
            if ((initTable == true)) {
                if ((this.tableGRUPI != null)) {
                    this.tableGRUPI.InitVars();
                }
            }
            this.tableKATEGORIA_SHPENZIMIMUJOR = ((KATEGORIA_SHPENZIMIMUJORDataTable)(base.Tables["KATEGORIA_SHPENZIMIMUJOR"]));
            if ((initTable == true)) {
                if ((this.tableKATEGORIA_SHPENZIMIMUJOR != null)) {
                    this.tableKATEGORIA_SHPENZIMIMUJOR.InitVars();
                }
            }
            this.tableKATEGORITE_ARTIKUJT = ((KATEGORITE_ARTIKUJTDataTable)(base.Tables["KATEGORITE_ARTIKUJT"]));
            if ((initTable == true)) {
                if ((this.tableKATEGORITE_ARTIKUJT != null)) {
                    this.tableKATEGORITE_ARTIKUJT.InitVars();
                }
            }
            this.tableKATEGORITE_RECETAT = ((KATEGORITE_RECETATDataTable)(base.Tables["KATEGORITE_RECETAT"]));
            if ((initTable == true)) {
                if ((this.tableKATEGORITE_RECETAT != null)) {
                    this.tableKATEGORITE_RECETAT.InitVars();
                }
            }
            this.tableKATEGORITE_SHPENZIMET = ((KATEGORITE_SHPENZIMETDataTable)(base.Tables["KATEGORITE_SHPENZIMET"]));
            if ((initTable == true)) {
                if ((this.tableKATEGORITE_SHPENZIMET != null)) {
                    this.tableKATEGORITE_SHPENZIMET.InitVars();
                }
            }
            this.tableKATEGORITE_TAVOLINAT = ((KATEGORITE_TAVOLINATDataTable)(base.Tables["KATEGORITE_TAVOLINAT"]));
            if ((initTable == true)) {
                if ((this.tableKATEGORITE_TAVOLINAT != null)) {
                    this.tableKATEGORITE_TAVOLINAT.InitVars();
                }
            }
            this.tableKLIENTET = ((KLIENTETDataTable)(base.Tables["KLIENTET"]));
            if ((initTable == true)) {
                if ((this.tableKLIENTET != null)) {
                    this.tableKLIENTET.InitVars();
                }
            }
            this.tableKLIENTET_RESTORANTI = ((KLIENTET_RESTORANTIDataTable)(base.Tables["KLIENTET_RESTORANTI"]));
            if ((initTable == true)) {
                if ((this.tableKLIENTET_RESTORANTI != null)) {
                    this.tableKLIENTET_RESTORANTI.InitVars();
                }
            }
            this.tableNJESITE = ((NJESITEDataTable)(base.Tables["NJESITE"]));
            if ((initTable == true)) {
                if ((this.tableNJESITE != null)) {
                    this.tableNJESITE.InitVars();
                }
            }
            this.tableOFERTAT = ((OFERTATDataTable)(base.Tables["OFERTAT"]));
            if ((initTable == true)) {
                if ((this.tableOFERTAT != null)) {
                    this.tableOFERTAT.InitVars();
                }
            }
            this.tableOFERTAT_BLERJE = ((OFERTAT_BLERJEDataTable)(base.Tables["OFERTAT_BLERJE"]));
            if ((initTable == true)) {
                if ((this.tableOFERTAT_BLERJE != null)) {
                    this.tableOFERTAT_BLERJE.InitVars();
                }
            }
            this.tablePERIUDHAT = ((PERIUDHATDataTable)(base.Tables["PERIUDHAT"]));
            if ((initTable == true)) {
                if ((this.tablePERIUDHAT != null)) {
                    this.tablePERIUDHAT.InitVars();
                }
            }
            this.tablePERSONELI = ((PERSONELIDataTable)(base.Tables["PERSONELI"]));
            if ((initTable == true)) {
                if ((this.tablePERSONELI != null)) {
                    this.tablePERSONELI.InitVars();
                }
            }
            this.tableRECETA_ARTIKUJT = ((RECETA_ARTIKUJTDataTable)(base.Tables["RECETA_ARTIKUJT"]));
            if ((initTable == true)) {
                if ((this.tableRECETA_ARTIKUJT != null)) {
                    this.tableRECETA_ARTIKUJT.InitVars();
                }
            }
            this.tableRECETAT = ((RECETATDataTable)(base.Tables["RECETAT"]));
            if ((initTable == true)) {
                if ((this.tableRECETAT != null)) {
                    this.tableRECETAT.InitVars();
                }
            }
            this.tableREZERVIMET = ((REZERVIMETDataTable)(base.Tables["REZERVIMET"]));
            if ((initTable == true)) {
                if ((this.tableREZERVIMET != null)) {
                    this.tableREZERVIMET.InitVars();
                }
            }
            this.tableREZERVIMI_TAVOLINAT = ((REZERVIMI_TAVOLINATDataTable)(base.Tables["REZERVIMI_TAVOLINAT"]));
            if ((initTable == true)) {
                if ((this.tableREZERVIMI_TAVOLINAT != null)) {
                    this.tableREZERVIMI_TAVOLINAT.InitVars();
                }
            }
            this.tableROLET = ((ROLETDataTable)(base.Tables["ROLET"]));
            if ((initTable == true)) {
                if ((this.tableROLET != null)) {
                    this.tableROLET.InitVars();
                }
            }
            this.tableSHPENZIMET = ((SHPENZIMETDataTable)(base.Tables["SHPENZIMET"]));
            if ((initTable == true)) {
                if ((this.tableSHPENZIMET != null)) {
                    this.tableSHPENZIMET.InitVars();
                }
            }
            this.tableSHPENZIMET_MUJORE = ((SHPENZIMET_MUJOREDataTable)(base.Tables["SHPENZIMET_MUJORE"]));
            if ((initTable == true)) {
                if ((this.tableSHPENZIMET_MUJORE != null)) {
                    this.tableSHPENZIMET_MUJORE.InitVars();
                }
            }
            this.tableTAVOLINAT = ((TAVOLINATDataTable)(base.Tables["TAVOLINAT"]));
            if ((initTable == true)) {
                if ((this.tableTAVOLINAT != null)) {
                    this.tableTAVOLINAT.InitVars();
                }
            }
            this.tableTURNET = ((TURNETDataTable)(base.Tables["TURNET"]));
            if ((initTable == true)) {
                if ((this.tableTURNET != null)) {
                    this.tableTURNET.InitVars();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "ResManagerDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ResManagerDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableARTIKUJT = new ARTIKUJTDataTable();
            base.Tables.Add(this.tableARTIKUJT);
            this.tableARTIKUJT_FURNITORET = new ARTIKUJT_FURNITORETDataTable();
            base.Tables.Add(this.tableARTIKUJT_FURNITORET);
            this.tableBLERJET = new BLERJETDataTable();
            base.Tables.Add(this.tableBLERJET);
            this.tableBLERJET_ARTIKUJT = new BLERJET_ARTIKUJTDataTable();
            base.Tables.Add(this.tableBLERJET_ARTIKUJT);
            this.tableCMIMET = new CMIMETDataTable();
            base.Tables.Add(this.tableCMIMET);
            this.tableCMIMET_PERIUDHA = new CMIMET_PERIUDHADataTable();
            base.Tables.Add(this.tableCMIMET_PERIUDHA);
            this.tableCMIMET_PERIUDHA_RECETAT = new CMIMET_PERIUDHA_RECETATDataTable();
            base.Tables.Add(this.tableCMIMET_PERIUDHA_RECETAT);
            this.tableCMIMET_RECETAT = new CMIMET_RECETATDataTable();
            base.Tables.Add(this.tableCMIMET_RECETAT);
            this.tableFATURA_ARTIKUJT = new FATURA_ARTIKUJTDataTable();
            base.Tables.Add(this.tableFATURA_ARTIKUJT);
            this.tableFATURA_RECETAT = new FATURA_RECETATDataTable();
            base.Tables.Add(this.tableFATURA_RECETAT);
            this.tableFATURAT = new FATURATDataTable();
            base.Tables.Add(this.tableFATURAT);
            this.tableFAVORITE = new FAVORITEDataTable();
            base.Tables.Add(this.tableFAVORITE);
            this.tableFORMA_PAGESA = new FORMA_PAGESADataTable();
            base.Tables.Add(this.tableFORMA_PAGESA);
            this.tableFURNITORET = new FURNITORETDataTable();
            base.Tables.Add(this.tableFURNITORET);
            this.tableGRUPI = new GRUPIDataTable();
            base.Tables.Add(this.tableGRUPI);
            this.tableKATEGORIA_SHPENZIMIMUJOR = new KATEGORIA_SHPENZIMIMUJORDataTable();
            base.Tables.Add(this.tableKATEGORIA_SHPENZIMIMUJOR);
            this.tableKATEGORITE_ARTIKUJT = new KATEGORITE_ARTIKUJTDataTable();
            base.Tables.Add(this.tableKATEGORITE_ARTIKUJT);
            this.tableKATEGORITE_RECETAT = new KATEGORITE_RECETATDataTable();
            base.Tables.Add(this.tableKATEGORITE_RECETAT);
            this.tableKATEGORITE_SHPENZIMET = new KATEGORITE_SHPENZIMETDataTable();
            base.Tables.Add(this.tableKATEGORITE_SHPENZIMET);
            this.tableKATEGORITE_TAVOLINAT = new KATEGORITE_TAVOLINATDataTable();
            base.Tables.Add(this.tableKATEGORITE_TAVOLINAT);
            this.tableKLIENTET = new KLIENTETDataTable();
            base.Tables.Add(this.tableKLIENTET);
            this.tableKLIENTET_RESTORANTI = new KLIENTET_RESTORANTIDataTable();
            base.Tables.Add(this.tableKLIENTET_RESTORANTI);
            this.tableNJESITE = new NJESITEDataTable();
            base.Tables.Add(this.tableNJESITE);
            this.tableOFERTAT = new OFERTATDataTable();
            base.Tables.Add(this.tableOFERTAT);
            this.tableOFERTAT_BLERJE = new OFERTAT_BLERJEDataTable();
            base.Tables.Add(this.tableOFERTAT_BLERJE);
            this.tablePERIUDHAT = new PERIUDHATDataTable();
            base.Tables.Add(this.tablePERIUDHAT);
            this.tablePERSONELI = new PERSONELIDataTable();
            base.Tables.Add(this.tablePERSONELI);
            this.tableRECETA_ARTIKUJT = new RECETA_ARTIKUJTDataTable();
            base.Tables.Add(this.tableRECETA_ARTIKUJT);
            this.tableRECETAT = new RECETATDataTable();
            base.Tables.Add(this.tableRECETAT);
            this.tableREZERVIMET = new REZERVIMETDataTable();
            base.Tables.Add(this.tableREZERVIMET);
            this.tableREZERVIMI_TAVOLINAT = new REZERVIMI_TAVOLINATDataTable();
            base.Tables.Add(this.tableREZERVIMI_TAVOLINAT);
            this.tableROLET = new ROLETDataTable();
            base.Tables.Add(this.tableROLET);
            this.tableSHPENZIMET = new SHPENZIMETDataTable();
            base.Tables.Add(this.tableSHPENZIMET);
            this.tableSHPENZIMET_MUJORE = new SHPENZIMET_MUJOREDataTable();
            base.Tables.Add(this.tableSHPENZIMET_MUJORE);
            this.tableTAVOLINAT = new TAVOLINATDataTable();
            base.Tables.Add(this.tableTAVOLINAT);
            this.tableTURNET = new TURNETDataTable();
            base.Tables.Add(this.tableTURNET);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeARTIKUJT() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeARTIKUJT_FURNITORET() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeBLERJET() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeBLERJET_ARTIKUJT() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCMIMET() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCMIMET_PERIUDHA() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCMIMET_PERIUDHA_RECETAT() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCMIMET_RECETAT() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeFATURA_ARTIKUJT() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeFATURA_RECETAT() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeFATURAT() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeFAVORITE() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeFORMA_PAGESA() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeFURNITORET() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGRUPI() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeKATEGORIA_SHPENZIMIMUJOR() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeKATEGORITE_ARTIKUJT() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeKATEGORITE_RECETAT() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeKATEGORITE_SHPENZIMET() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeKATEGORITE_TAVOLINAT() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeKLIENTET() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeKLIENTET_RESTORANTI() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeNJESITE() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeOFERTAT() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeOFERTAT_BLERJE() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePERIUDHAT() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePERSONELI() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRECETA_ARTIKUJT() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRECETAT() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeREZERVIMET() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeREZERVIMI_TAVOLINAT() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeROLET() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSHPENZIMET() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSHPENZIMET_MUJORE() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTAVOLINAT() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTURNET() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            ResManagerDataSet ds = new ResManagerDataSet();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void ARTIKUJTRowChangeEventHandler(object sender, ARTIKUJTRowChangeEvent e);
        
        public delegate void ARTIKUJT_FURNITORETRowChangeEventHandler(object sender, ARTIKUJT_FURNITORETRowChangeEvent e);
        
        public delegate void BLERJETRowChangeEventHandler(object sender, BLERJETRowChangeEvent e);
        
        public delegate void BLERJET_ARTIKUJTRowChangeEventHandler(object sender, BLERJET_ARTIKUJTRowChangeEvent e);
        
        public delegate void CMIMETRowChangeEventHandler(object sender, CMIMETRowChangeEvent e);
        
        public delegate void CMIMET_PERIUDHARowChangeEventHandler(object sender, CMIMET_PERIUDHARowChangeEvent e);
        
        public delegate void CMIMET_PERIUDHA_RECETATRowChangeEventHandler(object sender, CMIMET_PERIUDHA_RECETATRowChangeEvent e);
        
        public delegate void CMIMET_RECETATRowChangeEventHandler(object sender, CMIMET_RECETATRowChangeEvent e);
        
        public delegate void FATURA_ARTIKUJTRowChangeEventHandler(object sender, FATURA_ARTIKUJTRowChangeEvent e);
        
        public delegate void FATURA_RECETATRowChangeEventHandler(object sender, FATURA_RECETATRowChangeEvent e);
        
        public delegate void FATURATRowChangeEventHandler(object sender, FATURATRowChangeEvent e);
        
        public delegate void FAVORITERowChangeEventHandler(object sender, FAVORITERowChangeEvent e);
        
        public delegate void FORMA_PAGESARowChangeEventHandler(object sender, FORMA_PAGESARowChangeEvent e);
        
        public delegate void FURNITORETRowChangeEventHandler(object sender, FURNITORETRowChangeEvent e);
        
        public delegate void GRUPIRowChangeEventHandler(object sender, GRUPIRowChangeEvent e);
        
        public delegate void KATEGORIA_SHPENZIMIMUJORRowChangeEventHandler(object sender, KATEGORIA_SHPENZIMIMUJORRowChangeEvent e);
        
        public delegate void KATEGORITE_ARTIKUJTRowChangeEventHandler(object sender, KATEGORITE_ARTIKUJTRowChangeEvent e);
        
        public delegate void KATEGORITE_RECETATRowChangeEventHandler(object sender, KATEGORITE_RECETATRowChangeEvent e);
        
        public delegate void KATEGORITE_SHPENZIMETRowChangeEventHandler(object sender, KATEGORITE_SHPENZIMETRowChangeEvent e);
        
        public delegate void KATEGORITE_TAVOLINATRowChangeEventHandler(object sender, KATEGORITE_TAVOLINATRowChangeEvent e);
        
        public delegate void KLIENTETRowChangeEventHandler(object sender, KLIENTETRowChangeEvent e);
        
        public delegate void KLIENTET_RESTORANTIRowChangeEventHandler(object sender, KLIENTET_RESTORANTIRowChangeEvent e);
        
        public delegate void NJESITERowChangeEventHandler(object sender, NJESITERowChangeEvent e);
        
        public delegate void OFERTATRowChangeEventHandler(object sender, OFERTATRowChangeEvent e);
        
        public delegate void OFERTAT_BLERJERowChangeEventHandler(object sender, OFERTAT_BLERJERowChangeEvent e);
        
        public delegate void PERIUDHATRowChangeEventHandler(object sender, PERIUDHATRowChangeEvent e);
        
        public delegate void PERSONELIRowChangeEventHandler(object sender, PERSONELIRowChangeEvent e);
        
        public delegate void RECETA_ARTIKUJTRowChangeEventHandler(object sender, RECETA_ARTIKUJTRowChangeEvent e);
        
        public delegate void RECETATRowChangeEventHandler(object sender, RECETATRowChangeEvent e);
        
        public delegate void REZERVIMETRowChangeEventHandler(object sender, REZERVIMETRowChangeEvent e);
        
        public delegate void REZERVIMI_TAVOLINATRowChangeEventHandler(object sender, REZERVIMI_TAVOLINATRowChangeEvent e);
        
        public delegate void ROLETRowChangeEventHandler(object sender, ROLETRowChangeEvent e);
        
        public delegate void SHPENZIMETRowChangeEventHandler(object sender, SHPENZIMETRowChangeEvent e);
        
        public delegate void SHPENZIMET_MUJORERowChangeEventHandler(object sender, SHPENZIMET_MUJORERowChangeEvent e);
        
        public delegate void TAVOLINATRowChangeEventHandler(object sender, TAVOLINATRowChangeEvent e);
        
        public delegate void TURNETRowChangeEventHandler(object sender, TURNETRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ARTIKUJTDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnID_ARTIKULLI;
            
            private System.Data.DataColumn columnID_KATEGORIAARTIKULLI;
            
            private System.Data.DataColumn columnNUMRI_TOTAL;
            
            private System.Data.DataColumn columnSASIA_SKORTE;
            
            private System.Data.DataColumn columnARTIKULL_KONSUMI;
            
            private System.Data.DataColumn columnID_NJESIA;
            
            private System.Data.DataColumn columnEMRI;
            
            private System.Data.DataColumn columnFOTO;
            
            private System.Data.DataColumn columnDISPONUESHEM;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ARTIKUJTDataTable() {
                this.TableName = "ARTIKUJT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ARTIKUJTDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ARTIKUJTDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_ARTIKULLIColumn {
                get {
                    return this.columnID_ARTIKULLI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_KATEGORIAARTIKULLIColumn {
                get {
                    return this.columnID_KATEGORIAARTIKULLI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NUMRI_TOTALColumn {
                get {
                    return this.columnNUMRI_TOTAL;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SASIA_SKORTEColumn {
                get {
                    return this.columnSASIA_SKORTE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ARTIKULL_KONSUMIColumn {
                get {
                    return this.columnARTIKULL_KONSUMI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_NJESIAColumn {
                get {
                    return this.columnID_NJESIA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EMRIColumn {
                get {
                    return this.columnEMRI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FOTOColumn {
                get {
                    return this.columnFOTO;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DISPONUESHEMColumn {
                get {
                    return this.columnDISPONUESHEM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ARTIKUJTRow this[int index] {
                get {
                    return ((ARTIKUJTRow)(this.Rows[index]));
                }
            }
            
            public event ARTIKUJTRowChangeEventHandler ARTIKUJTRowChanging;
            
            public event ARTIKUJTRowChangeEventHandler ARTIKUJTRowChanged;
            
            public event ARTIKUJTRowChangeEventHandler ARTIKUJTRowDeleting;
            
            public event ARTIKUJTRowChangeEventHandler ARTIKUJTRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddARTIKUJTRow(ARTIKUJTRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ARTIKUJTRow AddARTIKUJTRow(int ID_KATEGORIAARTIKULLI, double NUMRI_TOTAL, double SASIA_SKORTE, bool ARTIKULL_KONSUMI, int ID_NJESIA, string EMRI, string FOTO, bool DISPONUESHEM) {
                ARTIKUJTRow rowARTIKUJTRow = ((ARTIKUJTRow)(this.NewRow()));
                rowARTIKUJTRow.ItemArray = new object[] {
                        null,
                        ID_KATEGORIAARTIKULLI,
                        NUMRI_TOTAL,
                        SASIA_SKORTE,
                        ARTIKULL_KONSUMI,
                        ID_NJESIA,
                        EMRI,
                        FOTO,
                        DISPONUESHEM};
                this.Rows.Add(rowARTIKUJTRow);
                return rowARTIKUJTRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ARTIKUJTRow FindByID_ARTIKULLI(int ID_ARTIKULLI) {
                return ((ARTIKUJTRow)(this.Rows.Find(new object[] {
                            ID_ARTIKULLI})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                ARTIKUJTDataTable cln = ((ARTIKUJTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new ARTIKUJTDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID_ARTIKULLI = base.Columns["ID_ARTIKULLI"];
                this.columnID_KATEGORIAARTIKULLI = base.Columns["ID_KATEGORIAARTIKULLI"];
                this.columnNUMRI_TOTAL = base.Columns["NUMRI_TOTAL"];
                this.columnSASIA_SKORTE = base.Columns["SASIA_SKORTE"];
                this.columnARTIKULL_KONSUMI = base.Columns["ARTIKULL_KONSUMI"];
                this.columnID_NJESIA = base.Columns["ID_NJESIA"];
                this.columnEMRI = base.Columns["EMRI"];
                this.columnFOTO = base.Columns["FOTO"];
                this.columnDISPONUESHEM = base.Columns["DISPONUESHEM"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID_ARTIKULLI = new System.Data.DataColumn("ID_ARTIKULLI", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_ARTIKULLI);
                this.columnID_KATEGORIAARTIKULLI = new System.Data.DataColumn("ID_KATEGORIAARTIKULLI", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_KATEGORIAARTIKULLI);
                this.columnNUMRI_TOTAL = new System.Data.DataColumn("NUMRI_TOTAL", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUMRI_TOTAL);
                this.columnSASIA_SKORTE = new System.Data.DataColumn("SASIA_SKORTE", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSASIA_SKORTE);
                this.columnARTIKULL_KONSUMI = new System.Data.DataColumn("ARTIKULL_KONSUMI", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnARTIKULL_KONSUMI);
                this.columnID_NJESIA = new System.Data.DataColumn("ID_NJESIA", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_NJESIA);
                this.columnEMRI = new System.Data.DataColumn("EMRI", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMRI);
                this.columnFOTO = new System.Data.DataColumn("FOTO", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFOTO);
                this.columnDISPONUESHEM = new System.Data.DataColumn("DISPONUESHEM", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDISPONUESHEM);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnID_ARTIKULLI}, true));
                this.columnID_ARTIKULLI.AutoIncrement = true;
                this.columnID_ARTIKULLI.AllowDBNull = false;
                this.columnID_ARTIKULLI.ReadOnly = true;
                this.columnID_ARTIKULLI.Unique = true;
                this.columnID_KATEGORIAARTIKULLI.AllowDBNull = false;
                this.columnNUMRI_TOTAL.AllowDBNull = false;
                this.columnSASIA_SKORTE.AllowDBNull = false;
                this.columnARTIKULL_KONSUMI.AllowDBNull = false;
                this.columnID_NJESIA.AllowDBNull = false;
                this.columnEMRI.AllowDBNull = false;
                this.columnEMRI.MaxLength = 50;
                this.columnFOTO.AllowDBNull = false;
                this.columnFOTO.MaxLength = 2147483647;
                this.columnDISPONUESHEM.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ARTIKUJTRow NewARTIKUJTRow() {
                return ((ARTIKUJTRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new ARTIKUJTRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(ARTIKUJTRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ARTIKUJTRowChanged != null)) {
                    this.ARTIKUJTRowChanged(this, new ARTIKUJTRowChangeEvent(((ARTIKUJTRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ARTIKUJTRowChanging != null)) {
                    this.ARTIKUJTRowChanging(this, new ARTIKUJTRowChangeEvent(((ARTIKUJTRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ARTIKUJTRowDeleted != null)) {
                    this.ARTIKUJTRowDeleted(this, new ARTIKUJTRowChangeEvent(((ARTIKUJTRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ARTIKUJTRowDeleting != null)) {
                    this.ARTIKUJTRowDeleting(this, new ARTIKUJTRowChangeEvent(((ARTIKUJTRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveARTIKUJTRow(ARTIKUJTRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                ResManagerDataSet ds = new ResManagerDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ARTIKUJTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ARTIKUJT_FURNITORETDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnID_FURNITORI;
            
            private System.Data.DataColumn columnID_ARTIKULLI;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ARTIKUJT_FURNITORETDataTable() {
                this.TableName = "ARTIKUJT_FURNITORET";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ARTIKUJT_FURNITORETDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ARTIKUJT_FURNITORETDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_FURNITORIColumn {
                get {
                    return this.columnID_FURNITORI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_ARTIKULLIColumn {
                get {
                    return this.columnID_ARTIKULLI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ARTIKUJT_FURNITORETRow this[int index] {
                get {
                    return ((ARTIKUJT_FURNITORETRow)(this.Rows[index]));
                }
            }
            
            public event ARTIKUJT_FURNITORETRowChangeEventHandler ARTIKUJT_FURNITORETRowChanging;
            
            public event ARTIKUJT_FURNITORETRowChangeEventHandler ARTIKUJT_FURNITORETRowChanged;
            
            public event ARTIKUJT_FURNITORETRowChangeEventHandler ARTIKUJT_FURNITORETRowDeleting;
            
            public event ARTIKUJT_FURNITORETRowChangeEventHandler ARTIKUJT_FURNITORETRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddARTIKUJT_FURNITORETRow(ARTIKUJT_FURNITORETRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ARTIKUJT_FURNITORETRow AddARTIKUJT_FURNITORETRow(int ID_FURNITORI, int ID_ARTIKULLI) {
                ARTIKUJT_FURNITORETRow rowARTIKUJT_FURNITORETRow = ((ARTIKUJT_FURNITORETRow)(this.NewRow()));
                rowARTIKUJT_FURNITORETRow.ItemArray = new object[] {
                        ID_FURNITORI,
                        ID_ARTIKULLI};
                this.Rows.Add(rowARTIKUJT_FURNITORETRow);
                return rowARTIKUJT_FURNITORETRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ARTIKUJT_FURNITORETRow FindByID_FURNITORIID_ARTIKULLI(int ID_FURNITORI, int ID_ARTIKULLI) {
                return ((ARTIKUJT_FURNITORETRow)(this.Rows.Find(new object[] {
                            ID_FURNITORI,
                            ID_ARTIKULLI})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                ARTIKUJT_FURNITORETDataTable cln = ((ARTIKUJT_FURNITORETDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new ARTIKUJT_FURNITORETDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID_FURNITORI = base.Columns["ID_FURNITORI"];
                this.columnID_ARTIKULLI = base.Columns["ID_ARTIKULLI"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID_FURNITORI = new System.Data.DataColumn("ID_FURNITORI", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_FURNITORI);
                this.columnID_ARTIKULLI = new System.Data.DataColumn("ID_ARTIKULLI", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_ARTIKULLI);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnID_FURNITORI,
                                this.columnID_ARTIKULLI}, true));
                this.columnID_FURNITORI.AllowDBNull = false;
                this.columnID_ARTIKULLI.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ARTIKUJT_FURNITORETRow NewARTIKUJT_FURNITORETRow() {
                return ((ARTIKUJT_FURNITORETRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new ARTIKUJT_FURNITORETRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(ARTIKUJT_FURNITORETRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ARTIKUJT_FURNITORETRowChanged != null)) {
                    this.ARTIKUJT_FURNITORETRowChanged(this, new ARTIKUJT_FURNITORETRowChangeEvent(((ARTIKUJT_FURNITORETRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ARTIKUJT_FURNITORETRowChanging != null)) {
                    this.ARTIKUJT_FURNITORETRowChanging(this, new ARTIKUJT_FURNITORETRowChangeEvent(((ARTIKUJT_FURNITORETRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ARTIKUJT_FURNITORETRowDeleted != null)) {
                    this.ARTIKUJT_FURNITORETRowDeleted(this, new ARTIKUJT_FURNITORETRowChangeEvent(((ARTIKUJT_FURNITORETRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ARTIKUJT_FURNITORETRowDeleting != null)) {
                    this.ARTIKUJT_FURNITORETRowDeleting(this, new ARTIKUJT_FURNITORETRowChangeEvent(((ARTIKUJT_FURNITORETRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveARTIKUJT_FURNITORETRow(ARTIKUJT_FURNITORETRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                ResManagerDataSet ds = new ResManagerDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ARTIKUJT_FURNITORETDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BLERJETDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnID_BLERJA;
            
            private System.Data.DataColumn columnID_FURNITORI;
            
            private System.Data.DataColumn columnDATA_BLERJE;
            
            private System.Data.DataColumn columnNR_FATURE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BLERJETDataTable() {
                this.TableName = "BLERJET";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BLERJETDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected BLERJETDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_BLERJAColumn {
                get {
                    return this.columnID_BLERJA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_FURNITORIColumn {
                get {
                    return this.columnID_FURNITORI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DATA_BLERJEColumn {
                get {
                    return this.columnDATA_BLERJE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NR_FATUREColumn {
                get {
                    return this.columnNR_FATURE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BLERJETRow this[int index] {
                get {
                    return ((BLERJETRow)(this.Rows[index]));
                }
            }
            
            public event BLERJETRowChangeEventHandler BLERJETRowChanging;
            
            public event BLERJETRowChangeEventHandler BLERJETRowChanged;
            
            public event BLERJETRowChangeEventHandler BLERJETRowDeleting;
            
            public event BLERJETRowChangeEventHandler BLERJETRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddBLERJETRow(BLERJETRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BLERJETRow AddBLERJETRow(int ID_FURNITORI, System.DateTime DATA_BLERJE, string NR_FATURE) {
                BLERJETRow rowBLERJETRow = ((BLERJETRow)(this.NewRow()));
                rowBLERJETRow.ItemArray = new object[] {
                        null,
                        ID_FURNITORI,
                        DATA_BLERJE,
                        NR_FATURE};
                this.Rows.Add(rowBLERJETRow);
                return rowBLERJETRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BLERJETRow FindByID_BLERJA(int ID_BLERJA) {
                return ((BLERJETRow)(this.Rows.Find(new object[] {
                            ID_BLERJA})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                BLERJETDataTable cln = ((BLERJETDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new BLERJETDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID_BLERJA = base.Columns["ID_BLERJA"];
                this.columnID_FURNITORI = base.Columns["ID_FURNITORI"];
                this.columnDATA_BLERJE = base.Columns["DATA_BLERJE"];
                this.columnNR_FATURE = base.Columns["NR_FATURE"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID_BLERJA = new System.Data.DataColumn("ID_BLERJA", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_BLERJA);
                this.columnID_FURNITORI = new System.Data.DataColumn("ID_FURNITORI", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_FURNITORI);
                this.columnDATA_BLERJE = new System.Data.DataColumn("DATA_BLERJE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATA_BLERJE);
                this.columnNR_FATURE = new System.Data.DataColumn("NR_FATURE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNR_FATURE);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnID_BLERJA}, true));
                this.columnID_BLERJA.AutoIncrement = true;
                this.columnID_BLERJA.AllowDBNull = false;
                this.columnID_BLERJA.ReadOnly = true;
                this.columnID_BLERJA.Unique = true;
                this.columnDATA_BLERJE.AllowDBNull = false;
                this.columnNR_FATURE.AllowDBNull = false;
                this.columnNR_FATURE.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BLERJETRow NewBLERJETRow() {
                return ((BLERJETRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new BLERJETRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(BLERJETRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BLERJETRowChanged != null)) {
                    this.BLERJETRowChanged(this, new BLERJETRowChangeEvent(((BLERJETRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BLERJETRowChanging != null)) {
                    this.BLERJETRowChanging(this, new BLERJETRowChangeEvent(((BLERJETRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BLERJETRowDeleted != null)) {
                    this.BLERJETRowDeleted(this, new BLERJETRowChangeEvent(((BLERJETRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BLERJETRowDeleting != null)) {
                    this.BLERJETRowDeleting(this, new BLERJETRowChangeEvent(((BLERJETRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveBLERJETRow(BLERJETRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                ResManagerDataSet ds = new ResManagerDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BLERJETDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BLERJET_ARTIKUJTDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnID_BLERJEARTIKUJ;
            
            private System.Data.DataColumn columnID_BLERJA;
            
            private System.Data.DataColumn columnID_ARTIKULLI;
            
            private System.Data.DataColumn columnSASIA;
            
            private System.Data.DataColumn columnDATA_SKADENCA;
            
            private System.Data.DataColumn columnCMIMI;
            
            private System.Data.DataColumn columnKONSUMUAR;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BLERJET_ARTIKUJTDataTable() {
                this.TableName = "BLERJET_ARTIKUJT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BLERJET_ARTIKUJTDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected BLERJET_ARTIKUJTDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_BLERJEARTIKUJColumn {
                get {
                    return this.columnID_BLERJEARTIKUJ;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_BLERJAColumn {
                get {
                    return this.columnID_BLERJA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_ARTIKULLIColumn {
                get {
                    return this.columnID_ARTIKULLI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SASIAColumn {
                get {
                    return this.columnSASIA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DATA_SKADENCAColumn {
                get {
                    return this.columnDATA_SKADENCA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CMIMIColumn {
                get {
                    return this.columnCMIMI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn KONSUMUARColumn {
                get {
                    return this.columnKONSUMUAR;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BLERJET_ARTIKUJTRow this[int index] {
                get {
                    return ((BLERJET_ARTIKUJTRow)(this.Rows[index]));
                }
            }
            
            public event BLERJET_ARTIKUJTRowChangeEventHandler BLERJET_ARTIKUJTRowChanging;
            
            public event BLERJET_ARTIKUJTRowChangeEventHandler BLERJET_ARTIKUJTRowChanged;
            
            public event BLERJET_ARTIKUJTRowChangeEventHandler BLERJET_ARTIKUJTRowDeleting;
            
            public event BLERJET_ARTIKUJTRowChangeEventHandler BLERJET_ARTIKUJTRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddBLERJET_ARTIKUJTRow(BLERJET_ARTIKUJTRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BLERJET_ARTIKUJTRow AddBLERJET_ARTIKUJTRow(int ID_BLERJA, int ID_ARTIKULLI, double SASIA, System.DateTime DATA_SKADENCA, float CMIMI, double KONSUMUAR) {
                BLERJET_ARTIKUJTRow rowBLERJET_ARTIKUJTRow = ((BLERJET_ARTIKUJTRow)(this.NewRow()));
                rowBLERJET_ARTIKUJTRow.ItemArray = new object[] {
                        null,
                        ID_BLERJA,
                        ID_ARTIKULLI,
                        SASIA,
                        DATA_SKADENCA,
                        CMIMI,
                        KONSUMUAR};
                this.Rows.Add(rowBLERJET_ARTIKUJTRow);
                return rowBLERJET_ARTIKUJTRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BLERJET_ARTIKUJTRow FindByID_BLERJEARTIKUJ(int ID_BLERJEARTIKUJ) {
                return ((BLERJET_ARTIKUJTRow)(this.Rows.Find(new object[] {
                            ID_BLERJEARTIKUJ})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                BLERJET_ARTIKUJTDataTable cln = ((BLERJET_ARTIKUJTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new BLERJET_ARTIKUJTDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID_BLERJEARTIKUJ = base.Columns["ID_BLERJEARTIKUJ"];
                this.columnID_BLERJA = base.Columns["ID_BLERJA"];
                this.columnID_ARTIKULLI = base.Columns["ID_ARTIKULLI"];
                this.columnSASIA = base.Columns["SASIA"];
                this.columnDATA_SKADENCA = base.Columns["DATA_SKADENCA"];
                this.columnCMIMI = base.Columns["CMIMI"];
                this.columnKONSUMUAR = base.Columns["KONSUMUAR"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID_BLERJEARTIKUJ = new System.Data.DataColumn("ID_BLERJEARTIKUJ", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_BLERJEARTIKUJ);
                this.columnID_BLERJA = new System.Data.DataColumn("ID_BLERJA", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_BLERJA);
                this.columnID_ARTIKULLI = new System.Data.DataColumn("ID_ARTIKULLI", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_ARTIKULLI);
                this.columnSASIA = new System.Data.DataColumn("SASIA", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSASIA);
                this.columnDATA_SKADENCA = new System.Data.DataColumn("DATA_SKADENCA", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATA_SKADENCA);
                this.columnCMIMI = new System.Data.DataColumn("CMIMI", typeof(float), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMIMI);
                this.columnKONSUMUAR = new System.Data.DataColumn("KONSUMUAR", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnKONSUMUAR);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnID_BLERJEARTIKUJ}, true));
                this.columnID_BLERJEARTIKUJ.AutoIncrement = true;
                this.columnID_BLERJEARTIKUJ.AllowDBNull = false;
                this.columnID_BLERJEARTIKUJ.ReadOnly = true;
                this.columnID_BLERJEARTIKUJ.Unique = true;
                this.columnID_BLERJA.AllowDBNull = false;
                this.columnID_ARTIKULLI.AllowDBNull = false;
                this.columnSASIA.AllowDBNull = false;
                this.columnDATA_SKADENCA.AllowDBNull = false;
                this.columnCMIMI.AllowDBNull = false;
                this.columnKONSUMUAR.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BLERJET_ARTIKUJTRow NewBLERJET_ARTIKUJTRow() {
                return ((BLERJET_ARTIKUJTRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new BLERJET_ARTIKUJTRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(BLERJET_ARTIKUJTRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BLERJET_ARTIKUJTRowChanged != null)) {
                    this.BLERJET_ARTIKUJTRowChanged(this, new BLERJET_ARTIKUJTRowChangeEvent(((BLERJET_ARTIKUJTRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BLERJET_ARTIKUJTRowChanging != null)) {
                    this.BLERJET_ARTIKUJTRowChanging(this, new BLERJET_ARTIKUJTRowChangeEvent(((BLERJET_ARTIKUJTRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BLERJET_ARTIKUJTRowDeleted != null)) {
                    this.BLERJET_ARTIKUJTRowDeleted(this, new BLERJET_ARTIKUJTRowChangeEvent(((BLERJET_ARTIKUJTRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BLERJET_ARTIKUJTRowDeleting != null)) {
                    this.BLERJET_ARTIKUJTRowDeleting(this, new BLERJET_ARTIKUJTRowChangeEvent(((BLERJET_ARTIKUJTRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveBLERJET_ARTIKUJTRow(BLERJET_ARTIKUJTRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                ResManagerDataSet ds = new ResManagerDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BLERJET_ARTIKUJTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CMIMETDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnID_CMIMI;
            
            private System.Data.DataColumn columnID_CMIMIPERIUDHA;
            
            private System.Data.DataColumn columnORE_FILLLIMI;
            
            private System.Data.DataColumn columnORE_MBARIMI;
            
            private System.Data.DataColumn columnVLERA;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CMIMETDataTable() {
                this.TableName = "CMIMET";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CMIMETDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CMIMETDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_CMIMIColumn {
                get {
                    return this.columnID_CMIMI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_CMIMIPERIUDHAColumn {
                get {
                    return this.columnID_CMIMIPERIUDHA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ORE_FILLLIMIColumn {
                get {
                    return this.columnORE_FILLLIMI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ORE_MBARIMIColumn {
                get {
                    return this.columnORE_MBARIMI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn VLERAColumn {
                get {
                    return this.columnVLERA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CMIMETRow this[int index] {
                get {
                    return ((CMIMETRow)(this.Rows[index]));
                }
            }
            
            public event CMIMETRowChangeEventHandler CMIMETRowChanging;
            
            public event CMIMETRowChangeEventHandler CMIMETRowChanged;
            
            public event CMIMETRowChangeEventHandler CMIMETRowDeleting;
            
            public event CMIMETRowChangeEventHandler CMIMETRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCMIMETRow(CMIMETRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CMIMETRow AddCMIMETRow(int ID_CMIMIPERIUDHA, System.DateTime ORE_FILLLIMI, System.DateTime ORE_MBARIMI, double VLERA) {
                CMIMETRow rowCMIMETRow = ((CMIMETRow)(this.NewRow()));
                rowCMIMETRow.ItemArray = new object[] {
                        null,
                        ID_CMIMIPERIUDHA,
                        ORE_FILLLIMI,
                        ORE_MBARIMI,
                        VLERA};
                this.Rows.Add(rowCMIMETRow);
                return rowCMIMETRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CMIMETRow FindByID_CMIMI(int ID_CMIMI) {
                return ((CMIMETRow)(this.Rows.Find(new object[] {
                            ID_CMIMI})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                CMIMETDataTable cln = ((CMIMETDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new CMIMETDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID_CMIMI = base.Columns["ID_CMIMI"];
                this.columnID_CMIMIPERIUDHA = base.Columns["ID_CMIMIPERIUDHA"];
                this.columnORE_FILLLIMI = base.Columns["ORE_FILLLIMI"];
                this.columnORE_MBARIMI = base.Columns["ORE_MBARIMI"];
                this.columnVLERA = base.Columns["VLERA"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID_CMIMI = new System.Data.DataColumn("ID_CMIMI", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_CMIMI);
                this.columnID_CMIMIPERIUDHA = new System.Data.DataColumn("ID_CMIMIPERIUDHA", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_CMIMIPERIUDHA);
                this.columnORE_FILLLIMI = new System.Data.DataColumn("ORE_FILLLIMI", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnORE_FILLLIMI);
                this.columnORE_MBARIMI = new System.Data.DataColumn("ORE_MBARIMI", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnORE_MBARIMI);
                this.columnVLERA = new System.Data.DataColumn("VLERA", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnVLERA);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnID_CMIMI}, true));
                this.columnID_CMIMI.AutoIncrement = true;
                this.columnID_CMIMI.AllowDBNull = false;
                this.columnID_CMIMI.ReadOnly = true;
                this.columnID_CMIMI.Unique = true;
                this.columnID_CMIMIPERIUDHA.AllowDBNull = false;
                this.columnORE_FILLLIMI.AllowDBNull = false;
                this.columnORE_MBARIMI.AllowDBNull = false;
                this.columnVLERA.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CMIMETRow NewCMIMETRow() {
                return ((CMIMETRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new CMIMETRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(CMIMETRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CMIMETRowChanged != null)) {
                    this.CMIMETRowChanged(this, new CMIMETRowChangeEvent(((CMIMETRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CMIMETRowChanging != null)) {
                    this.CMIMETRowChanging(this, new CMIMETRowChangeEvent(((CMIMETRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CMIMETRowDeleted != null)) {
                    this.CMIMETRowDeleted(this, new CMIMETRowChangeEvent(((CMIMETRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CMIMETRowDeleting != null)) {
                    this.CMIMETRowDeleting(this, new CMIMETRowChangeEvent(((CMIMETRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCMIMETRow(CMIMETRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                ResManagerDataSet ds = new ResManagerDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CMIMETDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CMIMET_PERIUDHADataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnID_CMIMIPERIUDHA;
            
            private System.Data.DataColumn columnID_ARTIKULLI;
            
            private System.Data.DataColumn columnDATE_FILLIMI;
            
            private System.Data.DataColumn columnDATE_MBARIMI;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CMIMET_PERIUDHADataTable() {
                this.TableName = "CMIMET_PERIUDHA";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CMIMET_PERIUDHADataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CMIMET_PERIUDHADataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_CMIMIPERIUDHAColumn {
                get {
                    return this.columnID_CMIMIPERIUDHA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_ARTIKULLIColumn {
                get {
                    return this.columnID_ARTIKULLI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DATE_FILLIMIColumn {
                get {
                    return this.columnDATE_FILLIMI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DATE_MBARIMIColumn {
                get {
                    return this.columnDATE_MBARIMI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CMIMET_PERIUDHARow this[int index] {
                get {
                    return ((CMIMET_PERIUDHARow)(this.Rows[index]));
                }
            }
            
            public event CMIMET_PERIUDHARowChangeEventHandler CMIMET_PERIUDHARowChanging;
            
            public event CMIMET_PERIUDHARowChangeEventHandler CMIMET_PERIUDHARowChanged;
            
            public event CMIMET_PERIUDHARowChangeEventHandler CMIMET_PERIUDHARowDeleting;
            
            public event CMIMET_PERIUDHARowChangeEventHandler CMIMET_PERIUDHARowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCMIMET_PERIUDHARow(CMIMET_PERIUDHARow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CMIMET_PERIUDHARow AddCMIMET_PERIUDHARow(int ID_ARTIKULLI, System.DateTime DATE_FILLIMI, System.DateTime DATE_MBARIMI) {
                CMIMET_PERIUDHARow rowCMIMET_PERIUDHARow = ((CMIMET_PERIUDHARow)(this.NewRow()));
                rowCMIMET_PERIUDHARow.ItemArray = new object[] {
                        null,
                        ID_ARTIKULLI,
                        DATE_FILLIMI,
                        DATE_MBARIMI};
                this.Rows.Add(rowCMIMET_PERIUDHARow);
                return rowCMIMET_PERIUDHARow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CMIMET_PERIUDHARow FindByID_CMIMIPERIUDHA(int ID_CMIMIPERIUDHA) {
                return ((CMIMET_PERIUDHARow)(this.Rows.Find(new object[] {
                            ID_CMIMIPERIUDHA})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                CMIMET_PERIUDHADataTable cln = ((CMIMET_PERIUDHADataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new CMIMET_PERIUDHADataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID_CMIMIPERIUDHA = base.Columns["ID_CMIMIPERIUDHA"];
                this.columnID_ARTIKULLI = base.Columns["ID_ARTIKULLI"];
                this.columnDATE_FILLIMI = base.Columns["DATE_FILLIMI"];
                this.columnDATE_MBARIMI = base.Columns["DATE_MBARIMI"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID_CMIMIPERIUDHA = new System.Data.DataColumn("ID_CMIMIPERIUDHA", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_CMIMIPERIUDHA);
                this.columnID_ARTIKULLI = new System.Data.DataColumn("ID_ARTIKULLI", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_ARTIKULLI);
                this.columnDATE_FILLIMI = new System.Data.DataColumn("DATE_FILLIMI", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATE_FILLIMI);
                this.columnDATE_MBARIMI = new System.Data.DataColumn("DATE_MBARIMI", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATE_MBARIMI);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnID_CMIMIPERIUDHA}, true));
                this.columnID_CMIMIPERIUDHA.AutoIncrement = true;
                this.columnID_CMIMIPERIUDHA.AllowDBNull = false;
                this.columnID_CMIMIPERIUDHA.ReadOnly = true;
                this.columnID_CMIMIPERIUDHA.Unique = true;
                this.columnID_ARTIKULLI.AllowDBNull = false;
                this.columnDATE_FILLIMI.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CMIMET_PERIUDHARow NewCMIMET_PERIUDHARow() {
                return ((CMIMET_PERIUDHARow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new CMIMET_PERIUDHARow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(CMIMET_PERIUDHARow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CMIMET_PERIUDHARowChanged != null)) {
                    this.CMIMET_PERIUDHARowChanged(this, new CMIMET_PERIUDHARowChangeEvent(((CMIMET_PERIUDHARow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CMIMET_PERIUDHARowChanging != null)) {
                    this.CMIMET_PERIUDHARowChanging(this, new CMIMET_PERIUDHARowChangeEvent(((CMIMET_PERIUDHARow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CMIMET_PERIUDHARowDeleted != null)) {
                    this.CMIMET_PERIUDHARowDeleted(this, new CMIMET_PERIUDHARowChangeEvent(((CMIMET_PERIUDHARow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CMIMET_PERIUDHARowDeleting != null)) {
                    this.CMIMET_PERIUDHARowDeleting(this, new CMIMET_PERIUDHARowChangeEvent(((CMIMET_PERIUDHARow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCMIMET_PERIUDHARow(CMIMET_PERIUDHARow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                ResManagerDataSet ds = new ResManagerDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CMIMET_PERIUDHADataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CMIMET_PERIUDHA_RECETATDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnID_CMIMIPERIUDHA;
            
            private System.Data.DataColumn columnID_RECETA;
            
            private System.Data.DataColumn columnDATE_FILLIMI;
            
            private System.Data.DataColumn columnDATE_MBARIMI;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CMIMET_PERIUDHA_RECETATDataTable() {
                this.TableName = "CMIMET_PERIUDHA_RECETAT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CMIMET_PERIUDHA_RECETATDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CMIMET_PERIUDHA_RECETATDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_CMIMIPERIUDHAColumn {
                get {
                    return this.columnID_CMIMIPERIUDHA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_RECETAColumn {
                get {
                    return this.columnID_RECETA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DATE_FILLIMIColumn {
                get {
                    return this.columnDATE_FILLIMI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DATE_MBARIMIColumn {
                get {
                    return this.columnDATE_MBARIMI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CMIMET_PERIUDHA_RECETATRow this[int index] {
                get {
                    return ((CMIMET_PERIUDHA_RECETATRow)(this.Rows[index]));
                }
            }
            
            public event CMIMET_PERIUDHA_RECETATRowChangeEventHandler CMIMET_PERIUDHA_RECETATRowChanging;
            
            public event CMIMET_PERIUDHA_RECETATRowChangeEventHandler CMIMET_PERIUDHA_RECETATRowChanged;
            
            public event CMIMET_PERIUDHA_RECETATRowChangeEventHandler CMIMET_PERIUDHA_RECETATRowDeleting;
            
            public event CMIMET_PERIUDHA_RECETATRowChangeEventHandler CMIMET_PERIUDHA_RECETATRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCMIMET_PERIUDHA_RECETATRow(CMIMET_PERIUDHA_RECETATRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CMIMET_PERIUDHA_RECETATRow AddCMIMET_PERIUDHA_RECETATRow(int ID_RECETA, System.DateTime DATE_FILLIMI, System.DateTime DATE_MBARIMI) {
                CMIMET_PERIUDHA_RECETATRow rowCMIMET_PERIUDHA_RECETATRow = ((CMIMET_PERIUDHA_RECETATRow)(this.NewRow()));
                rowCMIMET_PERIUDHA_RECETATRow.ItemArray = new object[] {
                        null,
                        ID_RECETA,
                        DATE_FILLIMI,
                        DATE_MBARIMI};
                this.Rows.Add(rowCMIMET_PERIUDHA_RECETATRow);
                return rowCMIMET_PERIUDHA_RECETATRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CMIMET_PERIUDHA_RECETATRow FindByID_CMIMIPERIUDHA(int ID_CMIMIPERIUDHA) {
                return ((CMIMET_PERIUDHA_RECETATRow)(this.Rows.Find(new object[] {
                            ID_CMIMIPERIUDHA})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                CMIMET_PERIUDHA_RECETATDataTable cln = ((CMIMET_PERIUDHA_RECETATDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new CMIMET_PERIUDHA_RECETATDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID_CMIMIPERIUDHA = base.Columns["ID_CMIMIPERIUDHA"];
                this.columnID_RECETA = base.Columns["ID_RECETA"];
                this.columnDATE_FILLIMI = base.Columns["DATE_FILLIMI"];
                this.columnDATE_MBARIMI = base.Columns["DATE_MBARIMI"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID_CMIMIPERIUDHA = new System.Data.DataColumn("ID_CMIMIPERIUDHA", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_CMIMIPERIUDHA);
                this.columnID_RECETA = new System.Data.DataColumn("ID_RECETA", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_RECETA);
                this.columnDATE_FILLIMI = new System.Data.DataColumn("DATE_FILLIMI", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATE_FILLIMI);
                this.columnDATE_MBARIMI = new System.Data.DataColumn("DATE_MBARIMI", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATE_MBARIMI);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnID_CMIMIPERIUDHA}, true));
                this.columnID_CMIMIPERIUDHA.AutoIncrement = true;
                this.columnID_CMIMIPERIUDHA.AllowDBNull = false;
                this.columnID_CMIMIPERIUDHA.ReadOnly = true;
                this.columnID_CMIMIPERIUDHA.Unique = true;
                this.columnID_RECETA.AllowDBNull = false;
                this.columnDATE_FILLIMI.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CMIMET_PERIUDHA_RECETATRow NewCMIMET_PERIUDHA_RECETATRow() {
                return ((CMIMET_PERIUDHA_RECETATRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new CMIMET_PERIUDHA_RECETATRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(CMIMET_PERIUDHA_RECETATRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CMIMET_PERIUDHA_RECETATRowChanged != null)) {
                    this.CMIMET_PERIUDHA_RECETATRowChanged(this, new CMIMET_PERIUDHA_RECETATRowChangeEvent(((CMIMET_PERIUDHA_RECETATRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CMIMET_PERIUDHA_RECETATRowChanging != null)) {
                    this.CMIMET_PERIUDHA_RECETATRowChanging(this, new CMIMET_PERIUDHA_RECETATRowChangeEvent(((CMIMET_PERIUDHA_RECETATRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CMIMET_PERIUDHA_RECETATRowDeleted != null)) {
                    this.CMIMET_PERIUDHA_RECETATRowDeleted(this, new CMIMET_PERIUDHA_RECETATRowChangeEvent(((CMIMET_PERIUDHA_RECETATRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CMIMET_PERIUDHA_RECETATRowDeleting != null)) {
                    this.CMIMET_PERIUDHA_RECETATRowDeleting(this, new CMIMET_PERIUDHA_RECETATRowChangeEvent(((CMIMET_PERIUDHA_RECETATRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCMIMET_PERIUDHA_RECETATRow(CMIMET_PERIUDHA_RECETATRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                ResManagerDataSet ds = new ResManagerDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CMIMET_PERIUDHA_RECETATDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CMIMET_RECETATDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnID_CMIMI;
            
            private System.Data.DataColumn columnID_CMIMIPERIUDHA;
            
            private System.Data.DataColumn columnORE_FILLIMI;
            
            private System.Data.DataColumn columnORE_MBARIMI;
            
            private System.Data.DataColumn columnVLERA;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CMIMET_RECETATDataTable() {
                this.TableName = "CMIMET_RECETAT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CMIMET_RECETATDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CMIMET_RECETATDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_CMIMIColumn {
                get {
                    return this.columnID_CMIMI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_CMIMIPERIUDHAColumn {
                get {
                    return this.columnID_CMIMIPERIUDHA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ORE_FILLIMIColumn {
                get {
                    return this.columnORE_FILLIMI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ORE_MBARIMIColumn {
                get {
                    return this.columnORE_MBARIMI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn VLERAColumn {
                get {
                    return this.columnVLERA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CMIMET_RECETATRow this[int index] {
                get {
                    return ((CMIMET_RECETATRow)(this.Rows[index]));
                }
            }
            
            public event CMIMET_RECETATRowChangeEventHandler CMIMET_RECETATRowChanging;
            
            public event CMIMET_RECETATRowChangeEventHandler CMIMET_RECETATRowChanged;
            
            public event CMIMET_RECETATRowChangeEventHandler CMIMET_RECETATRowDeleting;
            
            public event CMIMET_RECETATRowChangeEventHandler CMIMET_RECETATRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCMIMET_RECETATRow(CMIMET_RECETATRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CMIMET_RECETATRow AddCMIMET_RECETATRow(int ID_CMIMIPERIUDHA, System.DateTime ORE_FILLIMI, System.DateTime ORE_MBARIMI, double VLERA) {
                CMIMET_RECETATRow rowCMIMET_RECETATRow = ((CMIMET_RECETATRow)(this.NewRow()));
                rowCMIMET_RECETATRow.ItemArray = new object[] {
                        null,
                        ID_CMIMIPERIUDHA,
                        ORE_FILLIMI,
                        ORE_MBARIMI,
                        VLERA};
                this.Rows.Add(rowCMIMET_RECETATRow);
                return rowCMIMET_RECETATRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CMIMET_RECETATRow FindByID_CMIMI(int ID_CMIMI) {
                return ((CMIMET_RECETATRow)(this.Rows.Find(new object[] {
                            ID_CMIMI})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                CMIMET_RECETATDataTable cln = ((CMIMET_RECETATDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new CMIMET_RECETATDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID_CMIMI = base.Columns["ID_CMIMI"];
                this.columnID_CMIMIPERIUDHA = base.Columns["ID_CMIMIPERIUDHA"];
                this.columnORE_FILLIMI = base.Columns["ORE_FILLIMI"];
                this.columnORE_MBARIMI = base.Columns["ORE_MBARIMI"];
                this.columnVLERA = base.Columns["VLERA"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID_CMIMI = new System.Data.DataColumn("ID_CMIMI", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_CMIMI);
                this.columnID_CMIMIPERIUDHA = new System.Data.DataColumn("ID_CMIMIPERIUDHA", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_CMIMIPERIUDHA);
                this.columnORE_FILLIMI = new System.Data.DataColumn("ORE_FILLIMI", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnORE_FILLIMI);
                this.columnORE_MBARIMI = new System.Data.DataColumn("ORE_MBARIMI", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnORE_MBARIMI);
                this.columnVLERA = new System.Data.DataColumn("VLERA", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnVLERA);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnID_CMIMI}, true));
                this.columnID_CMIMI.AutoIncrement = true;
                this.columnID_CMIMI.AllowDBNull = false;
                this.columnID_CMIMI.ReadOnly = true;
                this.columnID_CMIMI.Unique = true;
                this.columnID_CMIMIPERIUDHA.AllowDBNull = false;
                this.columnORE_FILLIMI.AllowDBNull = false;
                this.columnORE_MBARIMI.AllowDBNull = false;
                this.columnVLERA.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CMIMET_RECETATRow NewCMIMET_RECETATRow() {
                return ((CMIMET_RECETATRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new CMIMET_RECETATRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(CMIMET_RECETATRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CMIMET_RECETATRowChanged != null)) {
                    this.CMIMET_RECETATRowChanged(this, new CMIMET_RECETATRowChangeEvent(((CMIMET_RECETATRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CMIMET_RECETATRowChanging != null)) {
                    this.CMIMET_RECETATRowChanging(this, new CMIMET_RECETATRowChangeEvent(((CMIMET_RECETATRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CMIMET_RECETATRowDeleted != null)) {
                    this.CMIMET_RECETATRowDeleted(this, new CMIMET_RECETATRowChangeEvent(((CMIMET_RECETATRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CMIMET_RECETATRowDeleting != null)) {
                    this.CMIMET_RECETATRowDeleting(this, new CMIMET_RECETATRowChangeEvent(((CMIMET_RECETATRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCMIMET_RECETATRow(CMIMET_RECETATRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                ResManagerDataSet ds = new ResManagerDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CMIMET_RECETATDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FATURA_ARTIKUJTDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnID_FATURA;
            
            private System.Data.DataColumn columnID_ARTIKULLI;
            
            private System.Data.DataColumn columnSASIA;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FATURA_ARTIKUJTDataTable() {
                this.TableName = "FATURA_ARTIKUJT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FATURA_ARTIKUJTDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected FATURA_ARTIKUJTDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_FATURAColumn {
                get {
                    return this.columnID_FATURA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_ARTIKULLIColumn {
                get {
                    return this.columnID_ARTIKULLI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SASIAColumn {
                get {
                    return this.columnSASIA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FATURA_ARTIKUJTRow this[int index] {
                get {
                    return ((FATURA_ARTIKUJTRow)(this.Rows[index]));
                }
            }
            
            public event FATURA_ARTIKUJTRowChangeEventHandler FATURA_ARTIKUJTRowChanging;
            
            public event FATURA_ARTIKUJTRowChangeEventHandler FATURA_ARTIKUJTRowChanged;
            
            public event FATURA_ARTIKUJTRowChangeEventHandler FATURA_ARTIKUJTRowDeleting;
            
            public event FATURA_ARTIKUJTRowChangeEventHandler FATURA_ARTIKUJTRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddFATURA_ARTIKUJTRow(FATURA_ARTIKUJTRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FATURA_ARTIKUJTRow AddFATURA_ARTIKUJTRow(int ID_FATURA, int ID_ARTIKULLI, int SASIA) {
                FATURA_ARTIKUJTRow rowFATURA_ARTIKUJTRow = ((FATURA_ARTIKUJTRow)(this.NewRow()));
                rowFATURA_ARTIKUJTRow.ItemArray = new object[] {
                        ID_FATURA,
                        ID_ARTIKULLI,
                        SASIA};
                this.Rows.Add(rowFATURA_ARTIKUJTRow);
                return rowFATURA_ARTIKUJTRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FATURA_ARTIKUJTRow FindByID_FATURAID_ARTIKULLI(int ID_FATURA, int ID_ARTIKULLI) {
                return ((FATURA_ARTIKUJTRow)(this.Rows.Find(new object[] {
                            ID_FATURA,
                            ID_ARTIKULLI})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                FATURA_ARTIKUJTDataTable cln = ((FATURA_ARTIKUJTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new FATURA_ARTIKUJTDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID_FATURA = base.Columns["ID_FATURA"];
                this.columnID_ARTIKULLI = base.Columns["ID_ARTIKULLI"];
                this.columnSASIA = base.Columns["SASIA"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID_FATURA = new System.Data.DataColumn("ID_FATURA", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_FATURA);
                this.columnID_ARTIKULLI = new System.Data.DataColumn("ID_ARTIKULLI", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_ARTIKULLI);
                this.columnSASIA = new System.Data.DataColumn("SASIA", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSASIA);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnID_FATURA,
                                this.columnID_ARTIKULLI}, true));
                this.columnID_FATURA.AllowDBNull = false;
                this.columnID_ARTIKULLI.AllowDBNull = false;
                this.columnSASIA.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FATURA_ARTIKUJTRow NewFATURA_ARTIKUJTRow() {
                return ((FATURA_ARTIKUJTRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new FATURA_ARTIKUJTRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(FATURA_ARTIKUJTRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FATURA_ARTIKUJTRowChanged != null)) {
                    this.FATURA_ARTIKUJTRowChanged(this, new FATURA_ARTIKUJTRowChangeEvent(((FATURA_ARTIKUJTRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FATURA_ARTIKUJTRowChanging != null)) {
                    this.FATURA_ARTIKUJTRowChanging(this, new FATURA_ARTIKUJTRowChangeEvent(((FATURA_ARTIKUJTRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FATURA_ARTIKUJTRowDeleted != null)) {
                    this.FATURA_ARTIKUJTRowDeleted(this, new FATURA_ARTIKUJTRowChangeEvent(((FATURA_ARTIKUJTRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FATURA_ARTIKUJTRowDeleting != null)) {
                    this.FATURA_ARTIKUJTRowDeleting(this, new FATURA_ARTIKUJTRowChangeEvent(((FATURA_ARTIKUJTRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveFATURA_ARTIKUJTRow(FATURA_ARTIKUJTRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                ResManagerDataSet ds = new ResManagerDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FATURA_ARTIKUJTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FATURA_RECETATDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnID_FATURA;
            
            private System.Data.DataColumn columnID_RECETA;
            
            private System.Data.DataColumn columnSASIA;
            
            private System.Data.DataColumn columnrowguid;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FATURA_RECETATDataTable() {
                this.TableName = "FATURA_RECETAT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FATURA_RECETATDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected FATURA_RECETATDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_FATURAColumn {
                get {
                    return this.columnID_FATURA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_RECETAColumn {
                get {
                    return this.columnID_RECETA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SASIAColumn {
                get {
                    return this.columnSASIA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn rowguidColumn {
                get {
                    return this.columnrowguid;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FATURA_RECETATRow this[int index] {
                get {
                    return ((FATURA_RECETATRow)(this.Rows[index]));
                }
            }
            
            public event FATURA_RECETATRowChangeEventHandler FATURA_RECETATRowChanging;
            
            public event FATURA_RECETATRowChangeEventHandler FATURA_RECETATRowChanged;
            
            public event FATURA_RECETATRowChangeEventHandler FATURA_RECETATRowDeleting;
            
            public event FATURA_RECETATRowChangeEventHandler FATURA_RECETATRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddFATURA_RECETATRow(FATURA_RECETATRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FATURA_RECETATRow AddFATURA_RECETATRow(int ID_FATURA, int ID_RECETA, int SASIA, System.Guid rowguid) {
                FATURA_RECETATRow rowFATURA_RECETATRow = ((FATURA_RECETATRow)(this.NewRow()));
                rowFATURA_RECETATRow.ItemArray = new object[] {
                        ID_FATURA,
                        ID_RECETA,
                        SASIA,
                        rowguid};
                this.Rows.Add(rowFATURA_RECETATRow);
                return rowFATURA_RECETATRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FATURA_RECETATRow FindByID_FATURAID_RECETA(int ID_FATURA, int ID_RECETA) {
                return ((FATURA_RECETATRow)(this.Rows.Find(new object[] {
                            ID_FATURA,
                            ID_RECETA})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                FATURA_RECETATDataTable cln = ((FATURA_RECETATDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new FATURA_RECETATDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID_FATURA = base.Columns["ID_FATURA"];
                this.columnID_RECETA = base.Columns["ID_RECETA"];
                this.columnSASIA = base.Columns["SASIA"];
                this.columnrowguid = base.Columns["rowguid"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID_FATURA = new System.Data.DataColumn("ID_FATURA", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_FATURA);
                this.columnID_RECETA = new System.Data.DataColumn("ID_RECETA", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_RECETA);
                this.columnSASIA = new System.Data.DataColumn("SASIA", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSASIA);
                this.columnrowguid = new System.Data.DataColumn("rowguid", typeof(System.Guid), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnrowguid);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnID_FATURA,
                                this.columnID_RECETA}, true));
                this.columnID_FATURA.AllowDBNull = false;
                this.columnID_RECETA.AllowDBNull = false;
                this.columnSASIA.AllowDBNull = false;
                this.columnrowguid.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FATURA_RECETATRow NewFATURA_RECETATRow() {
                return ((FATURA_RECETATRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new FATURA_RECETATRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(FATURA_RECETATRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FATURA_RECETATRowChanged != null)) {
                    this.FATURA_RECETATRowChanged(this, new FATURA_RECETATRowChangeEvent(((FATURA_RECETATRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FATURA_RECETATRowChanging != null)) {
                    this.FATURA_RECETATRowChanging(this, new FATURA_RECETATRowChangeEvent(((FATURA_RECETATRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FATURA_RECETATRowDeleted != null)) {
                    this.FATURA_RECETATRowDeleted(this, new FATURA_RECETATRowChangeEvent(((FATURA_RECETATRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FATURA_RECETATRowDeleting != null)) {
                    this.FATURA_RECETATRowDeleting(this, new FATURA_RECETATRowChangeEvent(((FATURA_RECETATRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveFATURA_RECETATRow(FATURA_RECETATRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                ResManagerDataSet ds = new ResManagerDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FATURA_RECETATDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FATURATDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnID_FATURA;
            
            private System.Data.DataColumn columnID_PERSONELI;
            
            private System.Data.DataColumn columnID_TAVOLINA;
            
            private System.Data.DataColumn columnTOTALI;
            
            private System.Data.DataColumn columnDATA_ORA;
            
            private System.Data.DataColumn columnSKONTO;
            
            private System.Data.DataColumn columnID_FORMAPAGESA;
            
            private System.Data.DataColumn columnNR_FATURE;
            
            private System.Data.DataColumn columnID_KLIENTI;
            
            private System.Data.DataColumn columnKOSTO;
            
            private System.Data.DataColumn columnANULLUAR;
            
            private System.Data.DataColumn columnrowguid;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FATURATDataTable() {
                this.TableName = "FATURAT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FATURATDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected FATURATDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_FATURAColumn {
                get {
                    return this.columnID_FATURA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_PERSONELIColumn {
                get {
                    return this.columnID_PERSONELI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_TAVOLINAColumn {
                get {
                    return this.columnID_TAVOLINA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TOTALIColumn {
                get {
                    return this.columnTOTALI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DATA_ORAColumn {
                get {
                    return this.columnDATA_ORA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SKONTOColumn {
                get {
                    return this.columnSKONTO;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_FORMAPAGESAColumn {
                get {
                    return this.columnID_FORMAPAGESA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NR_FATUREColumn {
                get {
                    return this.columnNR_FATURE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_KLIENTIColumn {
                get {
                    return this.columnID_KLIENTI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn KOSTOColumn {
                get {
                    return this.columnKOSTO;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ANULLUARColumn {
                get {
                    return this.columnANULLUAR;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn rowguidColumn {
                get {
                    return this.columnrowguid;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FATURATRow this[int index] {
                get {
                    return ((FATURATRow)(this.Rows[index]));
                }
            }
            
            public event FATURATRowChangeEventHandler FATURATRowChanging;
            
            public event FATURATRowChangeEventHandler FATURATRowChanged;
            
            public event FATURATRowChangeEventHandler FATURATRowDeleting;
            
            public event FATURATRowChangeEventHandler FATURATRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddFATURATRow(FATURATRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FATURATRow AddFATURATRow(int ID_PERSONELI, int ID_TAVOLINA, double TOTALI, System.DateTime DATA_ORA, double SKONTO, int ID_FORMAPAGESA, string NR_FATURE, int ID_KLIENTI, double KOSTO, bool ANULLUAR, System.Guid rowguid) {
                FATURATRow rowFATURATRow = ((FATURATRow)(this.NewRow()));
                rowFATURATRow.ItemArray = new object[] {
                        null,
                        ID_PERSONELI,
                        ID_TAVOLINA,
                        TOTALI,
                        DATA_ORA,
                        SKONTO,
                        ID_FORMAPAGESA,
                        NR_FATURE,
                        ID_KLIENTI,
                        KOSTO,
                        ANULLUAR,
                        rowguid};
                this.Rows.Add(rowFATURATRow);
                return rowFATURATRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FATURATRow FindByID_FATURA(int ID_FATURA) {
                return ((FATURATRow)(this.Rows.Find(new object[] {
                            ID_FATURA})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                FATURATDataTable cln = ((FATURATDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new FATURATDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID_FATURA = base.Columns["ID_FATURA"];
                this.columnID_PERSONELI = base.Columns["ID_PERSONELI"];
                this.columnID_TAVOLINA = base.Columns["ID_TAVOLINA"];
                this.columnTOTALI = base.Columns["TOTALI"];
                this.columnDATA_ORA = base.Columns["DATA_ORA"];
                this.columnSKONTO = base.Columns["SKONTO"];
                this.columnID_FORMAPAGESA = base.Columns["ID_FORMAPAGESA"];
                this.columnNR_FATURE = base.Columns["NR_FATURE"];
                this.columnID_KLIENTI = base.Columns["ID_KLIENTI"];
                this.columnKOSTO = base.Columns["KOSTO"];
                this.columnANULLUAR = base.Columns["ANULLUAR"];
                this.columnrowguid = base.Columns["rowguid"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID_FATURA = new System.Data.DataColumn("ID_FATURA", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_FATURA);
                this.columnID_PERSONELI = new System.Data.DataColumn("ID_PERSONELI", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_PERSONELI);
                this.columnID_TAVOLINA = new System.Data.DataColumn("ID_TAVOLINA", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_TAVOLINA);
                this.columnTOTALI = new System.Data.DataColumn("TOTALI", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOTALI);
                this.columnDATA_ORA = new System.Data.DataColumn("DATA_ORA", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATA_ORA);
                this.columnSKONTO = new System.Data.DataColumn("SKONTO", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSKONTO);
                this.columnID_FORMAPAGESA = new System.Data.DataColumn("ID_FORMAPAGESA", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_FORMAPAGESA);
                this.columnNR_FATURE = new System.Data.DataColumn("NR_FATURE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNR_FATURE);
                this.columnID_KLIENTI = new System.Data.DataColumn("ID_KLIENTI", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_KLIENTI);
                this.columnKOSTO = new System.Data.DataColumn("KOSTO", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnKOSTO);
                this.columnANULLUAR = new System.Data.DataColumn("ANULLUAR", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnANULLUAR);
                this.columnrowguid = new System.Data.DataColumn("rowguid", typeof(System.Guid), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnrowguid);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnID_FATURA}, true));
                this.columnID_FATURA.AutoIncrement = true;
                this.columnID_FATURA.AllowDBNull = false;
                this.columnID_FATURA.ReadOnly = true;
                this.columnID_FATURA.Unique = true;
                this.columnID_PERSONELI.AllowDBNull = false;
                this.columnID_TAVOLINA.AllowDBNull = false;
                this.columnTOTALI.AllowDBNull = false;
                this.columnDATA_ORA.AllowDBNull = false;
                this.columnSKONTO.AllowDBNull = false;
                this.columnID_FORMAPAGESA.AllowDBNull = false;
                this.columnNR_FATURE.AllowDBNull = false;
                this.columnNR_FATURE.MaxLength = 50;
                this.columnID_KLIENTI.AllowDBNull = false;
                this.columnKOSTO.AllowDBNull = false;
                this.columnANULLUAR.AllowDBNull = false;
                this.columnrowguid.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FATURATRow NewFATURATRow() {
                return ((FATURATRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new FATURATRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(FATURATRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FATURATRowChanged != null)) {
                    this.FATURATRowChanged(this, new FATURATRowChangeEvent(((FATURATRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FATURATRowChanging != null)) {
                    this.FATURATRowChanging(this, new FATURATRowChangeEvent(((FATURATRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FATURATRowDeleted != null)) {
                    this.FATURATRowDeleted(this, new FATURATRowChangeEvent(((FATURATRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FATURATRowDeleting != null)) {
                    this.FATURATRowDeleting(this, new FATURATRowChangeEvent(((FATURATRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveFATURATRow(FATURATRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                ResManagerDataSet ds = new ResManagerDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FATURATDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FAVORITEDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnID_FAVORITE;
            
            private System.Data.DataColumn columnEMRI;
            
            private System.Data.DataColumn columnLLOJI;
            
            private System.Data.DataColumn columnPRIORITETI;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FAVORITEDataTable() {
                this.TableName = "FAVORITE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FAVORITEDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected FAVORITEDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_FAVORITEColumn {
                get {
                    return this.columnID_FAVORITE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EMRIColumn {
                get {
                    return this.columnEMRI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LLOJIColumn {
                get {
                    return this.columnLLOJI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PRIORITETIColumn {
                get {
                    return this.columnPRIORITETI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FAVORITERow this[int index] {
                get {
                    return ((FAVORITERow)(this.Rows[index]));
                }
            }
            
            public event FAVORITERowChangeEventHandler FAVORITERowChanging;
            
            public event FAVORITERowChangeEventHandler FAVORITERowChanged;
            
            public event FAVORITERowChangeEventHandler FAVORITERowDeleting;
            
            public event FAVORITERowChangeEventHandler FAVORITERowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddFAVORITERow(FAVORITERow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FAVORITERow AddFAVORITERow(int ID_FAVORITE, string EMRI, string LLOJI, int PRIORITETI) {
                FAVORITERow rowFAVORITERow = ((FAVORITERow)(this.NewRow()));
                rowFAVORITERow.ItemArray = new object[] {
                        ID_FAVORITE,
                        EMRI,
                        LLOJI,
                        PRIORITETI};
                this.Rows.Add(rowFAVORITERow);
                return rowFAVORITERow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FAVORITERow FindByID_FAVORITELLOJI(int ID_FAVORITE, string LLOJI) {
                return ((FAVORITERow)(this.Rows.Find(new object[] {
                            ID_FAVORITE,
                            LLOJI})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                FAVORITEDataTable cln = ((FAVORITEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new FAVORITEDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID_FAVORITE = base.Columns["ID_FAVORITE"];
                this.columnEMRI = base.Columns["EMRI"];
                this.columnLLOJI = base.Columns["LLOJI"];
                this.columnPRIORITETI = base.Columns["PRIORITETI"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID_FAVORITE = new System.Data.DataColumn("ID_FAVORITE", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_FAVORITE);
                this.columnEMRI = new System.Data.DataColumn("EMRI", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMRI);
                this.columnLLOJI = new System.Data.DataColumn("LLOJI", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLLOJI);
                this.columnPRIORITETI = new System.Data.DataColumn("PRIORITETI", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRIORITETI);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnID_FAVORITE,
                                this.columnLLOJI}, true));
                this.columnID_FAVORITE.AllowDBNull = false;
                this.columnEMRI.AllowDBNull = false;
                this.columnEMRI.MaxLength = 50;
                this.columnLLOJI.AllowDBNull = false;
                this.columnLLOJI.MaxLength = 10;
                this.columnPRIORITETI.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FAVORITERow NewFAVORITERow() {
                return ((FAVORITERow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new FAVORITERow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(FAVORITERow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FAVORITERowChanged != null)) {
                    this.FAVORITERowChanged(this, new FAVORITERowChangeEvent(((FAVORITERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FAVORITERowChanging != null)) {
                    this.FAVORITERowChanging(this, new FAVORITERowChangeEvent(((FAVORITERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FAVORITERowDeleted != null)) {
                    this.FAVORITERowDeleted(this, new FAVORITERowChangeEvent(((FAVORITERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FAVORITERowDeleting != null)) {
                    this.FAVORITERowDeleting(this, new FAVORITERowChangeEvent(((FAVORITERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveFAVORITERow(FAVORITERow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                ResManagerDataSet ds = new ResManagerDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FAVORITEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FORMA_PAGESADataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnID_FORMAPAGESA;
            
            private System.Data.DataColumn columnFORMA_PAGESA;
            
            private System.Data.DataColumn columnKOMISIONI;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FORMA_PAGESADataTable() {
                this.TableName = "FORMA_PAGESA";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FORMA_PAGESADataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected FORMA_PAGESADataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_FORMAPAGESAColumn {
                get {
                    return this.columnID_FORMAPAGESA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FORMA_PAGESAColumn {
                get {
                    return this.columnFORMA_PAGESA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn KOMISIONIColumn {
                get {
                    return this.columnKOMISIONI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FORMA_PAGESARow this[int index] {
                get {
                    return ((FORMA_PAGESARow)(this.Rows[index]));
                }
            }
            
            public event FORMA_PAGESARowChangeEventHandler FORMA_PAGESARowChanging;
            
            public event FORMA_PAGESARowChangeEventHandler FORMA_PAGESARowChanged;
            
            public event FORMA_PAGESARowChangeEventHandler FORMA_PAGESARowDeleting;
            
            public event FORMA_PAGESARowChangeEventHandler FORMA_PAGESARowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddFORMA_PAGESARow(FORMA_PAGESARow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FORMA_PAGESARow AddFORMA_PAGESARow(string FORMA_PAGESA, double KOMISIONI) {
                FORMA_PAGESARow rowFORMA_PAGESARow = ((FORMA_PAGESARow)(this.NewRow()));
                rowFORMA_PAGESARow.ItemArray = new object[] {
                        null,
                        FORMA_PAGESA,
                        KOMISIONI};
                this.Rows.Add(rowFORMA_PAGESARow);
                return rowFORMA_PAGESARow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FORMA_PAGESARow FindByID_FORMAPAGESA(int ID_FORMAPAGESA) {
                return ((FORMA_PAGESARow)(this.Rows.Find(new object[] {
                            ID_FORMAPAGESA})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                FORMA_PAGESADataTable cln = ((FORMA_PAGESADataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new FORMA_PAGESADataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID_FORMAPAGESA = base.Columns["ID_FORMAPAGESA"];
                this.columnFORMA_PAGESA = base.Columns["FORMA_PAGESA"];
                this.columnKOMISIONI = base.Columns["KOMISIONI"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID_FORMAPAGESA = new System.Data.DataColumn("ID_FORMAPAGESA", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_FORMAPAGESA);
                this.columnFORMA_PAGESA = new System.Data.DataColumn("FORMA_PAGESA", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFORMA_PAGESA);
                this.columnKOMISIONI = new System.Data.DataColumn("KOMISIONI", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnKOMISIONI);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnID_FORMAPAGESA}, true));
                this.columnID_FORMAPAGESA.AutoIncrement = true;
                this.columnID_FORMAPAGESA.AllowDBNull = false;
                this.columnID_FORMAPAGESA.ReadOnly = true;
                this.columnID_FORMAPAGESA.Unique = true;
                this.columnFORMA_PAGESA.AllowDBNull = false;
                this.columnFORMA_PAGESA.MaxLength = 50;
                this.columnKOMISIONI.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FORMA_PAGESARow NewFORMA_PAGESARow() {
                return ((FORMA_PAGESARow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new FORMA_PAGESARow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(FORMA_PAGESARow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FORMA_PAGESARowChanged != null)) {
                    this.FORMA_PAGESARowChanged(this, new FORMA_PAGESARowChangeEvent(((FORMA_PAGESARow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FORMA_PAGESARowChanging != null)) {
                    this.FORMA_PAGESARowChanging(this, new FORMA_PAGESARowChangeEvent(((FORMA_PAGESARow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FORMA_PAGESARowDeleted != null)) {
                    this.FORMA_PAGESARowDeleted(this, new FORMA_PAGESARowChangeEvent(((FORMA_PAGESARow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FORMA_PAGESARowDeleting != null)) {
                    this.FORMA_PAGESARowDeleting(this, new FORMA_PAGESARowChangeEvent(((FORMA_PAGESARow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveFORMA_PAGESARow(FORMA_PAGESARow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                ResManagerDataSet ds = new ResManagerDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FORMA_PAGESADataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FURNITORETDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnID_FURNITORI;
            
            private System.Data.DataColumn columnEMRI;
            
            private System.Data.DataColumn columnMBIEMRI;
            
            private System.Data.DataColumn columnADRESA;
            
            private System.Data.DataColumn columnEMAILI;
            
            private System.Data.DataColumn columnTELEFONI;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FURNITORETDataTable() {
                this.TableName = "FURNITORET";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FURNITORETDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected FURNITORETDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_FURNITORIColumn {
                get {
                    return this.columnID_FURNITORI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EMRIColumn {
                get {
                    return this.columnEMRI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MBIEMRIColumn {
                get {
                    return this.columnMBIEMRI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ADRESAColumn {
                get {
                    return this.columnADRESA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EMAILIColumn {
                get {
                    return this.columnEMAILI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TELEFONIColumn {
                get {
                    return this.columnTELEFONI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FURNITORETRow this[int index] {
                get {
                    return ((FURNITORETRow)(this.Rows[index]));
                }
            }
            
            public event FURNITORETRowChangeEventHandler FURNITORETRowChanging;
            
            public event FURNITORETRowChangeEventHandler FURNITORETRowChanged;
            
            public event FURNITORETRowChangeEventHandler FURNITORETRowDeleting;
            
            public event FURNITORETRowChangeEventHandler FURNITORETRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddFURNITORETRow(FURNITORETRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FURNITORETRow AddFURNITORETRow(string EMRI, string MBIEMRI, string ADRESA, string EMAILI, string TELEFONI) {
                FURNITORETRow rowFURNITORETRow = ((FURNITORETRow)(this.NewRow()));
                rowFURNITORETRow.ItemArray = new object[] {
                        null,
                        EMRI,
                        MBIEMRI,
                        ADRESA,
                        EMAILI,
                        TELEFONI};
                this.Rows.Add(rowFURNITORETRow);
                return rowFURNITORETRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FURNITORETRow FindByID_FURNITORI(int ID_FURNITORI) {
                return ((FURNITORETRow)(this.Rows.Find(new object[] {
                            ID_FURNITORI})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                FURNITORETDataTable cln = ((FURNITORETDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new FURNITORETDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID_FURNITORI = base.Columns["ID_FURNITORI"];
                this.columnEMRI = base.Columns["EMRI"];
                this.columnMBIEMRI = base.Columns["MBIEMRI"];
                this.columnADRESA = base.Columns["ADRESA"];
                this.columnEMAILI = base.Columns["EMAILI"];
                this.columnTELEFONI = base.Columns["TELEFONI"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID_FURNITORI = new System.Data.DataColumn("ID_FURNITORI", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_FURNITORI);
                this.columnEMRI = new System.Data.DataColumn("EMRI", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMRI);
                this.columnMBIEMRI = new System.Data.DataColumn("MBIEMRI", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMBIEMRI);
                this.columnADRESA = new System.Data.DataColumn("ADRESA", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnADRESA);
                this.columnEMAILI = new System.Data.DataColumn("EMAILI", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMAILI);
                this.columnTELEFONI = new System.Data.DataColumn("TELEFONI", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTELEFONI);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnID_FURNITORI}, true));
                this.columnID_FURNITORI.AutoIncrement = true;
                this.columnID_FURNITORI.AllowDBNull = false;
                this.columnID_FURNITORI.ReadOnly = true;
                this.columnID_FURNITORI.Unique = true;
                this.columnEMRI.MaxLength = 50;
                this.columnMBIEMRI.MaxLength = 50;
                this.columnADRESA.MaxLength = 2147483647;
                this.columnEMAILI.MaxLength = 2147483647;
                this.columnTELEFONI.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FURNITORETRow NewFURNITORETRow() {
                return ((FURNITORETRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new FURNITORETRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(FURNITORETRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FURNITORETRowChanged != null)) {
                    this.FURNITORETRowChanged(this, new FURNITORETRowChangeEvent(((FURNITORETRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FURNITORETRowChanging != null)) {
                    this.FURNITORETRowChanging(this, new FURNITORETRowChangeEvent(((FURNITORETRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FURNITORETRowDeleted != null)) {
                    this.FURNITORETRowDeleted(this, new FURNITORETRowChangeEvent(((FURNITORETRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FURNITORETRowDeleting != null)) {
                    this.FURNITORETRowDeleting(this, new FURNITORETRowChangeEvent(((FURNITORETRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveFURNITORETRow(FURNITORETRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                ResManagerDataSet ds = new ResManagerDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FURNITORETDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GRUPIDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnID_GRUPI;
            
            private System.Data.DataColumn columnEMRI;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GRUPIDataTable() {
                this.TableName = "GRUPI";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GRUPIDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GRUPIDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_GRUPIColumn {
                get {
                    return this.columnID_GRUPI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EMRIColumn {
                get {
                    return this.columnEMRI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GRUPIRow this[int index] {
                get {
                    return ((GRUPIRow)(this.Rows[index]));
                }
            }
            
            public event GRUPIRowChangeEventHandler GRUPIRowChanging;
            
            public event GRUPIRowChangeEventHandler GRUPIRowChanged;
            
            public event GRUPIRowChangeEventHandler GRUPIRowDeleting;
            
            public event GRUPIRowChangeEventHandler GRUPIRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGRUPIRow(GRUPIRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GRUPIRow AddGRUPIRow(int ID_GRUPI, string EMRI) {
                GRUPIRow rowGRUPIRow = ((GRUPIRow)(this.NewRow()));
                rowGRUPIRow.ItemArray = new object[] {
                        ID_GRUPI,
                        EMRI};
                this.Rows.Add(rowGRUPIRow);
                return rowGRUPIRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GRUPIRow FindByID_GRUPI(int ID_GRUPI) {
                return ((GRUPIRow)(this.Rows.Find(new object[] {
                            ID_GRUPI})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                GRUPIDataTable cln = ((GRUPIDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new GRUPIDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID_GRUPI = base.Columns["ID_GRUPI"];
                this.columnEMRI = base.Columns["EMRI"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID_GRUPI = new System.Data.DataColumn("ID_GRUPI", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_GRUPI);
                this.columnEMRI = new System.Data.DataColumn("EMRI", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMRI);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnID_GRUPI}, true));
                this.columnID_GRUPI.AllowDBNull = false;
                this.columnID_GRUPI.Unique = true;
                this.columnEMRI.AllowDBNull = false;
                this.columnEMRI.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GRUPIRow NewGRUPIRow() {
                return ((GRUPIRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new GRUPIRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(GRUPIRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GRUPIRowChanged != null)) {
                    this.GRUPIRowChanged(this, new GRUPIRowChangeEvent(((GRUPIRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GRUPIRowChanging != null)) {
                    this.GRUPIRowChanging(this, new GRUPIRowChangeEvent(((GRUPIRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GRUPIRowDeleted != null)) {
                    this.GRUPIRowDeleted(this, new GRUPIRowChangeEvent(((GRUPIRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GRUPIRowDeleting != null)) {
                    this.GRUPIRowDeleting(this, new GRUPIRowChangeEvent(((GRUPIRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGRUPIRow(GRUPIRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                ResManagerDataSet ds = new ResManagerDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GRUPIDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class KATEGORIA_SHPENZIMIMUJORDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnID_KATSHPENNZIMIMUJOR;
            
            private System.Data.DataColumn columnCSHPENZIMI;
            
            private System.Data.DataColumn columnPSHPENZIMI;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KATEGORIA_SHPENZIMIMUJORDataTable() {
                this.TableName = "KATEGORIA_SHPENZIMIMUJOR";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal KATEGORIA_SHPENZIMIMUJORDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected KATEGORIA_SHPENZIMIMUJORDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_KATSHPENNZIMIMUJORColumn {
                get {
                    return this.columnID_KATSHPENNZIMIMUJOR;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CSHPENZIMIColumn {
                get {
                    return this.columnCSHPENZIMI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PSHPENZIMIColumn {
                get {
                    return this.columnPSHPENZIMI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KATEGORIA_SHPENZIMIMUJORRow this[int index] {
                get {
                    return ((KATEGORIA_SHPENZIMIMUJORRow)(this.Rows[index]));
                }
            }
            
            public event KATEGORIA_SHPENZIMIMUJORRowChangeEventHandler KATEGORIA_SHPENZIMIMUJORRowChanging;
            
            public event KATEGORIA_SHPENZIMIMUJORRowChangeEventHandler KATEGORIA_SHPENZIMIMUJORRowChanged;
            
            public event KATEGORIA_SHPENZIMIMUJORRowChangeEventHandler KATEGORIA_SHPENZIMIMUJORRowDeleting;
            
            public event KATEGORIA_SHPENZIMIMUJORRowChangeEventHandler KATEGORIA_SHPENZIMIMUJORRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddKATEGORIA_SHPENZIMIMUJORRow(KATEGORIA_SHPENZIMIMUJORRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KATEGORIA_SHPENZIMIMUJORRow AddKATEGORIA_SHPENZIMIMUJORRow(int ID_KATSHPENNZIMIMUJOR, byte[] CSHPENZIMI, string PSHPENZIMI) {
                KATEGORIA_SHPENZIMIMUJORRow rowKATEGORIA_SHPENZIMIMUJORRow = ((KATEGORIA_SHPENZIMIMUJORRow)(this.NewRow()));
                rowKATEGORIA_SHPENZIMIMUJORRow.ItemArray = new object[] {
                        ID_KATSHPENNZIMIMUJOR,
                        CSHPENZIMI,
                        PSHPENZIMI};
                this.Rows.Add(rowKATEGORIA_SHPENZIMIMUJORRow);
                return rowKATEGORIA_SHPENZIMIMUJORRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KATEGORIA_SHPENZIMIMUJORRow FindByID_KATSHPENNZIMIMUJOR(int ID_KATSHPENNZIMIMUJOR) {
                return ((KATEGORIA_SHPENZIMIMUJORRow)(this.Rows.Find(new object[] {
                            ID_KATSHPENNZIMIMUJOR})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                KATEGORIA_SHPENZIMIMUJORDataTable cln = ((KATEGORIA_SHPENZIMIMUJORDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new KATEGORIA_SHPENZIMIMUJORDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID_KATSHPENNZIMIMUJOR = base.Columns["ID_KATSHPENNZIMIMUJOR"];
                this.columnCSHPENZIMI = base.Columns["CSHPENZIMI"];
                this.columnPSHPENZIMI = base.Columns["PSHPENZIMI"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID_KATSHPENNZIMIMUJOR = new System.Data.DataColumn("ID_KATSHPENNZIMIMUJOR", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_KATSHPENNZIMIMUJOR);
                this.columnCSHPENZIMI = new System.Data.DataColumn("CSHPENZIMI", typeof(byte[]), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCSHPENZIMI);
                this.columnPSHPENZIMI = new System.Data.DataColumn("PSHPENZIMI", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPSHPENZIMI);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnID_KATSHPENNZIMIMUJOR}, true));
                this.columnID_KATSHPENNZIMIMUJOR.AllowDBNull = false;
                this.columnID_KATSHPENNZIMIMUJOR.Unique = true;
                this.columnCSHPENZIMI.AllowDBNull = false;
                this.columnPSHPENZIMI.AllowDBNull = false;
                this.columnPSHPENZIMI.MaxLength = 2147483647;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KATEGORIA_SHPENZIMIMUJORRow NewKATEGORIA_SHPENZIMIMUJORRow() {
                return ((KATEGORIA_SHPENZIMIMUJORRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new KATEGORIA_SHPENZIMIMUJORRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(KATEGORIA_SHPENZIMIMUJORRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.KATEGORIA_SHPENZIMIMUJORRowChanged != null)) {
                    this.KATEGORIA_SHPENZIMIMUJORRowChanged(this, new KATEGORIA_SHPENZIMIMUJORRowChangeEvent(((KATEGORIA_SHPENZIMIMUJORRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.KATEGORIA_SHPENZIMIMUJORRowChanging != null)) {
                    this.KATEGORIA_SHPENZIMIMUJORRowChanging(this, new KATEGORIA_SHPENZIMIMUJORRowChangeEvent(((KATEGORIA_SHPENZIMIMUJORRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.KATEGORIA_SHPENZIMIMUJORRowDeleted != null)) {
                    this.KATEGORIA_SHPENZIMIMUJORRowDeleted(this, new KATEGORIA_SHPENZIMIMUJORRowChangeEvent(((KATEGORIA_SHPENZIMIMUJORRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.KATEGORIA_SHPENZIMIMUJORRowDeleting != null)) {
                    this.KATEGORIA_SHPENZIMIMUJORRowDeleting(this, new KATEGORIA_SHPENZIMIMUJORRowChangeEvent(((KATEGORIA_SHPENZIMIMUJORRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveKATEGORIA_SHPENZIMIMUJORRow(KATEGORIA_SHPENZIMIMUJORRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                ResManagerDataSet ds = new ResManagerDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "KATEGORIA_SHPENZIMIMUJORDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class KATEGORITE_ARTIKUJTDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnID_KATEGORIAARTIKULLI;
            
            private System.Data.DataColumn columnPERSHKRIMI;
            
            private System.Data.DataColumn columnVISIBLE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KATEGORITE_ARTIKUJTDataTable() {
                this.TableName = "KATEGORITE_ARTIKUJT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal KATEGORITE_ARTIKUJTDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected KATEGORITE_ARTIKUJTDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_KATEGORIAARTIKULLIColumn {
                get {
                    return this.columnID_KATEGORIAARTIKULLI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PERSHKRIMIColumn {
                get {
                    return this.columnPERSHKRIMI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn VISIBLEColumn {
                get {
                    return this.columnVISIBLE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KATEGORITE_ARTIKUJTRow this[int index] {
                get {
                    return ((KATEGORITE_ARTIKUJTRow)(this.Rows[index]));
                }
            }
            
            public event KATEGORITE_ARTIKUJTRowChangeEventHandler KATEGORITE_ARTIKUJTRowChanging;
            
            public event KATEGORITE_ARTIKUJTRowChangeEventHandler KATEGORITE_ARTIKUJTRowChanged;
            
            public event KATEGORITE_ARTIKUJTRowChangeEventHandler KATEGORITE_ARTIKUJTRowDeleting;
            
            public event KATEGORITE_ARTIKUJTRowChangeEventHandler KATEGORITE_ARTIKUJTRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddKATEGORITE_ARTIKUJTRow(KATEGORITE_ARTIKUJTRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KATEGORITE_ARTIKUJTRow AddKATEGORITE_ARTIKUJTRow(string PERSHKRIMI, bool VISIBLE) {
                KATEGORITE_ARTIKUJTRow rowKATEGORITE_ARTIKUJTRow = ((KATEGORITE_ARTIKUJTRow)(this.NewRow()));
                rowKATEGORITE_ARTIKUJTRow.ItemArray = new object[] {
                        null,
                        PERSHKRIMI,
                        VISIBLE};
                this.Rows.Add(rowKATEGORITE_ARTIKUJTRow);
                return rowKATEGORITE_ARTIKUJTRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KATEGORITE_ARTIKUJTRow FindByID_KATEGORIAARTIKULLI(int ID_KATEGORIAARTIKULLI) {
                return ((KATEGORITE_ARTIKUJTRow)(this.Rows.Find(new object[] {
                            ID_KATEGORIAARTIKULLI})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                KATEGORITE_ARTIKUJTDataTable cln = ((KATEGORITE_ARTIKUJTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new KATEGORITE_ARTIKUJTDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID_KATEGORIAARTIKULLI = base.Columns["ID_KATEGORIAARTIKULLI"];
                this.columnPERSHKRIMI = base.Columns["PERSHKRIMI"];
                this.columnVISIBLE = base.Columns["VISIBLE"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID_KATEGORIAARTIKULLI = new System.Data.DataColumn("ID_KATEGORIAARTIKULLI", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_KATEGORIAARTIKULLI);
                this.columnPERSHKRIMI = new System.Data.DataColumn("PERSHKRIMI", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPERSHKRIMI);
                this.columnVISIBLE = new System.Data.DataColumn("VISIBLE", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnVISIBLE);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnID_KATEGORIAARTIKULLI}, true));
                this.columnID_KATEGORIAARTIKULLI.AutoIncrement = true;
                this.columnID_KATEGORIAARTIKULLI.AllowDBNull = false;
                this.columnID_KATEGORIAARTIKULLI.ReadOnly = true;
                this.columnID_KATEGORIAARTIKULLI.Unique = true;
                this.columnPERSHKRIMI.AllowDBNull = false;
                this.columnPERSHKRIMI.MaxLength = 50;
                this.columnVISIBLE.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KATEGORITE_ARTIKUJTRow NewKATEGORITE_ARTIKUJTRow() {
                return ((KATEGORITE_ARTIKUJTRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new KATEGORITE_ARTIKUJTRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(KATEGORITE_ARTIKUJTRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.KATEGORITE_ARTIKUJTRowChanged != null)) {
                    this.KATEGORITE_ARTIKUJTRowChanged(this, new KATEGORITE_ARTIKUJTRowChangeEvent(((KATEGORITE_ARTIKUJTRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.KATEGORITE_ARTIKUJTRowChanging != null)) {
                    this.KATEGORITE_ARTIKUJTRowChanging(this, new KATEGORITE_ARTIKUJTRowChangeEvent(((KATEGORITE_ARTIKUJTRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.KATEGORITE_ARTIKUJTRowDeleted != null)) {
                    this.KATEGORITE_ARTIKUJTRowDeleted(this, new KATEGORITE_ARTIKUJTRowChangeEvent(((KATEGORITE_ARTIKUJTRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.KATEGORITE_ARTIKUJTRowDeleting != null)) {
                    this.KATEGORITE_ARTIKUJTRowDeleting(this, new KATEGORITE_ARTIKUJTRowChangeEvent(((KATEGORITE_ARTIKUJTRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveKATEGORITE_ARTIKUJTRow(KATEGORITE_ARTIKUJTRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                ResManagerDataSet ds = new ResManagerDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "KATEGORITE_ARTIKUJTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class KATEGORITE_RECETATDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnID_KATEGORIARECETA;
            
            private System.Data.DataColumn columnPERSHKRIMI;
            
            private System.Data.DataColumn columnrowguid;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KATEGORITE_RECETATDataTable() {
                this.TableName = "KATEGORITE_RECETAT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal KATEGORITE_RECETATDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected KATEGORITE_RECETATDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_KATEGORIARECETAColumn {
                get {
                    return this.columnID_KATEGORIARECETA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PERSHKRIMIColumn {
                get {
                    return this.columnPERSHKRIMI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn rowguidColumn {
                get {
                    return this.columnrowguid;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KATEGORITE_RECETATRow this[int index] {
                get {
                    return ((KATEGORITE_RECETATRow)(this.Rows[index]));
                }
            }
            
            public event KATEGORITE_RECETATRowChangeEventHandler KATEGORITE_RECETATRowChanging;
            
            public event KATEGORITE_RECETATRowChangeEventHandler KATEGORITE_RECETATRowChanged;
            
            public event KATEGORITE_RECETATRowChangeEventHandler KATEGORITE_RECETATRowDeleting;
            
            public event KATEGORITE_RECETATRowChangeEventHandler KATEGORITE_RECETATRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddKATEGORITE_RECETATRow(KATEGORITE_RECETATRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KATEGORITE_RECETATRow AddKATEGORITE_RECETATRow(int ID_KATEGORIARECETA, string PERSHKRIMI, System.Guid rowguid) {
                KATEGORITE_RECETATRow rowKATEGORITE_RECETATRow = ((KATEGORITE_RECETATRow)(this.NewRow()));
                rowKATEGORITE_RECETATRow.ItemArray = new object[] {
                        ID_KATEGORIARECETA,
                        PERSHKRIMI,
                        rowguid};
                this.Rows.Add(rowKATEGORITE_RECETATRow);
                return rowKATEGORITE_RECETATRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KATEGORITE_RECETATRow FindByID_KATEGORIARECETA(int ID_KATEGORIARECETA) {
                return ((KATEGORITE_RECETATRow)(this.Rows.Find(new object[] {
                            ID_KATEGORIARECETA})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                KATEGORITE_RECETATDataTable cln = ((KATEGORITE_RECETATDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new KATEGORITE_RECETATDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID_KATEGORIARECETA = base.Columns["ID_KATEGORIARECETA"];
                this.columnPERSHKRIMI = base.Columns["PERSHKRIMI"];
                this.columnrowguid = base.Columns["rowguid"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID_KATEGORIARECETA = new System.Data.DataColumn("ID_KATEGORIARECETA", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_KATEGORIARECETA);
                this.columnPERSHKRIMI = new System.Data.DataColumn("PERSHKRIMI", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPERSHKRIMI);
                this.columnrowguid = new System.Data.DataColumn("rowguid", typeof(System.Guid), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnrowguid);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnID_KATEGORIARECETA}, true));
                this.columnID_KATEGORIARECETA.AllowDBNull = false;
                this.columnID_KATEGORIARECETA.Unique = true;
                this.columnPERSHKRIMI.AllowDBNull = false;
                this.columnPERSHKRIMI.MaxLength = 50;
                this.columnrowguid.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KATEGORITE_RECETATRow NewKATEGORITE_RECETATRow() {
                return ((KATEGORITE_RECETATRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new KATEGORITE_RECETATRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(KATEGORITE_RECETATRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.KATEGORITE_RECETATRowChanged != null)) {
                    this.KATEGORITE_RECETATRowChanged(this, new KATEGORITE_RECETATRowChangeEvent(((KATEGORITE_RECETATRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.KATEGORITE_RECETATRowChanging != null)) {
                    this.KATEGORITE_RECETATRowChanging(this, new KATEGORITE_RECETATRowChangeEvent(((KATEGORITE_RECETATRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.KATEGORITE_RECETATRowDeleted != null)) {
                    this.KATEGORITE_RECETATRowDeleted(this, new KATEGORITE_RECETATRowChangeEvent(((KATEGORITE_RECETATRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.KATEGORITE_RECETATRowDeleting != null)) {
                    this.KATEGORITE_RECETATRowDeleting(this, new KATEGORITE_RECETATRowChangeEvent(((KATEGORITE_RECETATRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveKATEGORITE_RECETATRow(KATEGORITE_RECETATRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                ResManagerDataSet ds = new ResManagerDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "KATEGORITE_RECETATDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class KATEGORITE_SHPENZIMETDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnID_KATEGORIASHPENZIMI;
            
            private System.Data.DataColumn columnPERSHKRIMI;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KATEGORITE_SHPENZIMETDataTable() {
                this.TableName = "KATEGORITE_SHPENZIMET";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal KATEGORITE_SHPENZIMETDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected KATEGORITE_SHPENZIMETDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_KATEGORIASHPENZIMIColumn {
                get {
                    return this.columnID_KATEGORIASHPENZIMI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PERSHKRIMIColumn {
                get {
                    return this.columnPERSHKRIMI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KATEGORITE_SHPENZIMETRow this[int index] {
                get {
                    return ((KATEGORITE_SHPENZIMETRow)(this.Rows[index]));
                }
            }
            
            public event KATEGORITE_SHPENZIMETRowChangeEventHandler KATEGORITE_SHPENZIMETRowChanging;
            
            public event KATEGORITE_SHPENZIMETRowChangeEventHandler KATEGORITE_SHPENZIMETRowChanged;
            
            public event KATEGORITE_SHPENZIMETRowChangeEventHandler KATEGORITE_SHPENZIMETRowDeleting;
            
            public event KATEGORITE_SHPENZIMETRowChangeEventHandler KATEGORITE_SHPENZIMETRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddKATEGORITE_SHPENZIMETRow(KATEGORITE_SHPENZIMETRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KATEGORITE_SHPENZIMETRow AddKATEGORITE_SHPENZIMETRow(string PERSHKRIMI) {
                KATEGORITE_SHPENZIMETRow rowKATEGORITE_SHPENZIMETRow = ((KATEGORITE_SHPENZIMETRow)(this.NewRow()));
                rowKATEGORITE_SHPENZIMETRow.ItemArray = new object[] {
                        null,
                        PERSHKRIMI};
                this.Rows.Add(rowKATEGORITE_SHPENZIMETRow);
                return rowKATEGORITE_SHPENZIMETRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KATEGORITE_SHPENZIMETRow FindByID_KATEGORIASHPENZIMI(int ID_KATEGORIASHPENZIMI) {
                return ((KATEGORITE_SHPENZIMETRow)(this.Rows.Find(new object[] {
                            ID_KATEGORIASHPENZIMI})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                KATEGORITE_SHPENZIMETDataTable cln = ((KATEGORITE_SHPENZIMETDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new KATEGORITE_SHPENZIMETDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID_KATEGORIASHPENZIMI = base.Columns["ID_KATEGORIASHPENZIMI"];
                this.columnPERSHKRIMI = base.Columns["PERSHKRIMI"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID_KATEGORIASHPENZIMI = new System.Data.DataColumn("ID_KATEGORIASHPENZIMI", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_KATEGORIASHPENZIMI);
                this.columnPERSHKRIMI = new System.Data.DataColumn("PERSHKRIMI", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPERSHKRIMI);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnID_KATEGORIASHPENZIMI}, true));
                this.columnID_KATEGORIASHPENZIMI.AutoIncrement = true;
                this.columnID_KATEGORIASHPENZIMI.AllowDBNull = false;
                this.columnID_KATEGORIASHPENZIMI.ReadOnly = true;
                this.columnID_KATEGORIASHPENZIMI.Unique = true;
                this.columnPERSHKRIMI.AllowDBNull = false;
                this.columnPERSHKRIMI.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KATEGORITE_SHPENZIMETRow NewKATEGORITE_SHPENZIMETRow() {
                return ((KATEGORITE_SHPENZIMETRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new KATEGORITE_SHPENZIMETRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(KATEGORITE_SHPENZIMETRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.KATEGORITE_SHPENZIMETRowChanged != null)) {
                    this.KATEGORITE_SHPENZIMETRowChanged(this, new KATEGORITE_SHPENZIMETRowChangeEvent(((KATEGORITE_SHPENZIMETRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.KATEGORITE_SHPENZIMETRowChanging != null)) {
                    this.KATEGORITE_SHPENZIMETRowChanging(this, new KATEGORITE_SHPENZIMETRowChangeEvent(((KATEGORITE_SHPENZIMETRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.KATEGORITE_SHPENZIMETRowDeleted != null)) {
                    this.KATEGORITE_SHPENZIMETRowDeleted(this, new KATEGORITE_SHPENZIMETRowChangeEvent(((KATEGORITE_SHPENZIMETRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.KATEGORITE_SHPENZIMETRowDeleting != null)) {
                    this.KATEGORITE_SHPENZIMETRowDeleting(this, new KATEGORITE_SHPENZIMETRowChangeEvent(((KATEGORITE_SHPENZIMETRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveKATEGORITE_SHPENZIMETRow(KATEGORITE_SHPENZIMETRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                ResManagerDataSet ds = new ResManagerDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "KATEGORITE_SHPENZIMETDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class KATEGORITE_TAVOLINATDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnID_KATEGORIATAVOLINA;
            
            private System.Data.DataColumn columnPERSHKRIMI;
            
            private System.Data.DataColumn columnrowguid;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KATEGORITE_TAVOLINATDataTable() {
                this.TableName = "KATEGORITE_TAVOLINAT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal KATEGORITE_TAVOLINATDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected KATEGORITE_TAVOLINATDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_KATEGORIATAVOLINAColumn {
                get {
                    return this.columnID_KATEGORIATAVOLINA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PERSHKRIMIColumn {
                get {
                    return this.columnPERSHKRIMI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn rowguidColumn {
                get {
                    return this.columnrowguid;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KATEGORITE_TAVOLINATRow this[int index] {
                get {
                    return ((KATEGORITE_TAVOLINATRow)(this.Rows[index]));
                }
            }
            
            public event KATEGORITE_TAVOLINATRowChangeEventHandler KATEGORITE_TAVOLINATRowChanging;
            
            public event KATEGORITE_TAVOLINATRowChangeEventHandler KATEGORITE_TAVOLINATRowChanged;
            
            public event KATEGORITE_TAVOLINATRowChangeEventHandler KATEGORITE_TAVOLINATRowDeleting;
            
            public event KATEGORITE_TAVOLINATRowChangeEventHandler KATEGORITE_TAVOLINATRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddKATEGORITE_TAVOLINATRow(KATEGORITE_TAVOLINATRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KATEGORITE_TAVOLINATRow AddKATEGORITE_TAVOLINATRow(string PERSHKRIMI, System.Guid rowguid) {
                KATEGORITE_TAVOLINATRow rowKATEGORITE_TAVOLINATRow = ((KATEGORITE_TAVOLINATRow)(this.NewRow()));
                rowKATEGORITE_TAVOLINATRow.ItemArray = new object[] {
                        null,
                        PERSHKRIMI,
                        rowguid};
                this.Rows.Add(rowKATEGORITE_TAVOLINATRow);
                return rowKATEGORITE_TAVOLINATRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KATEGORITE_TAVOLINATRow FindByID_KATEGORIATAVOLINA(int ID_KATEGORIATAVOLINA) {
                return ((KATEGORITE_TAVOLINATRow)(this.Rows.Find(new object[] {
                            ID_KATEGORIATAVOLINA})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                KATEGORITE_TAVOLINATDataTable cln = ((KATEGORITE_TAVOLINATDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new KATEGORITE_TAVOLINATDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID_KATEGORIATAVOLINA = base.Columns["ID_KATEGORIATAVOLINA"];
                this.columnPERSHKRIMI = base.Columns["PERSHKRIMI"];
                this.columnrowguid = base.Columns["rowguid"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID_KATEGORIATAVOLINA = new System.Data.DataColumn("ID_KATEGORIATAVOLINA", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_KATEGORIATAVOLINA);
                this.columnPERSHKRIMI = new System.Data.DataColumn("PERSHKRIMI", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPERSHKRIMI);
                this.columnrowguid = new System.Data.DataColumn("rowguid", typeof(System.Guid), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnrowguid);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnID_KATEGORIATAVOLINA}, true));
                this.columnID_KATEGORIATAVOLINA.AutoIncrement = true;
                this.columnID_KATEGORIATAVOLINA.AllowDBNull = false;
                this.columnID_KATEGORIATAVOLINA.ReadOnly = true;
                this.columnID_KATEGORIATAVOLINA.Unique = true;
                this.columnPERSHKRIMI.AllowDBNull = false;
                this.columnPERSHKRIMI.MaxLength = 50;
                this.columnrowguid.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KATEGORITE_TAVOLINATRow NewKATEGORITE_TAVOLINATRow() {
                return ((KATEGORITE_TAVOLINATRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new KATEGORITE_TAVOLINATRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(KATEGORITE_TAVOLINATRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.KATEGORITE_TAVOLINATRowChanged != null)) {
                    this.KATEGORITE_TAVOLINATRowChanged(this, new KATEGORITE_TAVOLINATRowChangeEvent(((KATEGORITE_TAVOLINATRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.KATEGORITE_TAVOLINATRowChanging != null)) {
                    this.KATEGORITE_TAVOLINATRowChanging(this, new KATEGORITE_TAVOLINATRowChangeEvent(((KATEGORITE_TAVOLINATRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.KATEGORITE_TAVOLINATRowDeleted != null)) {
                    this.KATEGORITE_TAVOLINATRowDeleted(this, new KATEGORITE_TAVOLINATRowChangeEvent(((KATEGORITE_TAVOLINATRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.KATEGORITE_TAVOLINATRowDeleting != null)) {
                    this.KATEGORITE_TAVOLINATRowDeleting(this, new KATEGORITE_TAVOLINATRowChangeEvent(((KATEGORITE_TAVOLINATRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveKATEGORITE_TAVOLINATRow(KATEGORITE_TAVOLINATRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                ResManagerDataSet ds = new ResManagerDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "KATEGORITE_TAVOLINATDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class KLIENTETDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnID_KLIENTI;
            
            private System.Data.DataColumn columnID_GRUPI;
            
            private System.Data.DataColumn columnEMER;
            
            private System.Data.DataColumn columnMBIEMER;
            
            private System.Data.DataColumn columnDATELINDJA;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KLIENTETDataTable() {
                this.TableName = "KLIENTET";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal KLIENTETDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected KLIENTETDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_KLIENTIColumn {
                get {
                    return this.columnID_KLIENTI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_GRUPIColumn {
                get {
                    return this.columnID_GRUPI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EMERColumn {
                get {
                    return this.columnEMER;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MBIEMERColumn {
                get {
                    return this.columnMBIEMER;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DATELINDJAColumn {
                get {
                    return this.columnDATELINDJA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KLIENTETRow this[int index] {
                get {
                    return ((KLIENTETRow)(this.Rows[index]));
                }
            }
            
            public event KLIENTETRowChangeEventHandler KLIENTETRowChanging;
            
            public event KLIENTETRowChangeEventHandler KLIENTETRowChanged;
            
            public event KLIENTETRowChangeEventHandler KLIENTETRowDeleting;
            
            public event KLIENTETRowChangeEventHandler KLIENTETRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddKLIENTETRow(KLIENTETRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KLIENTETRow AddKLIENTETRow(int ID_KLIENTI, int ID_GRUPI, string EMER, string MBIEMER, System.DateTime DATELINDJA) {
                KLIENTETRow rowKLIENTETRow = ((KLIENTETRow)(this.NewRow()));
                rowKLIENTETRow.ItemArray = new object[] {
                        ID_KLIENTI,
                        ID_GRUPI,
                        EMER,
                        MBIEMER,
                        DATELINDJA};
                this.Rows.Add(rowKLIENTETRow);
                return rowKLIENTETRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KLIENTETRow FindByID_KLIENTI(int ID_KLIENTI) {
                return ((KLIENTETRow)(this.Rows.Find(new object[] {
                            ID_KLIENTI})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                KLIENTETDataTable cln = ((KLIENTETDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new KLIENTETDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID_KLIENTI = base.Columns["ID_KLIENTI"];
                this.columnID_GRUPI = base.Columns["ID_GRUPI"];
                this.columnEMER = base.Columns["EMER"];
                this.columnMBIEMER = base.Columns["MBIEMER"];
                this.columnDATELINDJA = base.Columns["DATELINDJA"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID_KLIENTI = new System.Data.DataColumn("ID_KLIENTI", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_KLIENTI);
                this.columnID_GRUPI = new System.Data.DataColumn("ID_GRUPI", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_GRUPI);
                this.columnEMER = new System.Data.DataColumn("EMER", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMER);
                this.columnMBIEMER = new System.Data.DataColumn("MBIEMER", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMBIEMER);
                this.columnDATELINDJA = new System.Data.DataColumn("DATELINDJA", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATELINDJA);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnID_KLIENTI}, true));
                this.columnID_KLIENTI.AllowDBNull = false;
                this.columnID_KLIENTI.Unique = true;
                this.columnID_GRUPI.AllowDBNull = false;
                this.columnEMER.AllowDBNull = false;
                this.columnEMER.MaxLength = 50;
                this.columnMBIEMER.AllowDBNull = false;
                this.columnMBIEMER.MaxLength = 50;
                this.columnDATELINDJA.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KLIENTETRow NewKLIENTETRow() {
                return ((KLIENTETRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new KLIENTETRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(KLIENTETRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.KLIENTETRowChanged != null)) {
                    this.KLIENTETRowChanged(this, new KLIENTETRowChangeEvent(((KLIENTETRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.KLIENTETRowChanging != null)) {
                    this.KLIENTETRowChanging(this, new KLIENTETRowChangeEvent(((KLIENTETRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.KLIENTETRowDeleted != null)) {
                    this.KLIENTETRowDeleted(this, new KLIENTETRowChangeEvent(((KLIENTETRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.KLIENTETRowDeleting != null)) {
                    this.KLIENTETRowDeleting(this, new KLIENTETRowChangeEvent(((KLIENTETRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveKLIENTETRow(KLIENTETRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                ResManagerDataSet ds = new ResManagerDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "KLIENTETDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class KLIENTET_RESTORANTIDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnID_KLIENTI;
            
            private System.Data.DataColumn columnEMRI;
            
            private System.Data.DataColumn columnMBIEMRI;
            
            private System.Data.DataColumn columnTELEFONI;
            
            private System.Data.DataColumn columnKODI_KLIENTI;
            
            private System.Data.DataColumn columnADRESA;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KLIENTET_RESTORANTIDataTable() {
                this.TableName = "KLIENTET_RESTORANTI";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal KLIENTET_RESTORANTIDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected KLIENTET_RESTORANTIDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_KLIENTIColumn {
                get {
                    return this.columnID_KLIENTI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EMRIColumn {
                get {
                    return this.columnEMRI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MBIEMRIColumn {
                get {
                    return this.columnMBIEMRI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TELEFONIColumn {
                get {
                    return this.columnTELEFONI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn KODI_KLIENTIColumn {
                get {
                    return this.columnKODI_KLIENTI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ADRESAColumn {
                get {
                    return this.columnADRESA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KLIENTET_RESTORANTIRow this[int index] {
                get {
                    return ((KLIENTET_RESTORANTIRow)(this.Rows[index]));
                }
            }
            
            public event KLIENTET_RESTORANTIRowChangeEventHandler KLIENTET_RESTORANTIRowChanging;
            
            public event KLIENTET_RESTORANTIRowChangeEventHandler KLIENTET_RESTORANTIRowChanged;
            
            public event KLIENTET_RESTORANTIRowChangeEventHandler KLIENTET_RESTORANTIRowDeleting;
            
            public event KLIENTET_RESTORANTIRowChangeEventHandler KLIENTET_RESTORANTIRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddKLIENTET_RESTORANTIRow(KLIENTET_RESTORANTIRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KLIENTET_RESTORANTIRow AddKLIENTET_RESTORANTIRow(int ID_KLIENTI, string EMRI, string MBIEMRI, string TELEFONI, string KODI_KLIENTI, string ADRESA) {
                KLIENTET_RESTORANTIRow rowKLIENTET_RESTORANTIRow = ((KLIENTET_RESTORANTIRow)(this.NewRow()));
                rowKLIENTET_RESTORANTIRow.ItemArray = new object[] {
                        ID_KLIENTI,
                        EMRI,
                        MBIEMRI,
                        TELEFONI,
                        KODI_KLIENTI,
                        ADRESA};
                this.Rows.Add(rowKLIENTET_RESTORANTIRow);
                return rowKLIENTET_RESTORANTIRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KLIENTET_RESTORANTIRow FindByID_KLIENTI(int ID_KLIENTI) {
                return ((KLIENTET_RESTORANTIRow)(this.Rows.Find(new object[] {
                            ID_KLIENTI})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                KLIENTET_RESTORANTIDataTable cln = ((KLIENTET_RESTORANTIDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new KLIENTET_RESTORANTIDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID_KLIENTI = base.Columns["ID_KLIENTI"];
                this.columnEMRI = base.Columns["EMRI"];
                this.columnMBIEMRI = base.Columns["MBIEMRI"];
                this.columnTELEFONI = base.Columns["TELEFONI"];
                this.columnKODI_KLIENTI = base.Columns["KODI_KLIENTI"];
                this.columnADRESA = base.Columns["ADRESA"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID_KLIENTI = new System.Data.DataColumn("ID_KLIENTI", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_KLIENTI);
                this.columnEMRI = new System.Data.DataColumn("EMRI", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMRI);
                this.columnMBIEMRI = new System.Data.DataColumn("MBIEMRI", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMBIEMRI);
                this.columnTELEFONI = new System.Data.DataColumn("TELEFONI", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTELEFONI);
                this.columnKODI_KLIENTI = new System.Data.DataColumn("KODI_KLIENTI", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnKODI_KLIENTI);
                this.columnADRESA = new System.Data.DataColumn("ADRESA", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnADRESA);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnID_KLIENTI}, true));
                this.columnID_KLIENTI.AllowDBNull = false;
                this.columnID_KLIENTI.Unique = true;
                this.columnEMRI.AllowDBNull = false;
                this.columnEMRI.MaxLength = 50;
                this.columnMBIEMRI.AllowDBNull = false;
                this.columnMBIEMRI.MaxLength = 50;
                this.columnTELEFONI.AllowDBNull = false;
                this.columnTELEFONI.MaxLength = 50;
                this.columnKODI_KLIENTI.AllowDBNull = false;
                this.columnKODI_KLIENTI.MaxLength = 50;
                this.columnADRESA.AllowDBNull = false;
                this.columnADRESA.MaxLength = 2147483647;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KLIENTET_RESTORANTIRow NewKLIENTET_RESTORANTIRow() {
                return ((KLIENTET_RESTORANTIRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new KLIENTET_RESTORANTIRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(KLIENTET_RESTORANTIRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.KLIENTET_RESTORANTIRowChanged != null)) {
                    this.KLIENTET_RESTORANTIRowChanged(this, new KLIENTET_RESTORANTIRowChangeEvent(((KLIENTET_RESTORANTIRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.KLIENTET_RESTORANTIRowChanging != null)) {
                    this.KLIENTET_RESTORANTIRowChanging(this, new KLIENTET_RESTORANTIRowChangeEvent(((KLIENTET_RESTORANTIRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.KLIENTET_RESTORANTIRowDeleted != null)) {
                    this.KLIENTET_RESTORANTIRowDeleted(this, new KLIENTET_RESTORANTIRowChangeEvent(((KLIENTET_RESTORANTIRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.KLIENTET_RESTORANTIRowDeleting != null)) {
                    this.KLIENTET_RESTORANTIRowDeleting(this, new KLIENTET_RESTORANTIRowChangeEvent(((KLIENTET_RESTORANTIRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveKLIENTET_RESTORANTIRow(KLIENTET_RESTORANTIRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                ResManagerDataSet ds = new ResManagerDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "KLIENTET_RESTORANTIDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class NJESITEDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnID_NJESIA;
            
            private System.Data.DataColumn columnNJESIA;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NJESITEDataTable() {
                this.TableName = "NJESITE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal NJESITEDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected NJESITEDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_NJESIAColumn {
                get {
                    return this.columnID_NJESIA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NJESIAColumn {
                get {
                    return this.columnNJESIA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NJESITERow this[int index] {
                get {
                    return ((NJESITERow)(this.Rows[index]));
                }
            }
            
            public event NJESITERowChangeEventHandler NJESITERowChanging;
            
            public event NJESITERowChangeEventHandler NJESITERowChanged;
            
            public event NJESITERowChangeEventHandler NJESITERowDeleting;
            
            public event NJESITERowChangeEventHandler NJESITERowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddNJESITERow(NJESITERow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NJESITERow AddNJESITERow(string NJESIA) {
                NJESITERow rowNJESITERow = ((NJESITERow)(this.NewRow()));
                rowNJESITERow.ItemArray = new object[] {
                        null,
                        NJESIA};
                this.Rows.Add(rowNJESITERow);
                return rowNJESITERow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NJESITERow FindByID_NJESIA(int ID_NJESIA) {
                return ((NJESITERow)(this.Rows.Find(new object[] {
                            ID_NJESIA})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                NJESITEDataTable cln = ((NJESITEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new NJESITEDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID_NJESIA = base.Columns["ID_NJESIA"];
                this.columnNJESIA = base.Columns["NJESIA"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID_NJESIA = new System.Data.DataColumn("ID_NJESIA", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_NJESIA);
                this.columnNJESIA = new System.Data.DataColumn("NJESIA", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNJESIA);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnID_NJESIA}, true));
                this.columnID_NJESIA.AutoIncrement = true;
                this.columnID_NJESIA.AllowDBNull = false;
                this.columnID_NJESIA.ReadOnly = true;
                this.columnID_NJESIA.Unique = true;
                this.columnNJESIA.AllowDBNull = false;
                this.columnNJESIA.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NJESITERow NewNJESITERow() {
                return ((NJESITERow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new NJESITERow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(NJESITERow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.NJESITERowChanged != null)) {
                    this.NJESITERowChanged(this, new NJESITERowChangeEvent(((NJESITERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.NJESITERowChanging != null)) {
                    this.NJESITERowChanging(this, new NJESITERowChangeEvent(((NJESITERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.NJESITERowDeleted != null)) {
                    this.NJESITERowDeleted(this, new NJESITERowChangeEvent(((NJESITERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.NJESITERowDeleting != null)) {
                    this.NJESITERowDeleting(this, new NJESITERowChangeEvent(((NJESITERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveNJESITERow(NJESITERow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                ResManagerDataSet ds = new ResManagerDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "NJESITEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class OFERTATDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnID_OFERTA;
            
            private System.Data.DataColumn columnID_ARTIKULLI;
            
            private System.Data.DataColumn columnSASIA_ARTIKULLI;
            
            private System.Data.DataColumn columnID_RECETA;
            
            private System.Data.DataColumn columnSASIA_RECETA;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OFERTATDataTable() {
                this.TableName = "OFERTAT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal OFERTATDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected OFERTATDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_OFERTAColumn {
                get {
                    return this.columnID_OFERTA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_ARTIKULLIColumn {
                get {
                    return this.columnID_ARTIKULLI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SASIA_ARTIKULLIColumn {
                get {
                    return this.columnSASIA_ARTIKULLI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_RECETAColumn {
                get {
                    return this.columnID_RECETA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SASIA_RECETAColumn {
                get {
                    return this.columnSASIA_RECETA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OFERTATRow this[int index] {
                get {
                    return ((OFERTATRow)(this.Rows[index]));
                }
            }
            
            public event OFERTATRowChangeEventHandler OFERTATRowChanging;
            
            public event OFERTATRowChangeEventHandler OFERTATRowChanged;
            
            public event OFERTATRowChangeEventHandler OFERTATRowDeleting;
            
            public event OFERTATRowChangeEventHandler OFERTATRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddOFERTATRow(OFERTATRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OFERTATRow AddOFERTATRow(int ID_OFERTA, int ID_ARTIKULLI, double SASIA_ARTIKULLI, int ID_RECETA, int SASIA_RECETA) {
                OFERTATRow rowOFERTATRow = ((OFERTATRow)(this.NewRow()));
                rowOFERTATRow.ItemArray = new object[] {
                        ID_OFERTA,
                        ID_ARTIKULLI,
                        SASIA_ARTIKULLI,
                        ID_RECETA,
                        SASIA_RECETA};
                this.Rows.Add(rowOFERTATRow);
                return rowOFERTATRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OFERTATRow FindByID_OFERTA(int ID_OFERTA) {
                return ((OFERTATRow)(this.Rows.Find(new object[] {
                            ID_OFERTA})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                OFERTATDataTable cln = ((OFERTATDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new OFERTATDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID_OFERTA = base.Columns["ID_OFERTA"];
                this.columnID_ARTIKULLI = base.Columns["ID_ARTIKULLI"];
                this.columnSASIA_ARTIKULLI = base.Columns["SASIA_ARTIKULLI"];
                this.columnID_RECETA = base.Columns["ID_RECETA"];
                this.columnSASIA_RECETA = base.Columns["SASIA_RECETA"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID_OFERTA = new System.Data.DataColumn("ID_OFERTA", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_OFERTA);
                this.columnID_ARTIKULLI = new System.Data.DataColumn("ID_ARTIKULLI", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_ARTIKULLI);
                this.columnSASIA_ARTIKULLI = new System.Data.DataColumn("SASIA_ARTIKULLI", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSASIA_ARTIKULLI);
                this.columnID_RECETA = new System.Data.DataColumn("ID_RECETA", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_RECETA);
                this.columnSASIA_RECETA = new System.Data.DataColumn("SASIA_RECETA", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSASIA_RECETA);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnID_OFERTA}, true));
                this.columnID_OFERTA.AllowDBNull = false;
                this.columnID_OFERTA.Unique = true;
                this.columnID_ARTIKULLI.AllowDBNull = false;
                this.columnSASIA_ARTIKULLI.AllowDBNull = false;
                this.columnID_RECETA.AllowDBNull = false;
                this.columnSASIA_RECETA.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OFERTATRow NewOFERTATRow() {
                return ((OFERTATRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new OFERTATRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(OFERTATRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.OFERTATRowChanged != null)) {
                    this.OFERTATRowChanged(this, new OFERTATRowChangeEvent(((OFERTATRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.OFERTATRowChanging != null)) {
                    this.OFERTATRowChanging(this, new OFERTATRowChangeEvent(((OFERTATRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.OFERTATRowDeleted != null)) {
                    this.OFERTATRowDeleted(this, new OFERTATRowChangeEvent(((OFERTATRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.OFERTATRowDeleting != null)) {
                    this.OFERTATRowDeleting(this, new OFERTATRowChangeEvent(((OFERTATRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveOFERTATRow(OFERTATRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                ResManagerDataSet ds = new ResManagerDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "OFERTATDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class OFERTAT_BLERJEDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnID_BLERJEARTIKUJ;
            
            private System.Data.DataColumn columnID_ARTIKULLIFILLESTAR;
            
            private System.Data.DataColumn columnSASIA_KUSHT_OFERTA;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OFERTAT_BLERJEDataTable() {
                this.TableName = "OFERTAT_BLERJE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal OFERTAT_BLERJEDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected OFERTAT_BLERJEDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_BLERJEARTIKUJColumn {
                get {
                    return this.columnID_BLERJEARTIKUJ;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_ARTIKULLIFILLESTARColumn {
                get {
                    return this.columnID_ARTIKULLIFILLESTAR;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SASIA_KUSHT_OFERTAColumn {
                get {
                    return this.columnSASIA_KUSHT_OFERTA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OFERTAT_BLERJERow this[int index] {
                get {
                    return ((OFERTAT_BLERJERow)(this.Rows[index]));
                }
            }
            
            public event OFERTAT_BLERJERowChangeEventHandler OFERTAT_BLERJERowChanging;
            
            public event OFERTAT_BLERJERowChangeEventHandler OFERTAT_BLERJERowChanged;
            
            public event OFERTAT_BLERJERowChangeEventHandler OFERTAT_BLERJERowDeleting;
            
            public event OFERTAT_BLERJERowChangeEventHandler OFERTAT_BLERJERowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddOFERTAT_BLERJERow(OFERTAT_BLERJERow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OFERTAT_BLERJERow AddOFERTAT_BLERJERow(int ID_BLERJEARTIKUJ, int ID_ARTIKULLIFILLESTAR, double SASIA_KUSHT_OFERTA) {
                OFERTAT_BLERJERow rowOFERTAT_BLERJERow = ((OFERTAT_BLERJERow)(this.NewRow()));
                rowOFERTAT_BLERJERow.ItemArray = new object[] {
                        ID_BLERJEARTIKUJ,
                        ID_ARTIKULLIFILLESTAR,
                        SASIA_KUSHT_OFERTA};
                this.Rows.Add(rowOFERTAT_BLERJERow);
                return rowOFERTAT_BLERJERow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OFERTAT_BLERJERow FindByID_BLERJEARTIKUJ(int ID_BLERJEARTIKUJ) {
                return ((OFERTAT_BLERJERow)(this.Rows.Find(new object[] {
                            ID_BLERJEARTIKUJ})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                OFERTAT_BLERJEDataTable cln = ((OFERTAT_BLERJEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new OFERTAT_BLERJEDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID_BLERJEARTIKUJ = base.Columns["ID_BLERJEARTIKUJ"];
                this.columnID_ARTIKULLIFILLESTAR = base.Columns["ID_ARTIKULLIFILLESTAR"];
                this.columnSASIA_KUSHT_OFERTA = base.Columns["SASIA_KUSHT_OFERTA"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID_BLERJEARTIKUJ = new System.Data.DataColumn("ID_BLERJEARTIKUJ", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_BLERJEARTIKUJ);
                this.columnID_ARTIKULLIFILLESTAR = new System.Data.DataColumn("ID_ARTIKULLIFILLESTAR", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_ARTIKULLIFILLESTAR);
                this.columnSASIA_KUSHT_OFERTA = new System.Data.DataColumn("SASIA_KUSHT_OFERTA", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSASIA_KUSHT_OFERTA);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnID_BLERJEARTIKUJ}, true));
                this.columnID_BLERJEARTIKUJ.AllowDBNull = false;
                this.columnID_BLERJEARTIKUJ.Unique = true;
                this.columnID_ARTIKULLIFILLESTAR.AllowDBNull = false;
                this.columnSASIA_KUSHT_OFERTA.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OFERTAT_BLERJERow NewOFERTAT_BLERJERow() {
                return ((OFERTAT_BLERJERow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new OFERTAT_BLERJERow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(OFERTAT_BLERJERow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.OFERTAT_BLERJERowChanged != null)) {
                    this.OFERTAT_BLERJERowChanged(this, new OFERTAT_BLERJERowChangeEvent(((OFERTAT_BLERJERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.OFERTAT_BLERJERowChanging != null)) {
                    this.OFERTAT_BLERJERowChanging(this, new OFERTAT_BLERJERowChangeEvent(((OFERTAT_BLERJERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.OFERTAT_BLERJERowDeleted != null)) {
                    this.OFERTAT_BLERJERowDeleted(this, new OFERTAT_BLERJERowChangeEvent(((OFERTAT_BLERJERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.OFERTAT_BLERJERowDeleting != null)) {
                    this.OFERTAT_BLERJERowDeleting(this, new OFERTAT_BLERJERowChangeEvent(((OFERTAT_BLERJERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveOFERTAT_BLERJERow(OFERTAT_BLERJERow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                ResManagerDataSet ds = new ResManagerDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "OFERTAT_BLERJEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PERIUDHATDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnORE_FILLIMI;
            
            private System.Data.DataColumn columnORE_MBARIMI;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PERIUDHATDataTable() {
                this.TableName = "PERIUDHAT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PERIUDHATDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PERIUDHATDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ORE_FILLIMIColumn {
                get {
                    return this.columnORE_FILLIMI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ORE_MBARIMIColumn {
                get {
                    return this.columnORE_MBARIMI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PERIUDHATRow this[int index] {
                get {
                    return ((PERIUDHATRow)(this.Rows[index]));
                }
            }
            
            public event PERIUDHATRowChangeEventHandler PERIUDHATRowChanging;
            
            public event PERIUDHATRowChangeEventHandler PERIUDHATRowChanged;
            
            public event PERIUDHATRowChangeEventHandler PERIUDHATRowDeleting;
            
            public event PERIUDHATRowChangeEventHandler PERIUDHATRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPERIUDHATRow(PERIUDHATRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PERIUDHATRow AddPERIUDHATRow(System.DateTime ORE_FILLIMI, System.DateTime ORE_MBARIMI) {
                PERIUDHATRow rowPERIUDHATRow = ((PERIUDHATRow)(this.NewRow()));
                rowPERIUDHATRow.ItemArray = new object[] {
                        ORE_FILLIMI,
                        ORE_MBARIMI};
                this.Rows.Add(rowPERIUDHATRow);
                return rowPERIUDHATRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                PERIUDHATDataTable cln = ((PERIUDHATDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new PERIUDHATDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnORE_FILLIMI = base.Columns["ORE_FILLIMI"];
                this.columnORE_MBARIMI = base.Columns["ORE_MBARIMI"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnORE_FILLIMI = new System.Data.DataColumn("ORE_FILLIMI", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnORE_FILLIMI);
                this.columnORE_MBARIMI = new System.Data.DataColumn("ORE_MBARIMI", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnORE_MBARIMI);
                this.columnORE_FILLIMI.AllowDBNull = false;
                this.columnORE_MBARIMI.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PERIUDHATRow NewPERIUDHATRow() {
                return ((PERIUDHATRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new PERIUDHATRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(PERIUDHATRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PERIUDHATRowChanged != null)) {
                    this.PERIUDHATRowChanged(this, new PERIUDHATRowChangeEvent(((PERIUDHATRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PERIUDHATRowChanging != null)) {
                    this.PERIUDHATRowChanging(this, new PERIUDHATRowChangeEvent(((PERIUDHATRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PERIUDHATRowDeleted != null)) {
                    this.PERIUDHATRowDeleted(this, new PERIUDHATRowChangeEvent(((PERIUDHATRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PERIUDHATRowDeleting != null)) {
                    this.PERIUDHATRowDeleting(this, new PERIUDHATRowChangeEvent(((PERIUDHATRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePERIUDHATRow(PERIUDHATRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                ResManagerDataSet ds = new ResManagerDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PERIUDHATDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PERSONELIDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnID_PERSONELI;
            
            private System.Data.DataColumn columnEMRI;
            
            private System.Data.DataColumn columnMBIEMRI;
            
            private System.Data.DataColumn columnTELEFONI;
            
            private System.Data.DataColumn columnID_ROLI;
            
            private System.Data.DataColumn columnPERDORUESI;
            
            private System.Data.DataColumn columnFJALEKALIMI;
            
            private System.Data.DataColumn columnEMAILI;
            
            private System.Data.DataColumn columnADRESA;
            
            private System.Data.DataColumn columnFOTO;
            
            private System.Data.DataColumn columnAKTIV;
            
            private System.Data.DataColumn columnFOTO_IMAZH;
            
            private System.Data.DataColumn columnDISPONUESHEM;
            
            private System.Data.DataColumn columnrowguid;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PERSONELIDataTable() {
                this.TableName = "PERSONELI";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PERSONELIDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PERSONELIDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_PERSONELIColumn {
                get {
                    return this.columnID_PERSONELI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EMRIColumn {
                get {
                    return this.columnEMRI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MBIEMRIColumn {
                get {
                    return this.columnMBIEMRI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TELEFONIColumn {
                get {
                    return this.columnTELEFONI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_ROLIColumn {
                get {
                    return this.columnID_ROLI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PERDORUESIColumn {
                get {
                    return this.columnPERDORUESI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FJALEKALIMIColumn {
                get {
                    return this.columnFJALEKALIMI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EMAILIColumn {
                get {
                    return this.columnEMAILI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ADRESAColumn {
                get {
                    return this.columnADRESA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FOTOColumn {
                get {
                    return this.columnFOTO;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AKTIVColumn {
                get {
                    return this.columnAKTIV;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FOTO_IMAZHColumn {
                get {
                    return this.columnFOTO_IMAZH;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DISPONUESHEMColumn {
                get {
                    return this.columnDISPONUESHEM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn rowguidColumn {
                get {
                    return this.columnrowguid;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PERSONELIRow this[int index] {
                get {
                    return ((PERSONELIRow)(this.Rows[index]));
                }
            }
            
            public event PERSONELIRowChangeEventHandler PERSONELIRowChanging;
            
            public event PERSONELIRowChangeEventHandler PERSONELIRowChanged;
            
            public event PERSONELIRowChangeEventHandler PERSONELIRowDeleting;
            
            public event PERSONELIRowChangeEventHandler PERSONELIRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPERSONELIRow(PERSONELIRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PERSONELIRow AddPERSONELIRow(string EMRI, string MBIEMRI, string TELEFONI, int ID_ROLI, string PERDORUESI, string FJALEKALIMI, string EMAILI, string ADRESA, string FOTO, bool AKTIV, byte[] FOTO_IMAZH, bool DISPONUESHEM, System.Guid rowguid) {
                PERSONELIRow rowPERSONELIRow = ((PERSONELIRow)(this.NewRow()));
                rowPERSONELIRow.ItemArray = new object[] {
                        null,
                        EMRI,
                        MBIEMRI,
                        TELEFONI,
                        ID_ROLI,
                        PERDORUESI,
                        FJALEKALIMI,
                        EMAILI,
                        ADRESA,
                        FOTO,
                        AKTIV,
                        FOTO_IMAZH,
                        DISPONUESHEM,
                        rowguid};
                this.Rows.Add(rowPERSONELIRow);
                return rowPERSONELIRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PERSONELIRow FindByID_PERSONELI(int ID_PERSONELI) {
                return ((PERSONELIRow)(this.Rows.Find(new object[] {
                            ID_PERSONELI})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                PERSONELIDataTable cln = ((PERSONELIDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new PERSONELIDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID_PERSONELI = base.Columns["ID_PERSONELI"];
                this.columnEMRI = base.Columns["EMRI"];
                this.columnMBIEMRI = base.Columns["MBIEMRI"];
                this.columnTELEFONI = base.Columns["TELEFONI"];
                this.columnID_ROLI = base.Columns["ID_ROLI"];
                this.columnPERDORUESI = base.Columns["PERDORUESI"];
                this.columnFJALEKALIMI = base.Columns["FJALEKALIMI"];
                this.columnEMAILI = base.Columns["EMAILI"];
                this.columnADRESA = base.Columns["ADRESA"];
                this.columnFOTO = base.Columns["FOTO"];
                this.columnAKTIV = base.Columns["AKTIV"];
                this.columnFOTO_IMAZH = base.Columns["FOTO_IMAZH"];
                this.columnDISPONUESHEM = base.Columns["DISPONUESHEM"];
                this.columnrowguid = base.Columns["rowguid"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID_PERSONELI = new System.Data.DataColumn("ID_PERSONELI", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_PERSONELI);
                this.columnEMRI = new System.Data.DataColumn("EMRI", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMRI);
                this.columnMBIEMRI = new System.Data.DataColumn("MBIEMRI", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMBIEMRI);
                this.columnTELEFONI = new System.Data.DataColumn("TELEFONI", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTELEFONI);
                this.columnID_ROLI = new System.Data.DataColumn("ID_ROLI", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_ROLI);
                this.columnPERDORUESI = new System.Data.DataColumn("PERDORUESI", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPERDORUESI);
                this.columnFJALEKALIMI = new System.Data.DataColumn("FJALEKALIMI", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFJALEKALIMI);
                this.columnEMAILI = new System.Data.DataColumn("EMAILI", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMAILI);
                this.columnADRESA = new System.Data.DataColumn("ADRESA", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnADRESA);
                this.columnFOTO = new System.Data.DataColumn("FOTO", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFOTO);
                this.columnAKTIV = new System.Data.DataColumn("AKTIV", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAKTIV);
                this.columnFOTO_IMAZH = new System.Data.DataColumn("FOTO_IMAZH", typeof(byte[]), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFOTO_IMAZH);
                this.columnDISPONUESHEM = new System.Data.DataColumn("DISPONUESHEM", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDISPONUESHEM);
                this.columnrowguid = new System.Data.DataColumn("rowguid", typeof(System.Guid), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnrowguid);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnID_PERSONELI}, true));
                this.columnID_PERSONELI.AutoIncrement = true;
                this.columnID_PERSONELI.AllowDBNull = false;
                this.columnID_PERSONELI.ReadOnly = true;
                this.columnID_PERSONELI.Unique = true;
                this.columnEMRI.AllowDBNull = false;
                this.columnEMRI.MaxLength = 50;
                this.columnMBIEMRI.AllowDBNull = false;
                this.columnMBIEMRI.MaxLength = 50;
                this.columnTELEFONI.AllowDBNull = false;
                this.columnTELEFONI.MaxLength = 50;
                this.columnID_ROLI.AllowDBNull = false;
                this.columnPERDORUESI.AllowDBNull = false;
                this.columnPERDORUESI.MaxLength = 50;
                this.columnFJALEKALIMI.AllowDBNull = false;
                this.columnFJALEKALIMI.MaxLength = 50;
                this.columnEMAILI.AllowDBNull = false;
                this.columnEMAILI.MaxLength = 50;
                this.columnADRESA.AllowDBNull = false;
                this.columnADRESA.MaxLength = 2147483647;
                this.columnFOTO.AllowDBNull = false;
                this.columnFOTO.MaxLength = 2147483647;
                this.columnAKTIV.AllowDBNull = false;
                this.columnDISPONUESHEM.AllowDBNull = false;
                this.columnrowguid.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PERSONELIRow NewPERSONELIRow() {
                return ((PERSONELIRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new PERSONELIRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(PERSONELIRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PERSONELIRowChanged != null)) {
                    this.PERSONELIRowChanged(this, new PERSONELIRowChangeEvent(((PERSONELIRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PERSONELIRowChanging != null)) {
                    this.PERSONELIRowChanging(this, new PERSONELIRowChangeEvent(((PERSONELIRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PERSONELIRowDeleted != null)) {
                    this.PERSONELIRowDeleted(this, new PERSONELIRowChangeEvent(((PERSONELIRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PERSONELIRowDeleting != null)) {
                    this.PERSONELIRowDeleting(this, new PERSONELIRowChangeEvent(((PERSONELIRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePERSONELIRow(PERSONELIRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                ResManagerDataSet ds = new ResManagerDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PERSONELIDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RECETA_ARTIKUJTDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnID_RECETA;
            
            private System.Data.DataColumn columnID_ARTIKULLI;
            
            private System.Data.DataColumn columnSASIA;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RECETA_ARTIKUJTDataTable() {
                this.TableName = "RECETA_ARTIKUJT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RECETA_ARTIKUJTDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected RECETA_ARTIKUJTDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_RECETAColumn {
                get {
                    return this.columnID_RECETA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_ARTIKULLIColumn {
                get {
                    return this.columnID_ARTIKULLI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SASIAColumn {
                get {
                    return this.columnSASIA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RECETA_ARTIKUJTRow this[int index] {
                get {
                    return ((RECETA_ARTIKUJTRow)(this.Rows[index]));
                }
            }
            
            public event RECETA_ARTIKUJTRowChangeEventHandler RECETA_ARTIKUJTRowChanging;
            
            public event RECETA_ARTIKUJTRowChangeEventHandler RECETA_ARTIKUJTRowChanged;
            
            public event RECETA_ARTIKUJTRowChangeEventHandler RECETA_ARTIKUJTRowDeleting;
            
            public event RECETA_ARTIKUJTRowChangeEventHandler RECETA_ARTIKUJTRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRECETA_ARTIKUJTRow(RECETA_ARTIKUJTRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RECETA_ARTIKUJTRow AddRECETA_ARTIKUJTRow(int ID_RECETA, int ID_ARTIKULLI, double SASIA) {
                RECETA_ARTIKUJTRow rowRECETA_ARTIKUJTRow = ((RECETA_ARTIKUJTRow)(this.NewRow()));
                rowRECETA_ARTIKUJTRow.ItemArray = new object[] {
                        ID_RECETA,
                        ID_ARTIKULLI,
                        SASIA};
                this.Rows.Add(rowRECETA_ARTIKUJTRow);
                return rowRECETA_ARTIKUJTRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RECETA_ARTIKUJTRow FindByID_RECETAID_ARTIKULLI(int ID_RECETA, int ID_ARTIKULLI) {
                return ((RECETA_ARTIKUJTRow)(this.Rows.Find(new object[] {
                            ID_RECETA,
                            ID_ARTIKULLI})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                RECETA_ARTIKUJTDataTable cln = ((RECETA_ARTIKUJTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new RECETA_ARTIKUJTDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID_RECETA = base.Columns["ID_RECETA"];
                this.columnID_ARTIKULLI = base.Columns["ID_ARTIKULLI"];
                this.columnSASIA = base.Columns["SASIA"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID_RECETA = new System.Data.DataColumn("ID_RECETA", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_RECETA);
                this.columnID_ARTIKULLI = new System.Data.DataColumn("ID_ARTIKULLI", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_ARTIKULLI);
                this.columnSASIA = new System.Data.DataColumn("SASIA", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSASIA);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnID_RECETA,
                                this.columnID_ARTIKULLI}, true));
                this.columnID_RECETA.AllowDBNull = false;
                this.columnID_ARTIKULLI.AllowDBNull = false;
                this.columnSASIA.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RECETA_ARTIKUJTRow NewRECETA_ARTIKUJTRow() {
                return ((RECETA_ARTIKUJTRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new RECETA_ARTIKUJTRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(RECETA_ARTIKUJTRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RECETA_ARTIKUJTRowChanged != null)) {
                    this.RECETA_ARTIKUJTRowChanged(this, new RECETA_ARTIKUJTRowChangeEvent(((RECETA_ARTIKUJTRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RECETA_ARTIKUJTRowChanging != null)) {
                    this.RECETA_ARTIKUJTRowChanging(this, new RECETA_ARTIKUJTRowChangeEvent(((RECETA_ARTIKUJTRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RECETA_ARTIKUJTRowDeleted != null)) {
                    this.RECETA_ARTIKUJTRowDeleted(this, new RECETA_ARTIKUJTRowChangeEvent(((RECETA_ARTIKUJTRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RECETA_ARTIKUJTRowDeleting != null)) {
                    this.RECETA_ARTIKUJTRowDeleting(this, new RECETA_ARTIKUJTRowChangeEvent(((RECETA_ARTIKUJTRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRECETA_ARTIKUJTRow(RECETA_ARTIKUJTRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                ResManagerDataSet ds = new ResManagerDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RECETA_ARTIKUJTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RECETATDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnID_RECETA;
            
            private System.Data.DataColumn columnEMRI;
            
            private System.Data.DataColumn columnID_KATEGORIARECETA;
            
            private System.Data.DataColumn columnDISPONUESHEM;
            
            private System.Data.DataColumn columnAKTIVE;
            
            private System.Data.DataColumn columnrowguid;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RECETATDataTable() {
                this.TableName = "RECETAT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RECETATDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected RECETATDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_RECETAColumn {
                get {
                    return this.columnID_RECETA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EMRIColumn {
                get {
                    return this.columnEMRI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_KATEGORIARECETAColumn {
                get {
                    return this.columnID_KATEGORIARECETA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DISPONUESHEMColumn {
                get {
                    return this.columnDISPONUESHEM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AKTIVEColumn {
                get {
                    return this.columnAKTIVE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn rowguidColumn {
                get {
                    return this.columnrowguid;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RECETATRow this[int index] {
                get {
                    return ((RECETATRow)(this.Rows[index]));
                }
            }
            
            public event RECETATRowChangeEventHandler RECETATRowChanging;
            
            public event RECETATRowChangeEventHandler RECETATRowChanged;
            
            public event RECETATRowChangeEventHandler RECETATRowDeleting;
            
            public event RECETATRowChangeEventHandler RECETATRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRECETATRow(RECETATRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RECETATRow AddRECETATRow(string EMRI, int ID_KATEGORIARECETA, bool DISPONUESHEM, bool AKTIVE, System.Guid rowguid) {
                RECETATRow rowRECETATRow = ((RECETATRow)(this.NewRow()));
                rowRECETATRow.ItemArray = new object[] {
                        null,
                        EMRI,
                        ID_KATEGORIARECETA,
                        DISPONUESHEM,
                        AKTIVE,
                        rowguid};
                this.Rows.Add(rowRECETATRow);
                return rowRECETATRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RECETATRow FindByID_RECETA(int ID_RECETA) {
                return ((RECETATRow)(this.Rows.Find(new object[] {
                            ID_RECETA})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                RECETATDataTable cln = ((RECETATDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new RECETATDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID_RECETA = base.Columns["ID_RECETA"];
                this.columnEMRI = base.Columns["EMRI"];
                this.columnID_KATEGORIARECETA = base.Columns["ID_KATEGORIARECETA"];
                this.columnDISPONUESHEM = base.Columns["DISPONUESHEM"];
                this.columnAKTIVE = base.Columns["AKTIVE"];
                this.columnrowguid = base.Columns["rowguid"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID_RECETA = new System.Data.DataColumn("ID_RECETA", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_RECETA);
                this.columnEMRI = new System.Data.DataColumn("EMRI", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMRI);
                this.columnID_KATEGORIARECETA = new System.Data.DataColumn("ID_KATEGORIARECETA", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_KATEGORIARECETA);
                this.columnDISPONUESHEM = new System.Data.DataColumn("DISPONUESHEM", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDISPONUESHEM);
                this.columnAKTIVE = new System.Data.DataColumn("AKTIVE", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAKTIVE);
                this.columnrowguid = new System.Data.DataColumn("rowguid", typeof(System.Guid), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnrowguid);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnID_RECETA}, true));
                this.columnID_RECETA.AutoIncrement = true;
                this.columnID_RECETA.AllowDBNull = false;
                this.columnID_RECETA.ReadOnly = true;
                this.columnID_RECETA.Unique = true;
                this.columnEMRI.AllowDBNull = false;
                this.columnEMRI.MaxLength = 50;
                this.columnID_KATEGORIARECETA.AllowDBNull = false;
                this.columnDISPONUESHEM.AllowDBNull = false;
                this.columnAKTIVE.AllowDBNull = false;
                this.columnrowguid.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RECETATRow NewRECETATRow() {
                return ((RECETATRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new RECETATRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(RECETATRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RECETATRowChanged != null)) {
                    this.RECETATRowChanged(this, new RECETATRowChangeEvent(((RECETATRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RECETATRowChanging != null)) {
                    this.RECETATRowChanging(this, new RECETATRowChangeEvent(((RECETATRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RECETATRowDeleted != null)) {
                    this.RECETATRowDeleted(this, new RECETATRowChangeEvent(((RECETATRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RECETATRowDeleting != null)) {
                    this.RECETATRowDeleting(this, new RECETATRowChangeEvent(((RECETATRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRECETATRow(RECETATRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                ResManagerDataSet ds = new ResManagerDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RECETATDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class REZERVIMETDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnID_REZERVIMI;
            
            private System.Data.DataColumn columnEMRI;
            
            private System.Data.DataColumn columnMBIEMRI;
            
            private System.Data.DataColumn columnDATA;
            
            private System.Data.DataColumn columnORA_FILLIMI;
            
            private System.Data.DataColumn columnORA_MBARIMI;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public REZERVIMETDataTable() {
                this.TableName = "REZERVIMET";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal REZERVIMETDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected REZERVIMETDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_REZERVIMIColumn {
                get {
                    return this.columnID_REZERVIMI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EMRIColumn {
                get {
                    return this.columnEMRI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MBIEMRIColumn {
                get {
                    return this.columnMBIEMRI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DATAColumn {
                get {
                    return this.columnDATA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ORA_FILLIMIColumn {
                get {
                    return this.columnORA_FILLIMI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ORA_MBARIMIColumn {
                get {
                    return this.columnORA_MBARIMI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public REZERVIMETRow this[int index] {
                get {
                    return ((REZERVIMETRow)(this.Rows[index]));
                }
            }
            
            public event REZERVIMETRowChangeEventHandler REZERVIMETRowChanging;
            
            public event REZERVIMETRowChangeEventHandler REZERVIMETRowChanged;
            
            public event REZERVIMETRowChangeEventHandler REZERVIMETRowDeleting;
            
            public event REZERVIMETRowChangeEventHandler REZERVIMETRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddREZERVIMETRow(REZERVIMETRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public REZERVIMETRow AddREZERVIMETRow(string EMRI, string MBIEMRI, System.DateTime DATA, System.DateTime ORA_FILLIMI, System.DateTime ORA_MBARIMI) {
                REZERVIMETRow rowREZERVIMETRow = ((REZERVIMETRow)(this.NewRow()));
                rowREZERVIMETRow.ItemArray = new object[] {
                        null,
                        EMRI,
                        MBIEMRI,
                        DATA,
                        ORA_FILLIMI,
                        ORA_MBARIMI};
                this.Rows.Add(rowREZERVIMETRow);
                return rowREZERVIMETRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public REZERVIMETRow FindByID_REZERVIMI(int ID_REZERVIMI) {
                return ((REZERVIMETRow)(this.Rows.Find(new object[] {
                            ID_REZERVIMI})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                REZERVIMETDataTable cln = ((REZERVIMETDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new REZERVIMETDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID_REZERVIMI = base.Columns["ID_REZERVIMI"];
                this.columnEMRI = base.Columns["EMRI"];
                this.columnMBIEMRI = base.Columns["MBIEMRI"];
                this.columnDATA = base.Columns["DATA"];
                this.columnORA_FILLIMI = base.Columns["ORA_FILLIMI"];
                this.columnORA_MBARIMI = base.Columns["ORA_MBARIMI"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID_REZERVIMI = new System.Data.DataColumn("ID_REZERVIMI", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_REZERVIMI);
                this.columnEMRI = new System.Data.DataColumn("EMRI", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMRI);
                this.columnMBIEMRI = new System.Data.DataColumn("MBIEMRI", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMBIEMRI);
                this.columnDATA = new System.Data.DataColumn("DATA", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATA);
                this.columnORA_FILLIMI = new System.Data.DataColumn("ORA_FILLIMI", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnORA_FILLIMI);
                this.columnORA_MBARIMI = new System.Data.DataColumn("ORA_MBARIMI", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnORA_MBARIMI);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnID_REZERVIMI}, true));
                this.columnID_REZERVIMI.AutoIncrement = true;
                this.columnID_REZERVIMI.AllowDBNull = false;
                this.columnID_REZERVIMI.ReadOnly = true;
                this.columnID_REZERVIMI.Unique = true;
                this.columnEMRI.AllowDBNull = false;
                this.columnEMRI.MaxLength = 50;
                this.columnMBIEMRI.AllowDBNull = false;
                this.columnMBIEMRI.MaxLength = 50;
                this.columnDATA.AllowDBNull = false;
                this.columnORA_FILLIMI.AllowDBNull = false;
                this.columnORA_MBARIMI.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public REZERVIMETRow NewREZERVIMETRow() {
                return ((REZERVIMETRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new REZERVIMETRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(REZERVIMETRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.REZERVIMETRowChanged != null)) {
                    this.REZERVIMETRowChanged(this, new REZERVIMETRowChangeEvent(((REZERVIMETRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.REZERVIMETRowChanging != null)) {
                    this.REZERVIMETRowChanging(this, new REZERVIMETRowChangeEvent(((REZERVIMETRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.REZERVIMETRowDeleted != null)) {
                    this.REZERVIMETRowDeleted(this, new REZERVIMETRowChangeEvent(((REZERVIMETRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.REZERVIMETRowDeleting != null)) {
                    this.REZERVIMETRowDeleting(this, new REZERVIMETRowChangeEvent(((REZERVIMETRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveREZERVIMETRow(REZERVIMETRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                ResManagerDataSet ds = new ResManagerDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "REZERVIMETDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class REZERVIMI_TAVOLINATDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnID_REZERVIMI;
            
            private System.Data.DataColumn columnID_TAVOLINA;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public REZERVIMI_TAVOLINATDataTable() {
                this.TableName = "REZERVIMI_TAVOLINAT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal REZERVIMI_TAVOLINATDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected REZERVIMI_TAVOLINATDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_REZERVIMIColumn {
                get {
                    return this.columnID_REZERVIMI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_TAVOLINAColumn {
                get {
                    return this.columnID_TAVOLINA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public REZERVIMI_TAVOLINATRow this[int index] {
                get {
                    return ((REZERVIMI_TAVOLINATRow)(this.Rows[index]));
                }
            }
            
            public event REZERVIMI_TAVOLINATRowChangeEventHandler REZERVIMI_TAVOLINATRowChanging;
            
            public event REZERVIMI_TAVOLINATRowChangeEventHandler REZERVIMI_TAVOLINATRowChanged;
            
            public event REZERVIMI_TAVOLINATRowChangeEventHandler REZERVIMI_TAVOLINATRowDeleting;
            
            public event REZERVIMI_TAVOLINATRowChangeEventHandler REZERVIMI_TAVOLINATRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddREZERVIMI_TAVOLINATRow(REZERVIMI_TAVOLINATRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public REZERVIMI_TAVOLINATRow AddREZERVIMI_TAVOLINATRow(int ID_REZERVIMI, int ID_TAVOLINA) {
                REZERVIMI_TAVOLINATRow rowREZERVIMI_TAVOLINATRow = ((REZERVIMI_TAVOLINATRow)(this.NewRow()));
                rowREZERVIMI_TAVOLINATRow.ItemArray = new object[] {
                        ID_REZERVIMI,
                        ID_TAVOLINA};
                this.Rows.Add(rowREZERVIMI_TAVOLINATRow);
                return rowREZERVIMI_TAVOLINATRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public REZERVIMI_TAVOLINATRow FindByID_REZERVIMIID_TAVOLINA(int ID_REZERVIMI, int ID_TAVOLINA) {
                return ((REZERVIMI_TAVOLINATRow)(this.Rows.Find(new object[] {
                            ID_REZERVIMI,
                            ID_TAVOLINA})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                REZERVIMI_TAVOLINATDataTable cln = ((REZERVIMI_TAVOLINATDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new REZERVIMI_TAVOLINATDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID_REZERVIMI = base.Columns["ID_REZERVIMI"];
                this.columnID_TAVOLINA = base.Columns["ID_TAVOLINA"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID_REZERVIMI = new System.Data.DataColumn("ID_REZERVIMI", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_REZERVIMI);
                this.columnID_TAVOLINA = new System.Data.DataColumn("ID_TAVOLINA", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_TAVOLINA);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnID_REZERVIMI,
                                this.columnID_TAVOLINA}, true));
                this.columnID_REZERVIMI.AllowDBNull = false;
                this.columnID_TAVOLINA.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public REZERVIMI_TAVOLINATRow NewREZERVIMI_TAVOLINATRow() {
                return ((REZERVIMI_TAVOLINATRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new REZERVIMI_TAVOLINATRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(REZERVIMI_TAVOLINATRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.REZERVIMI_TAVOLINATRowChanged != null)) {
                    this.REZERVIMI_TAVOLINATRowChanged(this, new REZERVIMI_TAVOLINATRowChangeEvent(((REZERVIMI_TAVOLINATRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.REZERVIMI_TAVOLINATRowChanging != null)) {
                    this.REZERVIMI_TAVOLINATRowChanging(this, new REZERVIMI_TAVOLINATRowChangeEvent(((REZERVIMI_TAVOLINATRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.REZERVIMI_TAVOLINATRowDeleted != null)) {
                    this.REZERVIMI_TAVOLINATRowDeleted(this, new REZERVIMI_TAVOLINATRowChangeEvent(((REZERVIMI_TAVOLINATRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.REZERVIMI_TAVOLINATRowDeleting != null)) {
                    this.REZERVIMI_TAVOLINATRowDeleting(this, new REZERVIMI_TAVOLINATRowChangeEvent(((REZERVIMI_TAVOLINATRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveREZERVIMI_TAVOLINATRow(REZERVIMI_TAVOLINATRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                ResManagerDataSet ds = new ResManagerDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "REZERVIMI_TAVOLINATDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ROLETDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnID_ROLI;
            
            private System.Data.DataColumn columnROLI;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ROLETDataTable() {
                this.TableName = "ROLET";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ROLETDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ROLETDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_ROLIColumn {
                get {
                    return this.columnID_ROLI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ROLIColumn {
                get {
                    return this.columnROLI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ROLETRow this[int index] {
                get {
                    return ((ROLETRow)(this.Rows[index]));
                }
            }
            
            public event ROLETRowChangeEventHandler ROLETRowChanging;
            
            public event ROLETRowChangeEventHandler ROLETRowChanged;
            
            public event ROLETRowChangeEventHandler ROLETRowDeleting;
            
            public event ROLETRowChangeEventHandler ROLETRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddROLETRow(ROLETRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ROLETRow AddROLETRow(int ID_ROLI, string ROLI) {
                ROLETRow rowROLETRow = ((ROLETRow)(this.NewRow()));
                rowROLETRow.ItemArray = new object[] {
                        ID_ROLI,
                        ROLI};
                this.Rows.Add(rowROLETRow);
                return rowROLETRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ROLETRow FindByID_ROLI(int ID_ROLI) {
                return ((ROLETRow)(this.Rows.Find(new object[] {
                            ID_ROLI})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                ROLETDataTable cln = ((ROLETDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new ROLETDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID_ROLI = base.Columns["ID_ROLI"];
                this.columnROLI = base.Columns["ROLI"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID_ROLI = new System.Data.DataColumn("ID_ROLI", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_ROLI);
                this.columnROLI = new System.Data.DataColumn("ROLI", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnROLI);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnID_ROLI}, true));
                this.columnID_ROLI.AllowDBNull = false;
                this.columnID_ROLI.Unique = true;
                this.columnROLI.AllowDBNull = false;
                this.columnROLI.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ROLETRow NewROLETRow() {
                return ((ROLETRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new ROLETRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(ROLETRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ROLETRowChanged != null)) {
                    this.ROLETRowChanged(this, new ROLETRowChangeEvent(((ROLETRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ROLETRowChanging != null)) {
                    this.ROLETRowChanging(this, new ROLETRowChangeEvent(((ROLETRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ROLETRowDeleted != null)) {
                    this.ROLETRowDeleted(this, new ROLETRowChangeEvent(((ROLETRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ROLETRowDeleting != null)) {
                    this.ROLETRowDeleting(this, new ROLETRowChangeEvent(((ROLETRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveROLETRow(ROLETRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                ResManagerDataSet ds = new ResManagerDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ROLETDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SHPENZIMETDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnID_SHPENZIMI;
            
            private System.Data.DataColumn columnID_KATEGORIASHPENZIMI;
            
            private System.Data.DataColumn columnKOMENT;
            
            private System.Data.DataColumn columnSASIA;
            
            private System.Data.DataColumn columnDATA;
            
            private System.Data.DataColumn columnID_PERSONELI;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SHPENZIMETDataTable() {
                this.TableName = "SHPENZIMET";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SHPENZIMETDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SHPENZIMETDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_SHPENZIMIColumn {
                get {
                    return this.columnID_SHPENZIMI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_KATEGORIASHPENZIMIColumn {
                get {
                    return this.columnID_KATEGORIASHPENZIMI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn KOMENTColumn {
                get {
                    return this.columnKOMENT;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SASIAColumn {
                get {
                    return this.columnSASIA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DATAColumn {
                get {
                    return this.columnDATA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_PERSONELIColumn {
                get {
                    return this.columnID_PERSONELI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SHPENZIMETRow this[int index] {
                get {
                    return ((SHPENZIMETRow)(this.Rows[index]));
                }
            }
            
            public event SHPENZIMETRowChangeEventHandler SHPENZIMETRowChanging;
            
            public event SHPENZIMETRowChangeEventHandler SHPENZIMETRowChanged;
            
            public event SHPENZIMETRowChangeEventHandler SHPENZIMETRowDeleting;
            
            public event SHPENZIMETRowChangeEventHandler SHPENZIMETRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSHPENZIMETRow(SHPENZIMETRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SHPENZIMETRow AddSHPENZIMETRow(int ID_KATEGORIASHPENZIMI, string KOMENT, double SASIA, System.DateTime DATA, int ID_PERSONELI) {
                SHPENZIMETRow rowSHPENZIMETRow = ((SHPENZIMETRow)(this.NewRow()));
                rowSHPENZIMETRow.ItemArray = new object[] {
                        null,
                        ID_KATEGORIASHPENZIMI,
                        KOMENT,
                        SASIA,
                        DATA,
                        ID_PERSONELI};
                this.Rows.Add(rowSHPENZIMETRow);
                return rowSHPENZIMETRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SHPENZIMETRow FindByID_SHPENZIMI(int ID_SHPENZIMI) {
                return ((SHPENZIMETRow)(this.Rows.Find(new object[] {
                            ID_SHPENZIMI})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                SHPENZIMETDataTable cln = ((SHPENZIMETDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new SHPENZIMETDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID_SHPENZIMI = base.Columns["ID_SHPENZIMI"];
                this.columnID_KATEGORIASHPENZIMI = base.Columns["ID_KATEGORIASHPENZIMI"];
                this.columnKOMENT = base.Columns["KOMENT"];
                this.columnSASIA = base.Columns["SASIA"];
                this.columnDATA = base.Columns["DATA"];
                this.columnID_PERSONELI = base.Columns["ID_PERSONELI"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID_SHPENZIMI = new System.Data.DataColumn("ID_SHPENZIMI", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_SHPENZIMI);
                this.columnID_KATEGORIASHPENZIMI = new System.Data.DataColumn("ID_KATEGORIASHPENZIMI", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_KATEGORIASHPENZIMI);
                this.columnKOMENT = new System.Data.DataColumn("KOMENT", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnKOMENT);
                this.columnSASIA = new System.Data.DataColumn("SASIA", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSASIA);
                this.columnDATA = new System.Data.DataColumn("DATA", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATA);
                this.columnID_PERSONELI = new System.Data.DataColumn("ID_PERSONELI", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_PERSONELI);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnID_SHPENZIMI}, true));
                this.columnID_SHPENZIMI.AutoIncrement = true;
                this.columnID_SHPENZIMI.AllowDBNull = false;
                this.columnID_SHPENZIMI.ReadOnly = true;
                this.columnID_SHPENZIMI.Unique = true;
                this.columnID_KATEGORIASHPENZIMI.AllowDBNull = false;
                this.columnKOMENT.AllowDBNull = false;
                this.columnKOMENT.MaxLength = 2147483647;
                this.columnSASIA.AllowDBNull = false;
                this.columnDATA.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SHPENZIMETRow NewSHPENZIMETRow() {
                return ((SHPENZIMETRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new SHPENZIMETRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(SHPENZIMETRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SHPENZIMETRowChanged != null)) {
                    this.SHPENZIMETRowChanged(this, new SHPENZIMETRowChangeEvent(((SHPENZIMETRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SHPENZIMETRowChanging != null)) {
                    this.SHPENZIMETRowChanging(this, new SHPENZIMETRowChangeEvent(((SHPENZIMETRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SHPENZIMETRowDeleted != null)) {
                    this.SHPENZIMETRowDeleted(this, new SHPENZIMETRowChangeEvent(((SHPENZIMETRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SHPENZIMETRowDeleting != null)) {
                    this.SHPENZIMETRowDeleting(this, new SHPENZIMETRowChangeEvent(((SHPENZIMETRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSHPENZIMETRow(SHPENZIMETRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                ResManagerDataSet ds = new ResManagerDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SHPENZIMETDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SHPENZIMET_MUJOREDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnID_SHPENZIMIMUJOR;
            
            private System.Data.DataColumn columnID_KATSHPENZIMIMUJOR;
            
            private System.Data.DataColumn columnMUAJI;
            
            private System.Data.DataColumn columnVITI;
            
            private System.Data.DataColumn columnVLERA;
            
            private System.Data.DataColumn columnKOMENTI;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SHPENZIMET_MUJOREDataTable() {
                this.TableName = "SHPENZIMET_MUJORE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SHPENZIMET_MUJOREDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SHPENZIMET_MUJOREDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_SHPENZIMIMUJORColumn {
                get {
                    return this.columnID_SHPENZIMIMUJOR;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_KATSHPENZIMIMUJORColumn {
                get {
                    return this.columnID_KATSHPENZIMIMUJOR;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MUAJIColumn {
                get {
                    return this.columnMUAJI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn VITIColumn {
                get {
                    return this.columnVITI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn VLERAColumn {
                get {
                    return this.columnVLERA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn KOMENTIColumn {
                get {
                    return this.columnKOMENTI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SHPENZIMET_MUJORERow this[int index] {
                get {
                    return ((SHPENZIMET_MUJORERow)(this.Rows[index]));
                }
            }
            
            public event SHPENZIMET_MUJORERowChangeEventHandler SHPENZIMET_MUJORERowChanging;
            
            public event SHPENZIMET_MUJORERowChangeEventHandler SHPENZIMET_MUJORERowChanged;
            
            public event SHPENZIMET_MUJORERowChangeEventHandler SHPENZIMET_MUJORERowDeleting;
            
            public event SHPENZIMET_MUJORERowChangeEventHandler SHPENZIMET_MUJORERowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSHPENZIMET_MUJORERow(SHPENZIMET_MUJORERow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SHPENZIMET_MUJORERow AddSHPENZIMET_MUJORERow(int ID_KATSHPENZIMIMUJOR, int MUAJI, int VITI, double VLERA, string KOMENTI) {
                SHPENZIMET_MUJORERow rowSHPENZIMET_MUJORERow = ((SHPENZIMET_MUJORERow)(this.NewRow()));
                rowSHPENZIMET_MUJORERow.ItemArray = new object[] {
                        null,
                        ID_KATSHPENZIMIMUJOR,
                        MUAJI,
                        VITI,
                        VLERA,
                        KOMENTI};
                this.Rows.Add(rowSHPENZIMET_MUJORERow);
                return rowSHPENZIMET_MUJORERow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SHPENZIMET_MUJORERow FindByID_SHPENZIMIMUJOR(int ID_SHPENZIMIMUJOR) {
                return ((SHPENZIMET_MUJORERow)(this.Rows.Find(new object[] {
                            ID_SHPENZIMIMUJOR})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                SHPENZIMET_MUJOREDataTable cln = ((SHPENZIMET_MUJOREDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new SHPENZIMET_MUJOREDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID_SHPENZIMIMUJOR = base.Columns["ID_SHPENZIMIMUJOR"];
                this.columnID_KATSHPENZIMIMUJOR = base.Columns["ID_KATSHPENZIMIMUJOR"];
                this.columnMUAJI = base.Columns["MUAJI"];
                this.columnVITI = base.Columns["VITI"];
                this.columnVLERA = base.Columns["VLERA"];
                this.columnKOMENTI = base.Columns["KOMENTI"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID_SHPENZIMIMUJOR = new System.Data.DataColumn("ID_SHPENZIMIMUJOR", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_SHPENZIMIMUJOR);
                this.columnID_KATSHPENZIMIMUJOR = new System.Data.DataColumn("ID_KATSHPENZIMIMUJOR", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_KATSHPENZIMIMUJOR);
                this.columnMUAJI = new System.Data.DataColumn("MUAJI", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMUAJI);
                this.columnVITI = new System.Data.DataColumn("VITI", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnVITI);
                this.columnVLERA = new System.Data.DataColumn("VLERA", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnVLERA);
                this.columnKOMENTI = new System.Data.DataColumn("KOMENTI", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnKOMENTI);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnID_SHPENZIMIMUJOR}, true));
                this.columnID_SHPENZIMIMUJOR.AutoIncrement = true;
                this.columnID_SHPENZIMIMUJOR.AllowDBNull = false;
                this.columnID_SHPENZIMIMUJOR.ReadOnly = true;
                this.columnID_SHPENZIMIMUJOR.Unique = true;
                this.columnID_KATSHPENZIMIMUJOR.AllowDBNull = false;
                this.columnMUAJI.AllowDBNull = false;
                this.columnVITI.AllowDBNull = false;
                this.columnVLERA.AllowDBNull = false;
                this.columnKOMENTI.AllowDBNull = false;
                this.columnKOMENTI.MaxLength = 2147483647;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SHPENZIMET_MUJORERow NewSHPENZIMET_MUJORERow() {
                return ((SHPENZIMET_MUJORERow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new SHPENZIMET_MUJORERow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(SHPENZIMET_MUJORERow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SHPENZIMET_MUJORERowChanged != null)) {
                    this.SHPENZIMET_MUJORERowChanged(this, new SHPENZIMET_MUJORERowChangeEvent(((SHPENZIMET_MUJORERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SHPENZIMET_MUJORERowChanging != null)) {
                    this.SHPENZIMET_MUJORERowChanging(this, new SHPENZIMET_MUJORERowChangeEvent(((SHPENZIMET_MUJORERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SHPENZIMET_MUJORERowDeleted != null)) {
                    this.SHPENZIMET_MUJORERowDeleted(this, new SHPENZIMET_MUJORERowChangeEvent(((SHPENZIMET_MUJORERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SHPENZIMET_MUJORERowDeleting != null)) {
                    this.SHPENZIMET_MUJORERowDeleting(this, new SHPENZIMET_MUJORERowChangeEvent(((SHPENZIMET_MUJORERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSHPENZIMET_MUJORERow(SHPENZIMET_MUJORERow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                ResManagerDataSet ds = new ResManagerDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SHPENZIMET_MUJOREDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TAVOLINATDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnID_TAVOLINA;
            
            private System.Data.DataColumn columnEMRI;
            
            private System.Data.DataColumn columnKAPACITETI;
            
            private System.Data.DataColumn columnGJENDJA;
            
            private System.Data.DataColumn columnID_KATEGORIATAVOLINA;
            
            private System.Data.DataColumn columnrowguid;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TAVOLINATDataTable() {
                this.TableName = "TAVOLINAT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TAVOLINATDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TAVOLINATDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_TAVOLINAColumn {
                get {
                    return this.columnID_TAVOLINA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EMRIColumn {
                get {
                    return this.columnEMRI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn KAPACITETIColumn {
                get {
                    return this.columnKAPACITETI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn GJENDJAColumn {
                get {
                    return this.columnGJENDJA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_KATEGORIATAVOLINAColumn {
                get {
                    return this.columnID_KATEGORIATAVOLINA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn rowguidColumn {
                get {
                    return this.columnrowguid;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TAVOLINATRow this[int index] {
                get {
                    return ((TAVOLINATRow)(this.Rows[index]));
                }
            }
            
            public event TAVOLINATRowChangeEventHandler TAVOLINATRowChanging;
            
            public event TAVOLINATRowChangeEventHandler TAVOLINATRowChanged;
            
            public event TAVOLINATRowChangeEventHandler TAVOLINATRowDeleting;
            
            public event TAVOLINATRowChangeEventHandler TAVOLINATRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTAVOLINATRow(TAVOLINATRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TAVOLINATRow AddTAVOLINATRow(int EMRI, int KAPACITETI, string GJENDJA, int ID_KATEGORIATAVOLINA, System.Guid rowguid) {
                TAVOLINATRow rowTAVOLINATRow = ((TAVOLINATRow)(this.NewRow()));
                rowTAVOLINATRow.ItemArray = new object[] {
                        null,
                        EMRI,
                        KAPACITETI,
                        GJENDJA,
                        ID_KATEGORIATAVOLINA,
                        rowguid};
                this.Rows.Add(rowTAVOLINATRow);
                return rowTAVOLINATRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TAVOLINATRow FindByID_TAVOLINA(int ID_TAVOLINA) {
                return ((TAVOLINATRow)(this.Rows.Find(new object[] {
                            ID_TAVOLINA})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                TAVOLINATDataTable cln = ((TAVOLINATDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new TAVOLINATDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID_TAVOLINA = base.Columns["ID_TAVOLINA"];
                this.columnEMRI = base.Columns["EMRI"];
                this.columnKAPACITETI = base.Columns["KAPACITETI"];
                this.columnGJENDJA = base.Columns["GJENDJA"];
                this.columnID_KATEGORIATAVOLINA = base.Columns["ID_KATEGORIATAVOLINA"];
                this.columnrowguid = base.Columns["rowguid"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID_TAVOLINA = new System.Data.DataColumn("ID_TAVOLINA", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_TAVOLINA);
                this.columnEMRI = new System.Data.DataColumn("EMRI", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMRI);
                this.columnKAPACITETI = new System.Data.DataColumn("KAPACITETI", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnKAPACITETI);
                this.columnGJENDJA = new System.Data.DataColumn("GJENDJA", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnGJENDJA);
                this.columnID_KATEGORIATAVOLINA = new System.Data.DataColumn("ID_KATEGORIATAVOLINA", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_KATEGORIATAVOLINA);
                this.columnrowguid = new System.Data.DataColumn("rowguid", typeof(System.Guid), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnrowguid);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnID_TAVOLINA}, true));
                this.columnID_TAVOLINA.AutoIncrement = true;
                this.columnID_TAVOLINA.AllowDBNull = false;
                this.columnID_TAVOLINA.ReadOnly = true;
                this.columnID_TAVOLINA.Unique = true;
                this.columnEMRI.AllowDBNull = false;
                this.columnKAPACITETI.AllowDBNull = false;
                this.columnGJENDJA.AllowDBNull = false;
                this.columnGJENDJA.MaxLength = 10;
                this.columnID_KATEGORIATAVOLINA.AllowDBNull = false;
                this.columnrowguid.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TAVOLINATRow NewTAVOLINATRow() {
                return ((TAVOLINATRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new TAVOLINATRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(TAVOLINATRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TAVOLINATRowChanged != null)) {
                    this.TAVOLINATRowChanged(this, new TAVOLINATRowChangeEvent(((TAVOLINATRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TAVOLINATRowChanging != null)) {
                    this.TAVOLINATRowChanging(this, new TAVOLINATRowChangeEvent(((TAVOLINATRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TAVOLINATRowDeleted != null)) {
                    this.TAVOLINATRowDeleted(this, new TAVOLINATRowChangeEvent(((TAVOLINATRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TAVOLINATRowDeleting != null)) {
                    this.TAVOLINATRowDeleting(this, new TAVOLINATRowChangeEvent(((TAVOLINATRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTAVOLINATRow(TAVOLINATRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                ResManagerDataSet ds = new ResManagerDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TAVOLINATDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TURNETDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnID_TURNI;
            
            private System.Data.DataColumn columnFILLIMI;
            
            private System.Data.DataColumn columnMBARIMI;
            
            private System.Data.DataColumn columnID_PERSONELI;
            
            private System.Data.DataColumn columnMBYLLUR;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TURNETDataTable() {
                this.TableName = "TURNET";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TURNETDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TURNETDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_TURNIColumn {
                get {
                    return this.columnID_TURNI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FILLIMIColumn {
                get {
                    return this.columnFILLIMI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MBARIMIColumn {
                get {
                    return this.columnMBARIMI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_PERSONELIColumn {
                get {
                    return this.columnID_PERSONELI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MBYLLURColumn {
                get {
                    return this.columnMBYLLUR;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TURNETRow this[int index] {
                get {
                    return ((TURNETRow)(this.Rows[index]));
                }
            }
            
            public event TURNETRowChangeEventHandler TURNETRowChanging;
            
            public event TURNETRowChangeEventHandler TURNETRowChanged;
            
            public event TURNETRowChangeEventHandler TURNETRowDeleting;
            
            public event TURNETRowChangeEventHandler TURNETRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTURNETRow(TURNETRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TURNETRow AddTURNETRow(int ID_TURNI, System.DateTime FILLIMI, System.DateTime MBARIMI, int ID_PERSONELI, bool MBYLLUR) {
                TURNETRow rowTURNETRow = ((TURNETRow)(this.NewRow()));
                rowTURNETRow.ItemArray = new object[] {
                        ID_TURNI,
                        FILLIMI,
                        MBARIMI,
                        ID_PERSONELI,
                        MBYLLUR};
                this.Rows.Add(rowTURNETRow);
                return rowTURNETRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TURNETRow FindByID_TURNI(int ID_TURNI) {
                return ((TURNETRow)(this.Rows.Find(new object[] {
                            ID_TURNI})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                TURNETDataTable cln = ((TURNETDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new TURNETDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID_TURNI = base.Columns["ID_TURNI"];
                this.columnFILLIMI = base.Columns["FILLIMI"];
                this.columnMBARIMI = base.Columns["MBARIMI"];
                this.columnID_PERSONELI = base.Columns["ID_PERSONELI"];
                this.columnMBYLLUR = base.Columns["MBYLLUR"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID_TURNI = new System.Data.DataColumn("ID_TURNI", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_TURNI);
                this.columnFILLIMI = new System.Data.DataColumn("FILLIMI", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFILLIMI);
                this.columnMBARIMI = new System.Data.DataColumn("MBARIMI", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMBARIMI);
                this.columnID_PERSONELI = new System.Data.DataColumn("ID_PERSONELI", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_PERSONELI);
                this.columnMBYLLUR = new System.Data.DataColumn("MBYLLUR", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMBYLLUR);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnID_TURNI}, true));
                this.columnID_TURNI.AllowDBNull = false;
                this.columnID_TURNI.Unique = true;
                this.columnFILLIMI.AllowDBNull = false;
                this.columnID_PERSONELI.AllowDBNull = false;
                this.columnMBYLLUR.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TURNETRow NewTURNETRow() {
                return ((TURNETRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new TURNETRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(TURNETRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TURNETRowChanged != null)) {
                    this.TURNETRowChanged(this, new TURNETRowChangeEvent(((TURNETRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TURNETRowChanging != null)) {
                    this.TURNETRowChanging(this, new TURNETRowChangeEvent(((TURNETRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TURNETRowDeleted != null)) {
                    this.TURNETRowDeleted(this, new TURNETRowChangeEvent(((TURNETRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TURNETRowDeleting != null)) {
                    this.TURNETRowDeleting(this, new TURNETRowChangeEvent(((TURNETRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTURNETRow(TURNETRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                ResManagerDataSet ds = new ResManagerDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TURNETDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ARTIKUJTRow : System.Data.DataRow {
            
            private ARTIKUJTDataTable tableARTIKUJT;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ARTIKUJTRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableARTIKUJT = ((ARTIKUJTDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_ARTIKULLI {
                get {
                    return ((int)(this[this.tableARTIKUJT.ID_ARTIKULLIColumn]));
                }
                set {
                    this[this.tableARTIKUJT.ID_ARTIKULLIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_KATEGORIAARTIKULLI {
                get {
                    return ((int)(this[this.tableARTIKUJT.ID_KATEGORIAARTIKULLIColumn]));
                }
                set {
                    this[this.tableARTIKUJT.ID_KATEGORIAARTIKULLIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double NUMRI_TOTAL {
                get {
                    return ((double)(this[this.tableARTIKUJT.NUMRI_TOTALColumn]));
                }
                set {
                    this[this.tableARTIKUJT.NUMRI_TOTALColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SASIA_SKORTE {
                get {
                    return ((double)(this[this.tableARTIKUJT.SASIA_SKORTEColumn]));
                }
                set {
                    this[this.tableARTIKUJT.SASIA_SKORTEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ARTIKULL_KONSUMI {
                get {
                    return ((bool)(this[this.tableARTIKUJT.ARTIKULL_KONSUMIColumn]));
                }
                set {
                    this[this.tableARTIKUJT.ARTIKULL_KONSUMIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_NJESIA {
                get {
                    return ((int)(this[this.tableARTIKUJT.ID_NJESIAColumn]));
                }
                set {
                    this[this.tableARTIKUJT.ID_NJESIAColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMRI {
                get {
                    return ((string)(this[this.tableARTIKUJT.EMRIColumn]));
                }
                set {
                    this[this.tableARTIKUJT.EMRIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FOTO {
                get {
                    return ((string)(this[this.tableARTIKUJT.FOTOColumn]));
                }
                set {
                    this[this.tableARTIKUJT.FOTOColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool DISPONUESHEM {
                get {
                    return ((bool)(this[this.tableARTIKUJT.DISPONUESHEMColumn]));
                }
                set {
                    this[this.tableARTIKUJT.DISPONUESHEMColumn] = value;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ARTIKUJT_FURNITORETRow : System.Data.DataRow {
            
            private ARTIKUJT_FURNITORETDataTable tableARTIKUJT_FURNITORET;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ARTIKUJT_FURNITORETRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableARTIKUJT_FURNITORET = ((ARTIKUJT_FURNITORETDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_FURNITORI {
                get {
                    return ((int)(this[this.tableARTIKUJT_FURNITORET.ID_FURNITORIColumn]));
                }
                set {
                    this[this.tableARTIKUJT_FURNITORET.ID_FURNITORIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_ARTIKULLI {
                get {
                    return ((int)(this[this.tableARTIKUJT_FURNITORET.ID_ARTIKULLIColumn]));
                }
                set {
                    this[this.tableARTIKUJT_FURNITORET.ID_ARTIKULLIColumn] = value;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class BLERJETRow : System.Data.DataRow {
            
            private BLERJETDataTable tableBLERJET;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BLERJETRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBLERJET = ((BLERJETDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_BLERJA {
                get {
                    return ((int)(this[this.tableBLERJET.ID_BLERJAColumn]));
                }
                set {
                    this[this.tableBLERJET.ID_BLERJAColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_FURNITORI {
                get {
                    try {
                        return ((int)(this[this.tableBLERJET.ID_FURNITORIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ID_FURNITORI\' in table \'BLERJET\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBLERJET.ID_FURNITORIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DATA_BLERJE {
                get {
                    return ((System.DateTime)(this[this.tableBLERJET.DATA_BLERJEColumn]));
                }
                set {
                    this[this.tableBLERJET.DATA_BLERJEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NR_FATURE {
                get {
                    return ((string)(this[this.tableBLERJET.NR_FATUREColumn]));
                }
                set {
                    this[this.tableBLERJET.NR_FATUREColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsID_FURNITORINull() {
                return this.IsNull(this.tableBLERJET.ID_FURNITORIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetID_FURNITORINull() {
                this[this.tableBLERJET.ID_FURNITORIColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class BLERJET_ARTIKUJTRow : System.Data.DataRow {
            
            private BLERJET_ARTIKUJTDataTable tableBLERJET_ARTIKUJT;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BLERJET_ARTIKUJTRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBLERJET_ARTIKUJT = ((BLERJET_ARTIKUJTDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_BLERJEARTIKUJ {
                get {
                    return ((int)(this[this.tableBLERJET_ARTIKUJT.ID_BLERJEARTIKUJColumn]));
                }
                set {
                    this[this.tableBLERJET_ARTIKUJT.ID_BLERJEARTIKUJColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_BLERJA {
                get {
                    return ((int)(this[this.tableBLERJET_ARTIKUJT.ID_BLERJAColumn]));
                }
                set {
                    this[this.tableBLERJET_ARTIKUJT.ID_BLERJAColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_ARTIKULLI {
                get {
                    return ((int)(this[this.tableBLERJET_ARTIKUJT.ID_ARTIKULLIColumn]));
                }
                set {
                    this[this.tableBLERJET_ARTIKUJT.ID_ARTIKULLIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SASIA {
                get {
                    return ((double)(this[this.tableBLERJET_ARTIKUJT.SASIAColumn]));
                }
                set {
                    this[this.tableBLERJET_ARTIKUJT.SASIAColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DATA_SKADENCA {
                get {
                    return ((System.DateTime)(this[this.tableBLERJET_ARTIKUJT.DATA_SKADENCAColumn]));
                }
                set {
                    this[this.tableBLERJET_ARTIKUJT.DATA_SKADENCAColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float CMIMI {
                get {
                    return ((float)(this[this.tableBLERJET_ARTIKUJT.CMIMIColumn]));
                }
                set {
                    this[this.tableBLERJET_ARTIKUJT.CMIMIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double KONSUMUAR {
                get {
                    return ((double)(this[this.tableBLERJET_ARTIKUJT.KONSUMUARColumn]));
                }
                set {
                    this[this.tableBLERJET_ARTIKUJT.KONSUMUARColumn] = value;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CMIMETRow : System.Data.DataRow {
            
            private CMIMETDataTable tableCMIMET;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CMIMETRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCMIMET = ((CMIMETDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_CMIMI {
                get {
                    return ((int)(this[this.tableCMIMET.ID_CMIMIColumn]));
                }
                set {
                    this[this.tableCMIMET.ID_CMIMIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_CMIMIPERIUDHA {
                get {
                    return ((int)(this[this.tableCMIMET.ID_CMIMIPERIUDHAColumn]));
                }
                set {
                    this[this.tableCMIMET.ID_CMIMIPERIUDHAColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ORE_FILLLIMI {
                get {
                    return ((System.DateTime)(this[this.tableCMIMET.ORE_FILLLIMIColumn]));
                }
                set {
                    this[this.tableCMIMET.ORE_FILLLIMIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ORE_MBARIMI {
                get {
                    return ((System.DateTime)(this[this.tableCMIMET.ORE_MBARIMIColumn]));
                }
                set {
                    this[this.tableCMIMET.ORE_MBARIMIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double VLERA {
                get {
                    return ((double)(this[this.tableCMIMET.VLERAColumn]));
                }
                set {
                    this[this.tableCMIMET.VLERAColumn] = value;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CMIMET_PERIUDHARow : System.Data.DataRow {
            
            private CMIMET_PERIUDHADataTable tableCMIMET_PERIUDHA;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CMIMET_PERIUDHARow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCMIMET_PERIUDHA = ((CMIMET_PERIUDHADataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_CMIMIPERIUDHA {
                get {
                    return ((int)(this[this.tableCMIMET_PERIUDHA.ID_CMIMIPERIUDHAColumn]));
                }
                set {
                    this[this.tableCMIMET_PERIUDHA.ID_CMIMIPERIUDHAColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_ARTIKULLI {
                get {
                    return ((int)(this[this.tableCMIMET_PERIUDHA.ID_ARTIKULLIColumn]));
                }
                set {
                    this[this.tableCMIMET_PERIUDHA.ID_ARTIKULLIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DATE_FILLIMI {
                get {
                    return ((System.DateTime)(this[this.tableCMIMET_PERIUDHA.DATE_FILLIMIColumn]));
                }
                set {
                    this[this.tableCMIMET_PERIUDHA.DATE_FILLIMIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DATE_MBARIMI {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableCMIMET_PERIUDHA.DATE_MBARIMIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DATE_MBARIMI\' in table \'CMIMET_PERIUDHA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCMIMET_PERIUDHA.DATE_MBARIMIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDATE_MBARIMINull() {
                return this.IsNull(this.tableCMIMET_PERIUDHA.DATE_MBARIMIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDATE_MBARIMINull() {
                this[this.tableCMIMET_PERIUDHA.DATE_MBARIMIColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CMIMET_PERIUDHA_RECETATRow : System.Data.DataRow {
            
            private CMIMET_PERIUDHA_RECETATDataTable tableCMIMET_PERIUDHA_RECETAT;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CMIMET_PERIUDHA_RECETATRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCMIMET_PERIUDHA_RECETAT = ((CMIMET_PERIUDHA_RECETATDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_CMIMIPERIUDHA {
                get {
                    return ((int)(this[this.tableCMIMET_PERIUDHA_RECETAT.ID_CMIMIPERIUDHAColumn]));
                }
                set {
                    this[this.tableCMIMET_PERIUDHA_RECETAT.ID_CMIMIPERIUDHAColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_RECETA {
                get {
                    return ((int)(this[this.tableCMIMET_PERIUDHA_RECETAT.ID_RECETAColumn]));
                }
                set {
                    this[this.tableCMIMET_PERIUDHA_RECETAT.ID_RECETAColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DATE_FILLIMI {
                get {
                    return ((System.DateTime)(this[this.tableCMIMET_PERIUDHA_RECETAT.DATE_FILLIMIColumn]));
                }
                set {
                    this[this.tableCMIMET_PERIUDHA_RECETAT.DATE_FILLIMIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DATE_MBARIMI {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableCMIMET_PERIUDHA_RECETAT.DATE_MBARIMIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DATE_MBARIMI\' in table \'CMIMET_PERIUDHA_RECETAT\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableCMIMET_PERIUDHA_RECETAT.DATE_MBARIMIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDATE_MBARIMINull() {
                return this.IsNull(this.tableCMIMET_PERIUDHA_RECETAT.DATE_MBARIMIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDATE_MBARIMINull() {
                this[this.tableCMIMET_PERIUDHA_RECETAT.DATE_MBARIMIColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CMIMET_RECETATRow : System.Data.DataRow {
            
            private CMIMET_RECETATDataTable tableCMIMET_RECETAT;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CMIMET_RECETATRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCMIMET_RECETAT = ((CMIMET_RECETATDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_CMIMI {
                get {
                    return ((int)(this[this.tableCMIMET_RECETAT.ID_CMIMIColumn]));
                }
                set {
                    this[this.tableCMIMET_RECETAT.ID_CMIMIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_CMIMIPERIUDHA {
                get {
                    return ((int)(this[this.tableCMIMET_RECETAT.ID_CMIMIPERIUDHAColumn]));
                }
                set {
                    this[this.tableCMIMET_RECETAT.ID_CMIMIPERIUDHAColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ORE_FILLIMI {
                get {
                    return ((System.DateTime)(this[this.tableCMIMET_RECETAT.ORE_FILLIMIColumn]));
                }
                set {
                    this[this.tableCMIMET_RECETAT.ORE_FILLIMIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ORE_MBARIMI {
                get {
                    return ((System.DateTime)(this[this.tableCMIMET_RECETAT.ORE_MBARIMIColumn]));
                }
                set {
                    this[this.tableCMIMET_RECETAT.ORE_MBARIMIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double VLERA {
                get {
                    return ((double)(this[this.tableCMIMET_RECETAT.VLERAColumn]));
                }
                set {
                    this[this.tableCMIMET_RECETAT.VLERAColumn] = value;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class FATURA_ARTIKUJTRow : System.Data.DataRow {
            
            private FATURA_ARTIKUJTDataTable tableFATURA_ARTIKUJT;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FATURA_ARTIKUJTRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFATURA_ARTIKUJT = ((FATURA_ARTIKUJTDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_FATURA {
                get {
                    return ((int)(this[this.tableFATURA_ARTIKUJT.ID_FATURAColumn]));
                }
                set {
                    this[this.tableFATURA_ARTIKUJT.ID_FATURAColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_ARTIKULLI {
                get {
                    return ((int)(this[this.tableFATURA_ARTIKUJT.ID_ARTIKULLIColumn]));
                }
                set {
                    this[this.tableFATURA_ARTIKUJT.ID_ARTIKULLIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SASIA {
                get {
                    return ((int)(this[this.tableFATURA_ARTIKUJT.SASIAColumn]));
                }
                set {
                    this[this.tableFATURA_ARTIKUJT.SASIAColumn] = value;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class FATURA_RECETATRow : System.Data.DataRow {
            
            private FATURA_RECETATDataTable tableFATURA_RECETAT;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FATURA_RECETATRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFATURA_RECETAT = ((FATURA_RECETATDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_FATURA {
                get {
                    return ((int)(this[this.tableFATURA_RECETAT.ID_FATURAColumn]));
                }
                set {
                    this[this.tableFATURA_RECETAT.ID_FATURAColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_RECETA {
                get {
                    return ((int)(this[this.tableFATURA_RECETAT.ID_RECETAColumn]));
                }
                set {
                    this[this.tableFATURA_RECETAT.ID_RECETAColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SASIA {
                get {
                    return ((int)(this[this.tableFATURA_RECETAT.SASIAColumn]));
                }
                set {
                    this[this.tableFATURA_RECETAT.SASIAColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid rowguid {
                get {
                    return ((System.Guid)(this[this.tableFATURA_RECETAT.rowguidColumn]));
                }
                set {
                    this[this.tableFATURA_RECETAT.rowguidColumn] = value;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class FATURATRow : System.Data.DataRow {
            
            private FATURATDataTable tableFATURAT;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FATURATRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFATURAT = ((FATURATDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_FATURA {
                get {
                    return ((int)(this[this.tableFATURAT.ID_FATURAColumn]));
                }
                set {
                    this[this.tableFATURAT.ID_FATURAColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_PERSONELI {
                get {
                    return ((int)(this[this.tableFATURAT.ID_PERSONELIColumn]));
                }
                set {
                    this[this.tableFATURAT.ID_PERSONELIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_TAVOLINA {
                get {
                    return ((int)(this[this.tableFATURAT.ID_TAVOLINAColumn]));
                }
                set {
                    this[this.tableFATURAT.ID_TAVOLINAColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double TOTALI {
                get {
                    return ((double)(this[this.tableFATURAT.TOTALIColumn]));
                }
                set {
                    this[this.tableFATURAT.TOTALIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DATA_ORA {
                get {
                    return ((System.DateTime)(this[this.tableFATURAT.DATA_ORAColumn]));
                }
                set {
                    this[this.tableFATURAT.DATA_ORAColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SKONTO {
                get {
                    return ((double)(this[this.tableFATURAT.SKONTOColumn]));
                }
                set {
                    this[this.tableFATURAT.SKONTOColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_FORMAPAGESA {
                get {
                    return ((int)(this[this.tableFATURAT.ID_FORMAPAGESAColumn]));
                }
                set {
                    this[this.tableFATURAT.ID_FORMAPAGESAColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NR_FATURE {
                get {
                    return ((string)(this[this.tableFATURAT.NR_FATUREColumn]));
                }
                set {
                    this[this.tableFATURAT.NR_FATUREColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_KLIENTI {
                get {
                    return ((int)(this[this.tableFATURAT.ID_KLIENTIColumn]));
                }
                set {
                    this[this.tableFATURAT.ID_KLIENTIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double KOSTO {
                get {
                    return ((double)(this[this.tableFATURAT.KOSTOColumn]));
                }
                set {
                    this[this.tableFATURAT.KOSTOColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ANULLUAR {
                get {
                    return ((bool)(this[this.tableFATURAT.ANULLUARColumn]));
                }
                set {
                    this[this.tableFATURAT.ANULLUARColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid rowguid {
                get {
                    return ((System.Guid)(this[this.tableFATURAT.rowguidColumn]));
                }
                set {
                    this[this.tableFATURAT.rowguidColumn] = value;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class FAVORITERow : System.Data.DataRow {
            
            private FAVORITEDataTable tableFAVORITE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FAVORITERow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFAVORITE = ((FAVORITEDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_FAVORITE {
                get {
                    return ((int)(this[this.tableFAVORITE.ID_FAVORITEColumn]));
                }
                set {
                    this[this.tableFAVORITE.ID_FAVORITEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMRI {
                get {
                    return ((string)(this[this.tableFAVORITE.EMRIColumn]));
                }
                set {
                    this[this.tableFAVORITE.EMRIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LLOJI {
                get {
                    return ((string)(this[this.tableFAVORITE.LLOJIColumn]));
                }
                set {
                    this[this.tableFAVORITE.LLOJIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PRIORITETI {
                get {
                    return ((int)(this[this.tableFAVORITE.PRIORITETIColumn]));
                }
                set {
                    this[this.tableFAVORITE.PRIORITETIColumn] = value;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class FORMA_PAGESARow : System.Data.DataRow {
            
            private FORMA_PAGESADataTable tableFORMA_PAGESA;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FORMA_PAGESARow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFORMA_PAGESA = ((FORMA_PAGESADataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_FORMAPAGESA {
                get {
                    return ((int)(this[this.tableFORMA_PAGESA.ID_FORMAPAGESAColumn]));
                }
                set {
                    this[this.tableFORMA_PAGESA.ID_FORMAPAGESAColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FORMA_PAGESA {
                get {
                    return ((string)(this[this.tableFORMA_PAGESA.FORMA_PAGESAColumn]));
                }
                set {
                    this[this.tableFORMA_PAGESA.FORMA_PAGESAColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double KOMISIONI {
                get {
                    return ((double)(this[this.tableFORMA_PAGESA.KOMISIONIColumn]));
                }
                set {
                    this[this.tableFORMA_PAGESA.KOMISIONIColumn] = value;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class FURNITORETRow : System.Data.DataRow {
            
            private FURNITORETDataTable tableFURNITORET;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FURNITORETRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFURNITORET = ((FURNITORETDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_FURNITORI {
                get {
                    return ((int)(this[this.tableFURNITORET.ID_FURNITORIColumn]));
                }
                set {
                    this[this.tableFURNITORET.ID_FURNITORIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMRI {
                get {
                    try {
                        return ((string)(this[this.tableFURNITORET.EMRIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'EMRI\' in table \'FURNITORET\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFURNITORET.EMRIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MBIEMRI {
                get {
                    try {
                        return ((string)(this[this.tableFURNITORET.MBIEMRIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MBIEMRI\' in table \'FURNITORET\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFURNITORET.MBIEMRIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ADRESA {
                get {
                    try {
                        return ((string)(this[this.tableFURNITORET.ADRESAColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ADRESA\' in table \'FURNITORET\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFURNITORET.ADRESAColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMAILI {
                get {
                    try {
                        return ((string)(this[this.tableFURNITORET.EMAILIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'EMAILI\' in table \'FURNITORET\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFURNITORET.EMAILIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TELEFONI {
                get {
                    try {
                        return ((string)(this[this.tableFURNITORET.TELEFONIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TELEFONI\' in table \'FURNITORET\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFURNITORET.TELEFONIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMRINull() {
                return this.IsNull(this.tableFURNITORET.EMRIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMRINull() {
                this[this.tableFURNITORET.EMRIColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMBIEMRINull() {
                return this.IsNull(this.tableFURNITORET.MBIEMRIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMBIEMRINull() {
                this[this.tableFURNITORET.MBIEMRIColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsADRESANull() {
                return this.IsNull(this.tableFURNITORET.ADRESAColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetADRESANull() {
                this[this.tableFURNITORET.ADRESAColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMAILINull() {
                return this.IsNull(this.tableFURNITORET.EMAILIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMAILINull() {
                this[this.tableFURNITORET.EMAILIColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTELEFONINull() {
                return this.IsNull(this.tableFURNITORET.TELEFONIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTELEFONINull() {
                this[this.tableFURNITORET.TELEFONIColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GRUPIRow : System.Data.DataRow {
            
            private GRUPIDataTable tableGRUPI;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GRUPIRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGRUPI = ((GRUPIDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_GRUPI {
                get {
                    return ((int)(this[this.tableGRUPI.ID_GRUPIColumn]));
                }
                set {
                    this[this.tableGRUPI.ID_GRUPIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMRI {
                get {
                    return ((string)(this[this.tableGRUPI.EMRIColumn]));
                }
                set {
                    this[this.tableGRUPI.EMRIColumn] = value;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class KATEGORIA_SHPENZIMIMUJORRow : System.Data.DataRow {
            
            private KATEGORIA_SHPENZIMIMUJORDataTable tableKATEGORIA_SHPENZIMIMUJOR;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal KATEGORIA_SHPENZIMIMUJORRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableKATEGORIA_SHPENZIMIMUJOR = ((KATEGORIA_SHPENZIMIMUJORDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_KATSHPENNZIMIMUJOR {
                get {
                    return ((int)(this[this.tableKATEGORIA_SHPENZIMIMUJOR.ID_KATSHPENNZIMIMUJORColumn]));
                }
                set {
                    this[this.tableKATEGORIA_SHPENZIMIMUJOR.ID_KATSHPENNZIMIMUJORColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] CSHPENZIMI {
                get {
                    return ((byte[])(this[this.tableKATEGORIA_SHPENZIMIMUJOR.CSHPENZIMIColumn]));
                }
                set {
                    this[this.tableKATEGORIA_SHPENZIMIMUJOR.CSHPENZIMIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PSHPENZIMI {
                get {
                    return ((string)(this[this.tableKATEGORIA_SHPENZIMIMUJOR.PSHPENZIMIColumn]));
                }
                set {
                    this[this.tableKATEGORIA_SHPENZIMIMUJOR.PSHPENZIMIColumn] = value;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class KATEGORITE_ARTIKUJTRow : System.Data.DataRow {
            
            private KATEGORITE_ARTIKUJTDataTable tableKATEGORITE_ARTIKUJT;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal KATEGORITE_ARTIKUJTRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableKATEGORITE_ARTIKUJT = ((KATEGORITE_ARTIKUJTDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_KATEGORIAARTIKULLI {
                get {
                    return ((int)(this[this.tableKATEGORITE_ARTIKUJT.ID_KATEGORIAARTIKULLIColumn]));
                }
                set {
                    this[this.tableKATEGORITE_ARTIKUJT.ID_KATEGORIAARTIKULLIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PERSHKRIMI {
                get {
                    return ((string)(this[this.tableKATEGORITE_ARTIKUJT.PERSHKRIMIColumn]));
                }
                set {
                    this[this.tableKATEGORITE_ARTIKUJT.PERSHKRIMIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool VISIBLE {
                get {
                    return ((bool)(this[this.tableKATEGORITE_ARTIKUJT.VISIBLEColumn]));
                }
                set {
                    this[this.tableKATEGORITE_ARTIKUJT.VISIBLEColumn] = value;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class KATEGORITE_RECETATRow : System.Data.DataRow {
            
            private KATEGORITE_RECETATDataTable tableKATEGORITE_RECETAT;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal KATEGORITE_RECETATRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableKATEGORITE_RECETAT = ((KATEGORITE_RECETATDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_KATEGORIARECETA {
                get {
                    return ((int)(this[this.tableKATEGORITE_RECETAT.ID_KATEGORIARECETAColumn]));
                }
                set {
                    this[this.tableKATEGORITE_RECETAT.ID_KATEGORIARECETAColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PERSHKRIMI {
                get {
                    return ((string)(this[this.tableKATEGORITE_RECETAT.PERSHKRIMIColumn]));
                }
                set {
                    this[this.tableKATEGORITE_RECETAT.PERSHKRIMIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid rowguid {
                get {
                    return ((System.Guid)(this[this.tableKATEGORITE_RECETAT.rowguidColumn]));
                }
                set {
                    this[this.tableKATEGORITE_RECETAT.rowguidColumn] = value;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class KATEGORITE_SHPENZIMETRow : System.Data.DataRow {
            
            private KATEGORITE_SHPENZIMETDataTable tableKATEGORITE_SHPENZIMET;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal KATEGORITE_SHPENZIMETRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableKATEGORITE_SHPENZIMET = ((KATEGORITE_SHPENZIMETDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_KATEGORIASHPENZIMI {
                get {
                    return ((int)(this[this.tableKATEGORITE_SHPENZIMET.ID_KATEGORIASHPENZIMIColumn]));
                }
                set {
                    this[this.tableKATEGORITE_SHPENZIMET.ID_KATEGORIASHPENZIMIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PERSHKRIMI {
                get {
                    return ((string)(this[this.tableKATEGORITE_SHPENZIMET.PERSHKRIMIColumn]));
                }
                set {
                    this[this.tableKATEGORITE_SHPENZIMET.PERSHKRIMIColumn] = value;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class KATEGORITE_TAVOLINATRow : System.Data.DataRow {
            
            private KATEGORITE_TAVOLINATDataTable tableKATEGORITE_TAVOLINAT;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal KATEGORITE_TAVOLINATRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableKATEGORITE_TAVOLINAT = ((KATEGORITE_TAVOLINATDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_KATEGORIATAVOLINA {
                get {
                    return ((int)(this[this.tableKATEGORITE_TAVOLINAT.ID_KATEGORIATAVOLINAColumn]));
                }
                set {
                    this[this.tableKATEGORITE_TAVOLINAT.ID_KATEGORIATAVOLINAColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PERSHKRIMI {
                get {
                    return ((string)(this[this.tableKATEGORITE_TAVOLINAT.PERSHKRIMIColumn]));
                }
                set {
                    this[this.tableKATEGORITE_TAVOLINAT.PERSHKRIMIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid rowguid {
                get {
                    return ((System.Guid)(this[this.tableKATEGORITE_TAVOLINAT.rowguidColumn]));
                }
                set {
                    this[this.tableKATEGORITE_TAVOLINAT.rowguidColumn] = value;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class KLIENTETRow : System.Data.DataRow {
            
            private KLIENTETDataTable tableKLIENTET;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal KLIENTETRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableKLIENTET = ((KLIENTETDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_KLIENTI {
                get {
                    return ((int)(this[this.tableKLIENTET.ID_KLIENTIColumn]));
                }
                set {
                    this[this.tableKLIENTET.ID_KLIENTIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_GRUPI {
                get {
                    return ((int)(this[this.tableKLIENTET.ID_GRUPIColumn]));
                }
                set {
                    this[this.tableKLIENTET.ID_GRUPIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMER {
                get {
                    return ((string)(this[this.tableKLIENTET.EMERColumn]));
                }
                set {
                    this[this.tableKLIENTET.EMERColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MBIEMER {
                get {
                    return ((string)(this[this.tableKLIENTET.MBIEMERColumn]));
                }
                set {
                    this[this.tableKLIENTET.MBIEMERColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DATELINDJA {
                get {
                    return ((System.DateTime)(this[this.tableKLIENTET.DATELINDJAColumn]));
                }
                set {
                    this[this.tableKLIENTET.DATELINDJAColumn] = value;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class KLIENTET_RESTORANTIRow : System.Data.DataRow {
            
            private KLIENTET_RESTORANTIDataTable tableKLIENTET_RESTORANTI;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal KLIENTET_RESTORANTIRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableKLIENTET_RESTORANTI = ((KLIENTET_RESTORANTIDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_KLIENTI {
                get {
                    return ((int)(this[this.tableKLIENTET_RESTORANTI.ID_KLIENTIColumn]));
                }
                set {
                    this[this.tableKLIENTET_RESTORANTI.ID_KLIENTIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMRI {
                get {
                    return ((string)(this[this.tableKLIENTET_RESTORANTI.EMRIColumn]));
                }
                set {
                    this[this.tableKLIENTET_RESTORANTI.EMRIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MBIEMRI {
                get {
                    return ((string)(this[this.tableKLIENTET_RESTORANTI.MBIEMRIColumn]));
                }
                set {
                    this[this.tableKLIENTET_RESTORANTI.MBIEMRIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TELEFONI {
                get {
                    return ((string)(this[this.tableKLIENTET_RESTORANTI.TELEFONIColumn]));
                }
                set {
                    this[this.tableKLIENTET_RESTORANTI.TELEFONIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KODI_KLIENTI {
                get {
                    return ((string)(this[this.tableKLIENTET_RESTORANTI.KODI_KLIENTIColumn]));
                }
                set {
                    this[this.tableKLIENTET_RESTORANTI.KODI_KLIENTIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ADRESA {
                get {
                    return ((string)(this[this.tableKLIENTET_RESTORANTI.ADRESAColumn]));
                }
                set {
                    this[this.tableKLIENTET_RESTORANTI.ADRESAColumn] = value;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class NJESITERow : System.Data.DataRow {
            
            private NJESITEDataTable tableNJESITE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal NJESITERow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableNJESITE = ((NJESITEDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_NJESIA {
                get {
                    return ((int)(this[this.tableNJESITE.ID_NJESIAColumn]));
                }
                set {
                    this[this.tableNJESITE.ID_NJESIAColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NJESIA {
                get {
                    return ((string)(this[this.tableNJESITE.NJESIAColumn]));
                }
                set {
                    this[this.tableNJESITE.NJESIAColumn] = value;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class OFERTATRow : System.Data.DataRow {
            
            private OFERTATDataTable tableOFERTAT;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal OFERTATRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableOFERTAT = ((OFERTATDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_OFERTA {
                get {
                    return ((int)(this[this.tableOFERTAT.ID_OFERTAColumn]));
                }
                set {
                    this[this.tableOFERTAT.ID_OFERTAColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_ARTIKULLI {
                get {
                    return ((int)(this[this.tableOFERTAT.ID_ARTIKULLIColumn]));
                }
                set {
                    this[this.tableOFERTAT.ID_ARTIKULLIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SASIA_ARTIKULLI {
                get {
                    return ((double)(this[this.tableOFERTAT.SASIA_ARTIKULLIColumn]));
                }
                set {
                    this[this.tableOFERTAT.SASIA_ARTIKULLIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_RECETA {
                get {
                    return ((int)(this[this.tableOFERTAT.ID_RECETAColumn]));
                }
                set {
                    this[this.tableOFERTAT.ID_RECETAColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SASIA_RECETA {
                get {
                    return ((int)(this[this.tableOFERTAT.SASIA_RECETAColumn]));
                }
                set {
                    this[this.tableOFERTAT.SASIA_RECETAColumn] = value;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class OFERTAT_BLERJERow : System.Data.DataRow {
            
            private OFERTAT_BLERJEDataTable tableOFERTAT_BLERJE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal OFERTAT_BLERJERow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableOFERTAT_BLERJE = ((OFERTAT_BLERJEDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_BLERJEARTIKUJ {
                get {
                    return ((int)(this[this.tableOFERTAT_BLERJE.ID_BLERJEARTIKUJColumn]));
                }
                set {
                    this[this.tableOFERTAT_BLERJE.ID_BLERJEARTIKUJColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_ARTIKULLIFILLESTAR {
                get {
                    return ((int)(this[this.tableOFERTAT_BLERJE.ID_ARTIKULLIFILLESTARColumn]));
                }
                set {
                    this[this.tableOFERTAT_BLERJE.ID_ARTIKULLIFILLESTARColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SASIA_KUSHT_OFERTA {
                get {
                    return ((double)(this[this.tableOFERTAT_BLERJE.SASIA_KUSHT_OFERTAColumn]));
                }
                set {
                    this[this.tableOFERTAT_BLERJE.SASIA_KUSHT_OFERTAColumn] = value;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PERIUDHATRow : System.Data.DataRow {
            
            private PERIUDHATDataTable tablePERIUDHAT;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PERIUDHATRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePERIUDHAT = ((PERIUDHATDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ORE_FILLIMI {
                get {
                    return ((System.DateTime)(this[this.tablePERIUDHAT.ORE_FILLIMIColumn]));
                }
                set {
                    this[this.tablePERIUDHAT.ORE_FILLIMIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ORE_MBARIMI {
                get {
                    return ((System.DateTime)(this[this.tablePERIUDHAT.ORE_MBARIMIColumn]));
                }
                set {
                    this[this.tablePERIUDHAT.ORE_MBARIMIColumn] = value;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PERSONELIRow : System.Data.DataRow {
            
            private PERSONELIDataTable tablePERSONELI;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PERSONELIRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePERSONELI = ((PERSONELIDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_PERSONELI {
                get {
                    return ((int)(this[this.tablePERSONELI.ID_PERSONELIColumn]));
                }
                set {
                    this[this.tablePERSONELI.ID_PERSONELIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMRI {
                get {
                    return ((string)(this[this.tablePERSONELI.EMRIColumn]));
                }
                set {
                    this[this.tablePERSONELI.EMRIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MBIEMRI {
                get {
                    return ((string)(this[this.tablePERSONELI.MBIEMRIColumn]));
                }
                set {
                    this[this.tablePERSONELI.MBIEMRIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TELEFONI {
                get {
                    return ((string)(this[this.tablePERSONELI.TELEFONIColumn]));
                }
                set {
                    this[this.tablePERSONELI.TELEFONIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_ROLI {
                get {
                    return ((int)(this[this.tablePERSONELI.ID_ROLIColumn]));
                }
                set {
                    this[this.tablePERSONELI.ID_ROLIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PERDORUESI {
                get {
                    return ((string)(this[this.tablePERSONELI.PERDORUESIColumn]));
                }
                set {
                    this[this.tablePERSONELI.PERDORUESIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FJALEKALIMI {
                get {
                    return ((string)(this[this.tablePERSONELI.FJALEKALIMIColumn]));
                }
                set {
                    this[this.tablePERSONELI.FJALEKALIMIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMAILI {
                get {
                    return ((string)(this[this.tablePERSONELI.EMAILIColumn]));
                }
                set {
                    this[this.tablePERSONELI.EMAILIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ADRESA {
                get {
                    return ((string)(this[this.tablePERSONELI.ADRESAColumn]));
                }
                set {
                    this[this.tablePERSONELI.ADRESAColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FOTO {
                get {
                    return ((string)(this[this.tablePERSONELI.FOTOColumn]));
                }
                set {
                    this[this.tablePERSONELI.FOTOColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool AKTIV {
                get {
                    return ((bool)(this[this.tablePERSONELI.AKTIVColumn]));
                }
                set {
                    this[this.tablePERSONELI.AKTIVColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] FOTO_IMAZH {
                get {
                    try {
                        return ((byte[])(this[this.tablePERSONELI.FOTO_IMAZHColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'FOTO_IMAZH\' in table \'PERSONELI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePERSONELI.FOTO_IMAZHColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool DISPONUESHEM {
                get {
                    return ((bool)(this[this.tablePERSONELI.DISPONUESHEMColumn]));
                }
                set {
                    this[this.tablePERSONELI.DISPONUESHEMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid rowguid {
                get {
                    return ((System.Guid)(this[this.tablePERSONELI.rowguidColumn]));
                }
                set {
                    this[this.tablePERSONELI.rowguidColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFOTO_IMAZHNull() {
                return this.IsNull(this.tablePERSONELI.FOTO_IMAZHColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFOTO_IMAZHNull() {
                this[this.tablePERSONELI.FOTO_IMAZHColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class RECETA_ARTIKUJTRow : System.Data.DataRow {
            
            private RECETA_ARTIKUJTDataTable tableRECETA_ARTIKUJT;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RECETA_ARTIKUJTRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRECETA_ARTIKUJT = ((RECETA_ARTIKUJTDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_RECETA {
                get {
                    return ((int)(this[this.tableRECETA_ARTIKUJT.ID_RECETAColumn]));
                }
                set {
                    this[this.tableRECETA_ARTIKUJT.ID_RECETAColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_ARTIKULLI {
                get {
                    return ((int)(this[this.tableRECETA_ARTIKUJT.ID_ARTIKULLIColumn]));
                }
                set {
                    this[this.tableRECETA_ARTIKUJT.ID_ARTIKULLIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SASIA {
                get {
                    return ((double)(this[this.tableRECETA_ARTIKUJT.SASIAColumn]));
                }
                set {
                    this[this.tableRECETA_ARTIKUJT.SASIAColumn] = value;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class RECETATRow : System.Data.DataRow {
            
            private RECETATDataTable tableRECETAT;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RECETATRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRECETAT = ((RECETATDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_RECETA {
                get {
                    return ((int)(this[this.tableRECETAT.ID_RECETAColumn]));
                }
                set {
                    this[this.tableRECETAT.ID_RECETAColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMRI {
                get {
                    return ((string)(this[this.tableRECETAT.EMRIColumn]));
                }
                set {
                    this[this.tableRECETAT.EMRIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_KATEGORIARECETA {
                get {
                    return ((int)(this[this.tableRECETAT.ID_KATEGORIARECETAColumn]));
                }
                set {
                    this[this.tableRECETAT.ID_KATEGORIARECETAColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool DISPONUESHEM {
                get {
                    return ((bool)(this[this.tableRECETAT.DISPONUESHEMColumn]));
                }
                set {
                    this[this.tableRECETAT.DISPONUESHEMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool AKTIVE {
                get {
                    return ((bool)(this[this.tableRECETAT.AKTIVEColumn]));
                }
                set {
                    this[this.tableRECETAT.AKTIVEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid rowguid {
                get {
                    return ((System.Guid)(this[this.tableRECETAT.rowguidColumn]));
                }
                set {
                    this[this.tableRECETAT.rowguidColumn] = value;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class REZERVIMETRow : System.Data.DataRow {
            
            private REZERVIMETDataTable tableREZERVIMET;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal REZERVIMETRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableREZERVIMET = ((REZERVIMETDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_REZERVIMI {
                get {
                    return ((int)(this[this.tableREZERVIMET.ID_REZERVIMIColumn]));
                }
                set {
                    this[this.tableREZERVIMET.ID_REZERVIMIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMRI {
                get {
                    return ((string)(this[this.tableREZERVIMET.EMRIColumn]));
                }
                set {
                    this[this.tableREZERVIMET.EMRIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MBIEMRI {
                get {
                    return ((string)(this[this.tableREZERVIMET.MBIEMRIColumn]));
                }
                set {
                    this[this.tableREZERVIMET.MBIEMRIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DATA {
                get {
                    return ((System.DateTime)(this[this.tableREZERVIMET.DATAColumn]));
                }
                set {
                    this[this.tableREZERVIMET.DATAColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ORA_FILLIMI {
                get {
                    return ((System.DateTime)(this[this.tableREZERVIMET.ORA_FILLIMIColumn]));
                }
                set {
                    this[this.tableREZERVIMET.ORA_FILLIMIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ORA_MBARIMI {
                get {
                    return ((System.DateTime)(this[this.tableREZERVIMET.ORA_MBARIMIColumn]));
                }
                set {
                    this[this.tableREZERVIMET.ORA_MBARIMIColumn] = value;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class REZERVIMI_TAVOLINATRow : System.Data.DataRow {
            
            private REZERVIMI_TAVOLINATDataTable tableREZERVIMI_TAVOLINAT;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal REZERVIMI_TAVOLINATRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableREZERVIMI_TAVOLINAT = ((REZERVIMI_TAVOLINATDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_REZERVIMI {
                get {
                    return ((int)(this[this.tableREZERVIMI_TAVOLINAT.ID_REZERVIMIColumn]));
                }
                set {
                    this[this.tableREZERVIMI_TAVOLINAT.ID_REZERVIMIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_TAVOLINA {
                get {
                    return ((int)(this[this.tableREZERVIMI_TAVOLINAT.ID_TAVOLINAColumn]));
                }
                set {
                    this[this.tableREZERVIMI_TAVOLINAT.ID_TAVOLINAColumn] = value;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ROLETRow : System.Data.DataRow {
            
            private ROLETDataTable tableROLET;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ROLETRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableROLET = ((ROLETDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_ROLI {
                get {
                    return ((int)(this[this.tableROLET.ID_ROLIColumn]));
                }
                set {
                    this[this.tableROLET.ID_ROLIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ROLI {
                get {
                    return ((string)(this[this.tableROLET.ROLIColumn]));
                }
                set {
                    this[this.tableROLET.ROLIColumn] = value;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SHPENZIMETRow : System.Data.DataRow {
            
            private SHPENZIMETDataTable tableSHPENZIMET;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SHPENZIMETRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSHPENZIMET = ((SHPENZIMETDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_SHPENZIMI {
                get {
                    return ((int)(this[this.tableSHPENZIMET.ID_SHPENZIMIColumn]));
                }
                set {
                    this[this.tableSHPENZIMET.ID_SHPENZIMIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_KATEGORIASHPENZIMI {
                get {
                    return ((int)(this[this.tableSHPENZIMET.ID_KATEGORIASHPENZIMIColumn]));
                }
                set {
                    this[this.tableSHPENZIMET.ID_KATEGORIASHPENZIMIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KOMENT {
                get {
                    return ((string)(this[this.tableSHPENZIMET.KOMENTColumn]));
                }
                set {
                    this[this.tableSHPENZIMET.KOMENTColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SASIA {
                get {
                    return ((double)(this[this.tableSHPENZIMET.SASIAColumn]));
                }
                set {
                    this[this.tableSHPENZIMET.SASIAColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DATA {
                get {
                    return ((System.DateTime)(this[this.tableSHPENZIMET.DATAColumn]));
                }
                set {
                    this[this.tableSHPENZIMET.DATAColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_PERSONELI {
                get {
                    try {
                        return ((int)(this[this.tableSHPENZIMET.ID_PERSONELIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ID_PERSONELI\' in table \'SHPENZIMET\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSHPENZIMET.ID_PERSONELIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsID_PERSONELINull() {
                return this.IsNull(this.tableSHPENZIMET.ID_PERSONELIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetID_PERSONELINull() {
                this[this.tableSHPENZIMET.ID_PERSONELIColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SHPENZIMET_MUJORERow : System.Data.DataRow {
            
            private SHPENZIMET_MUJOREDataTable tableSHPENZIMET_MUJORE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SHPENZIMET_MUJORERow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSHPENZIMET_MUJORE = ((SHPENZIMET_MUJOREDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_SHPENZIMIMUJOR {
                get {
                    return ((int)(this[this.tableSHPENZIMET_MUJORE.ID_SHPENZIMIMUJORColumn]));
                }
                set {
                    this[this.tableSHPENZIMET_MUJORE.ID_SHPENZIMIMUJORColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_KATSHPENZIMIMUJOR {
                get {
                    return ((int)(this[this.tableSHPENZIMET_MUJORE.ID_KATSHPENZIMIMUJORColumn]));
                }
                set {
                    this[this.tableSHPENZIMET_MUJORE.ID_KATSHPENZIMIMUJORColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MUAJI {
                get {
                    return ((int)(this[this.tableSHPENZIMET_MUJORE.MUAJIColumn]));
                }
                set {
                    this[this.tableSHPENZIMET_MUJORE.MUAJIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int VITI {
                get {
                    return ((int)(this[this.tableSHPENZIMET_MUJORE.VITIColumn]));
                }
                set {
                    this[this.tableSHPENZIMET_MUJORE.VITIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double VLERA {
                get {
                    return ((double)(this[this.tableSHPENZIMET_MUJORE.VLERAColumn]));
                }
                set {
                    this[this.tableSHPENZIMET_MUJORE.VLERAColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KOMENTI {
                get {
                    return ((string)(this[this.tableSHPENZIMET_MUJORE.KOMENTIColumn]));
                }
                set {
                    this[this.tableSHPENZIMET_MUJORE.KOMENTIColumn] = value;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TAVOLINATRow : System.Data.DataRow {
            
            private TAVOLINATDataTable tableTAVOLINAT;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TAVOLINATRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTAVOLINAT = ((TAVOLINATDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_TAVOLINA {
                get {
                    return ((int)(this[this.tableTAVOLINAT.ID_TAVOLINAColumn]));
                }
                set {
                    this[this.tableTAVOLINAT.ID_TAVOLINAColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EMRI {
                get {
                    return ((int)(this[this.tableTAVOLINAT.EMRIColumn]));
                }
                set {
                    this[this.tableTAVOLINAT.EMRIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int KAPACITETI {
                get {
                    return ((int)(this[this.tableTAVOLINAT.KAPACITETIColumn]));
                }
                set {
                    this[this.tableTAVOLINAT.KAPACITETIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GJENDJA {
                get {
                    return ((string)(this[this.tableTAVOLINAT.GJENDJAColumn]));
                }
                set {
                    this[this.tableTAVOLINAT.GJENDJAColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_KATEGORIATAVOLINA {
                get {
                    return ((int)(this[this.tableTAVOLINAT.ID_KATEGORIATAVOLINAColumn]));
                }
                set {
                    this[this.tableTAVOLINAT.ID_KATEGORIATAVOLINAColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid rowguid {
                get {
                    return ((System.Guid)(this[this.tableTAVOLINAT.rowguidColumn]));
                }
                set {
                    this[this.tableTAVOLINAT.rowguidColumn] = value;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TURNETRow : System.Data.DataRow {
            
            private TURNETDataTable tableTURNET;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TURNETRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTURNET = ((TURNETDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_TURNI {
                get {
                    return ((int)(this[this.tableTURNET.ID_TURNIColumn]));
                }
                set {
                    this[this.tableTURNET.ID_TURNIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FILLIMI {
                get {
                    return ((System.DateTime)(this[this.tableTURNET.FILLIMIColumn]));
                }
                set {
                    this[this.tableTURNET.FILLIMIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MBARIMI {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableTURNET.MBARIMIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MBARIMI\' in table \'TURNET\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTURNET.MBARIMIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_PERSONELI {
                get {
                    return ((int)(this[this.tableTURNET.ID_PERSONELIColumn]));
                }
                set {
                    this[this.tableTURNET.ID_PERSONELIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool MBYLLUR {
                get {
                    return ((bool)(this[this.tableTURNET.MBYLLURColumn]));
                }
                set {
                    this[this.tableTURNET.MBYLLURColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMBARIMINull() {
                return this.IsNull(this.tableTURNET.MBARIMIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMBARIMINull() {
                this[this.tableTURNET.MBARIMIColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ARTIKUJTRowChangeEvent : System.EventArgs {
            
            private ARTIKUJTRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ARTIKUJTRowChangeEvent(ARTIKUJTRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ARTIKUJTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ARTIKUJT_FURNITORETRowChangeEvent : System.EventArgs {
            
            private ARTIKUJT_FURNITORETRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ARTIKUJT_FURNITORETRowChangeEvent(ARTIKUJT_FURNITORETRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ARTIKUJT_FURNITORETRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class BLERJETRowChangeEvent : System.EventArgs {
            
            private BLERJETRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BLERJETRowChangeEvent(BLERJETRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BLERJETRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class BLERJET_ARTIKUJTRowChangeEvent : System.EventArgs {
            
            private BLERJET_ARTIKUJTRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BLERJET_ARTIKUJTRowChangeEvent(BLERJET_ARTIKUJTRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BLERJET_ARTIKUJTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CMIMETRowChangeEvent : System.EventArgs {
            
            private CMIMETRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CMIMETRowChangeEvent(CMIMETRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CMIMETRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CMIMET_PERIUDHARowChangeEvent : System.EventArgs {
            
            private CMIMET_PERIUDHARow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CMIMET_PERIUDHARowChangeEvent(CMIMET_PERIUDHARow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CMIMET_PERIUDHARow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CMIMET_PERIUDHA_RECETATRowChangeEvent : System.EventArgs {
            
            private CMIMET_PERIUDHA_RECETATRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CMIMET_PERIUDHA_RECETATRowChangeEvent(CMIMET_PERIUDHA_RECETATRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CMIMET_PERIUDHA_RECETATRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CMIMET_RECETATRowChangeEvent : System.EventArgs {
            
            private CMIMET_RECETATRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CMIMET_RECETATRowChangeEvent(CMIMET_RECETATRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CMIMET_RECETATRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class FATURA_ARTIKUJTRowChangeEvent : System.EventArgs {
            
            private FATURA_ARTIKUJTRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FATURA_ARTIKUJTRowChangeEvent(FATURA_ARTIKUJTRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FATURA_ARTIKUJTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class FATURA_RECETATRowChangeEvent : System.EventArgs {
            
            private FATURA_RECETATRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FATURA_RECETATRowChangeEvent(FATURA_RECETATRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FATURA_RECETATRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class FATURATRowChangeEvent : System.EventArgs {
            
            private FATURATRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FATURATRowChangeEvent(FATURATRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FATURATRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class FAVORITERowChangeEvent : System.EventArgs {
            
            private FAVORITERow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FAVORITERowChangeEvent(FAVORITERow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FAVORITERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class FORMA_PAGESARowChangeEvent : System.EventArgs {
            
            private FORMA_PAGESARow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FORMA_PAGESARowChangeEvent(FORMA_PAGESARow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FORMA_PAGESARow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class FURNITORETRowChangeEvent : System.EventArgs {
            
            private FURNITORETRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FURNITORETRowChangeEvent(FURNITORETRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FURNITORETRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GRUPIRowChangeEvent : System.EventArgs {
            
            private GRUPIRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GRUPIRowChangeEvent(GRUPIRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GRUPIRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class KATEGORIA_SHPENZIMIMUJORRowChangeEvent : System.EventArgs {
            
            private KATEGORIA_SHPENZIMIMUJORRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KATEGORIA_SHPENZIMIMUJORRowChangeEvent(KATEGORIA_SHPENZIMIMUJORRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KATEGORIA_SHPENZIMIMUJORRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class KATEGORITE_ARTIKUJTRowChangeEvent : System.EventArgs {
            
            private KATEGORITE_ARTIKUJTRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KATEGORITE_ARTIKUJTRowChangeEvent(KATEGORITE_ARTIKUJTRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KATEGORITE_ARTIKUJTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class KATEGORITE_RECETATRowChangeEvent : System.EventArgs {
            
            private KATEGORITE_RECETATRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KATEGORITE_RECETATRowChangeEvent(KATEGORITE_RECETATRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KATEGORITE_RECETATRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class KATEGORITE_SHPENZIMETRowChangeEvent : System.EventArgs {
            
            private KATEGORITE_SHPENZIMETRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KATEGORITE_SHPENZIMETRowChangeEvent(KATEGORITE_SHPENZIMETRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KATEGORITE_SHPENZIMETRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class KATEGORITE_TAVOLINATRowChangeEvent : System.EventArgs {
            
            private KATEGORITE_TAVOLINATRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KATEGORITE_TAVOLINATRowChangeEvent(KATEGORITE_TAVOLINATRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KATEGORITE_TAVOLINATRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class KLIENTETRowChangeEvent : System.EventArgs {
            
            private KLIENTETRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KLIENTETRowChangeEvent(KLIENTETRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KLIENTETRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class KLIENTET_RESTORANTIRowChangeEvent : System.EventArgs {
            
            private KLIENTET_RESTORANTIRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KLIENTET_RESTORANTIRowChangeEvent(KLIENTET_RESTORANTIRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KLIENTET_RESTORANTIRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class NJESITERowChangeEvent : System.EventArgs {
            
            private NJESITERow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NJESITERowChangeEvent(NJESITERow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NJESITERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class OFERTATRowChangeEvent : System.EventArgs {
            
            private OFERTATRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OFERTATRowChangeEvent(OFERTATRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OFERTATRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class OFERTAT_BLERJERowChangeEvent : System.EventArgs {
            
            private OFERTAT_BLERJERow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OFERTAT_BLERJERowChangeEvent(OFERTAT_BLERJERow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OFERTAT_BLERJERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PERIUDHATRowChangeEvent : System.EventArgs {
            
            private PERIUDHATRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PERIUDHATRowChangeEvent(PERIUDHATRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PERIUDHATRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PERSONELIRowChangeEvent : System.EventArgs {
            
            private PERSONELIRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PERSONELIRowChangeEvent(PERSONELIRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PERSONELIRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class RECETA_ARTIKUJTRowChangeEvent : System.EventArgs {
            
            private RECETA_ARTIKUJTRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RECETA_ARTIKUJTRowChangeEvent(RECETA_ARTIKUJTRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RECETA_ARTIKUJTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class RECETATRowChangeEvent : System.EventArgs {
            
            private RECETATRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RECETATRowChangeEvent(RECETATRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RECETATRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class REZERVIMETRowChangeEvent : System.EventArgs {
            
            private REZERVIMETRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public REZERVIMETRowChangeEvent(REZERVIMETRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public REZERVIMETRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class REZERVIMI_TAVOLINATRowChangeEvent : System.EventArgs {
            
            private REZERVIMI_TAVOLINATRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public REZERVIMI_TAVOLINATRowChangeEvent(REZERVIMI_TAVOLINATRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public REZERVIMI_TAVOLINATRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ROLETRowChangeEvent : System.EventArgs {
            
            private ROLETRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ROLETRowChangeEvent(ROLETRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ROLETRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SHPENZIMETRowChangeEvent : System.EventArgs {
            
            private SHPENZIMETRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SHPENZIMETRowChangeEvent(SHPENZIMETRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SHPENZIMETRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SHPENZIMET_MUJORERowChangeEvent : System.EventArgs {
            
            private SHPENZIMET_MUJORERow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SHPENZIMET_MUJORERowChangeEvent(SHPENZIMET_MUJORERow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SHPENZIMET_MUJORERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TAVOLINATRowChangeEvent : System.EventArgs {
            
            private TAVOLINATRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TAVOLINATRowChangeEvent(TAVOLINATRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TAVOLINATRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TURNETRowChangeEvent : System.EventArgs {
            
            private TURNETRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TURNETRowChangeEvent(TURNETRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TURNETRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace ResManager.ResManagerDataSetTableAdapters {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ARTIKUJTTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ARTIKUJTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ARTIKUJT";
            tableMapping.ColumnMappings.Add("ID_ARTIKULLI", "ID_ARTIKULLI");
            tableMapping.ColumnMappings.Add("ID_KATEGORIAARTIKULLI", "ID_KATEGORIAARTIKULLI");
            tableMapping.ColumnMappings.Add("NUMRI_TOTAL", "NUMRI_TOTAL");
            tableMapping.ColumnMappings.Add("SASIA_SKORTE", "SASIA_SKORTE");
            tableMapping.ColumnMappings.Add("ARTIKULL_KONSUMI", "ARTIKULL_KONSUMI");
            tableMapping.ColumnMappings.Add("ID_NJESIA", "ID_NJESIA");
            tableMapping.ColumnMappings.Add("EMRI", "EMRI");
            tableMapping.ColumnMappings.Add("FOTO", "FOTO");
            tableMapping.ColumnMappings.Add("DISPONUESHEM", "DISPONUESHEM");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[ARTIKUJT] WHERE (([ID_ARTIKULLI] = @Original_ID_ARTIKULLI) AND ([ID_KATEGORIAARTIKULLI] = @Original_ID_KATEGORIAARTIKULLI) AND ([NUMRI_TOTAL] = @Original_NUMRI_TOTAL) AND ([SASIA_SKORTE] = @Original_SASIA_SKORTE) AND ([ARTIKULL_KONSUMI] = @Original_ARTIKULL_KONSUMI) AND ([ID_NJESIA] = @Original_ID_NJESIA) AND ([EMRI] = @Original_EMRI) AND ([DISPONUESHEM] = @Original_DISPONUESHEM))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_ARTIKULLI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_ARTIKULLI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_KATEGORIAARTIKULLI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_KATEGORIAARTIKULLI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NUMRI_TOTAL", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "NUMRI_TOTAL", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SASIA_SKORTE", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "SASIA_SKORTE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ARTIKULL_KONSUMI", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "ARTIKULL_KONSUMI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_NJESIA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_NJESIA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EMRI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMRI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DISPONUESHEM", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "DISPONUESHEM", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[ARTIKUJT] ([ID_KATEGORIAARTIKULLI], [NUMRI_TOTAL], [SASIA_SKORTE], [ARTIKULL_KONSUMI], [ID_NJESIA], [EMRI], [FOTO], [DISPONUESHEM]) VALUES (@ID_KATEGORIAARTIKULLI, @NUMRI_TOTAL, @SASIA_SKORTE, @ARTIKULL_KONSUMI, @ID_NJESIA, @EMRI, @FOTO, @DISPONUESHEM);
SELECT ID_ARTIKULLI, ID_KATEGORIAARTIKULLI, NUMRI_TOTAL, SASIA_SKORTE, ARTIKULL_KONSUMI, ID_NJESIA, EMRI, FOTO, DISPONUESHEM FROM ARTIKUJT WHERE (ID_ARTIKULLI = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_KATEGORIAARTIKULLI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_KATEGORIAARTIKULLI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NUMRI_TOTAL", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "NUMRI_TOTAL", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SASIA_SKORTE", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "SASIA_SKORTE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ARTIKULL_KONSUMI", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "ARTIKULL_KONSUMI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_NJESIA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_NJESIA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EMRI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMRI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@FOTO", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "FOTO", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DISPONUESHEM", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "DISPONUESHEM", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[ARTIKUJT] SET [ID_KATEGORIAARTIKULLI] = @ID_KATEGORIAARTIKULLI, [NUMRI_TOTAL] = @NUMRI_TOTAL, [SASIA_SKORTE] = @SASIA_SKORTE, [ARTIKULL_KONSUMI] = @ARTIKULL_KONSUMI, [ID_NJESIA] = @ID_NJESIA, [EMRI] = @EMRI, [FOTO] = @FOTO, [DISPONUESHEM] = @DISPONUESHEM WHERE (([ID_ARTIKULLI] = @Original_ID_ARTIKULLI) AND ([ID_KATEGORIAARTIKULLI] = @Original_ID_KATEGORIAARTIKULLI) AND ([NUMRI_TOTAL] = @Original_NUMRI_TOTAL) AND ([SASIA_SKORTE] = @Original_SASIA_SKORTE) AND ([ARTIKULL_KONSUMI] = @Original_ARTIKULL_KONSUMI) AND ([ID_NJESIA] = @Original_ID_NJESIA) AND ([EMRI] = @Original_EMRI) AND ([DISPONUESHEM] = @Original_DISPONUESHEM));
SELECT ID_ARTIKULLI, ID_KATEGORIAARTIKULLI, NUMRI_TOTAL, SASIA_SKORTE, ARTIKULL_KONSUMI, ID_NJESIA, EMRI, FOTO, DISPONUESHEM FROM ARTIKUJT WHERE (ID_ARTIKULLI = @ID_ARTIKULLI)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_KATEGORIAARTIKULLI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_KATEGORIAARTIKULLI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NUMRI_TOTAL", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "NUMRI_TOTAL", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SASIA_SKORTE", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "SASIA_SKORTE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ARTIKULL_KONSUMI", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "ARTIKULL_KONSUMI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_NJESIA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_NJESIA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EMRI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMRI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@FOTO", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "FOTO", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DISPONUESHEM", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "DISPONUESHEM", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_ARTIKULLI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_ARTIKULLI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_KATEGORIAARTIKULLI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_KATEGORIAARTIKULLI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NUMRI_TOTAL", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "NUMRI_TOTAL", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SASIA_SKORTE", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "SASIA_SKORTE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ARTIKULL_KONSUMI", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "ARTIKULL_KONSUMI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_NJESIA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_NJESIA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EMRI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMRI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DISPONUESHEM", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "DISPONUESHEM", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_ARTIKULLI", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "ID_ARTIKULLI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ResManager.Properties.Settings.Default.ResManagerConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_ARTIKULLI, ID_KATEGORIAARTIKULLI, NUMRI_TOTAL, SASIA_SKORTE, ARTIKULL_K" +
                "ONSUMI, ID_NJESIA, EMRI, FOTO, DISPONUESHEM FROM dbo.ARTIKUJT";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ResManagerDataSet.ARTIKUJTDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ResManagerDataSet.ARTIKUJTDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ResManagerDataSet.ARTIKUJTDataTable dataTable = new ResManagerDataSet.ARTIKUJTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet.ARTIKUJTDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet dataSet) {
            return this.Adapter.Update(dataSet, "ARTIKUJT");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_ARTIKULLI, int Original_ID_KATEGORIAARTIKULLI, double Original_NUMRI_TOTAL, double Original_SASIA_SKORTE, bool Original_ARTIKULL_KONSUMI, int Original_ID_NJESIA, string Original_EMRI, bool Original_DISPONUESHEM) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_ARTIKULLI));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ID_KATEGORIAARTIKULLI));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((double)(Original_NUMRI_TOTAL));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((double)(Original_SASIA_SKORTE));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((bool)(Original_ARTIKULL_KONSUMI));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_ID_NJESIA));
            if ((Original_EMRI == null)) {
                throw new System.ArgumentNullException("Original_EMRI");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_EMRI));
            }
            this.Adapter.DeleteCommand.Parameters[7].Value = ((bool)(Original_DISPONUESHEM));
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_KATEGORIAARTIKULLI, double NUMRI_TOTAL, double SASIA_SKORTE, bool ARTIKULL_KONSUMI, int ID_NJESIA, string EMRI, string FOTO, bool DISPONUESHEM) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_KATEGORIAARTIKULLI));
            this.Adapter.InsertCommand.Parameters[1].Value = ((double)(NUMRI_TOTAL));
            this.Adapter.InsertCommand.Parameters[2].Value = ((double)(SASIA_SKORTE));
            this.Adapter.InsertCommand.Parameters[3].Value = ((bool)(ARTIKULL_KONSUMI));
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(ID_NJESIA));
            if ((EMRI == null)) {
                throw new System.ArgumentNullException("EMRI");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(EMRI));
            }
            if ((FOTO == null)) {
                throw new System.ArgumentNullException("FOTO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(FOTO));
            }
            this.Adapter.InsertCommand.Parameters[7].Value = ((bool)(DISPONUESHEM));
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int ID_KATEGORIAARTIKULLI, 
                    double NUMRI_TOTAL, 
                    double SASIA_SKORTE, 
                    bool ARTIKULL_KONSUMI, 
                    int ID_NJESIA, 
                    string EMRI, 
                    string FOTO, 
                    bool DISPONUESHEM, 
                    int Original_ID_ARTIKULLI, 
                    int Original_ID_KATEGORIAARTIKULLI, 
                    double Original_NUMRI_TOTAL, 
                    double Original_SASIA_SKORTE, 
                    bool Original_ARTIKULL_KONSUMI, 
                    int Original_ID_NJESIA, 
                    string Original_EMRI, 
                    bool Original_DISPONUESHEM, 
                    int ID_ARTIKULLI) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_KATEGORIAARTIKULLI));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((double)(NUMRI_TOTAL));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((double)(SASIA_SKORTE));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((bool)(ARTIKULL_KONSUMI));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(ID_NJESIA));
            if ((EMRI == null)) {
                throw new System.ArgumentNullException("EMRI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(EMRI));
            }
            if ((FOTO == null)) {
                throw new System.ArgumentNullException("FOTO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(FOTO));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((bool)(DISPONUESHEM));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_ID_ARTIKULLI));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_ID_KATEGORIAARTIKULLI));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((double)(Original_NUMRI_TOTAL));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((double)(Original_SASIA_SKORTE));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((bool)(Original_ARTIKULL_KONSUMI));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Original_ID_NJESIA));
            if ((Original_EMRI == null)) {
                throw new System.ArgumentNullException("Original_EMRI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_EMRI));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((bool)(Original_DISPONUESHEM));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(ID_ARTIKULLI));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ARTIKUJT_FURNITORETTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ARTIKUJT_FURNITORETTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ARTIKUJT_FURNITORET";
            tableMapping.ColumnMappings.Add("ID_FURNITORI", "ID_FURNITORI");
            tableMapping.ColumnMappings.Add("ID_ARTIKULLI", "ID_ARTIKULLI");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[ARTIKUJT_FURNITORET] WHERE (([ID_FURNITORI] = @Original_ID_FUR" +
                "NITORI) AND ([ID_ARTIKULLI] = @Original_ID_ARTIKULLI))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_FURNITORI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_FURNITORI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_ARTIKULLI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_ARTIKULLI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[ARTIKUJT_FURNITORET] ([ID_FURNITORI], [ID_ARTIKULLI]) VALUES (" +
                "@ID_FURNITORI, @ID_ARTIKULLI);\r\nSELECT ID_FURNITORI, ID_ARTIKULLI FROM ARTIKUJT_" +
                "FURNITORET WHERE (ID_ARTIKULLI = @ID_ARTIKULLI) AND (ID_FURNITORI = @ID_FURNITOR" +
                "I)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_FURNITORI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_FURNITORI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_ARTIKULLI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_ARTIKULLI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[ARTIKUJT_FURNITORET] SET [ID_FURNITORI] = @ID_FURNITORI, [ID_ARTIKULLI] = @ID_ARTIKULLI WHERE (([ID_FURNITORI] = @Original_ID_FURNITORI) AND ([ID_ARTIKULLI] = @Original_ID_ARTIKULLI));
SELECT ID_FURNITORI, ID_ARTIKULLI FROM ARTIKUJT_FURNITORET WHERE (ID_ARTIKULLI = @ID_ARTIKULLI) AND (ID_FURNITORI = @ID_FURNITORI)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_FURNITORI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_FURNITORI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_ARTIKULLI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_ARTIKULLI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_FURNITORI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_FURNITORI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_ARTIKULLI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_ARTIKULLI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ResManager.Properties.Settings.Default.ResManagerConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_FURNITORI, ID_ARTIKULLI FROM dbo.ARTIKUJT_FURNITORET";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ResManagerDataSet.ARTIKUJT_FURNITORETDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ResManagerDataSet.ARTIKUJT_FURNITORETDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ResManagerDataSet.ARTIKUJT_FURNITORETDataTable dataTable = new ResManagerDataSet.ARTIKUJT_FURNITORETDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet.ARTIKUJT_FURNITORETDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet dataSet) {
            return this.Adapter.Update(dataSet, "ARTIKUJT_FURNITORET");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_FURNITORI, int Original_ID_ARTIKULLI) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_FURNITORI));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ID_ARTIKULLI));
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_FURNITORI, int ID_ARTIKULLI) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_FURNITORI));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ID_ARTIKULLI));
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_FURNITORI, int ID_ARTIKULLI, int Original_ID_FURNITORI, int Original_ID_ARTIKULLI) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_FURNITORI));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ID_ARTIKULLI));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_ID_FURNITORI));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_ID_ARTIKULLI));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class BLERJETTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public BLERJETTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "BLERJET";
            tableMapping.ColumnMappings.Add("ID_BLERJA", "ID_BLERJA");
            tableMapping.ColumnMappings.Add("ID_FURNITORI", "ID_FURNITORI");
            tableMapping.ColumnMappings.Add("DATA_BLERJE", "DATA_BLERJE");
            tableMapping.ColumnMappings.Add("NR_FATURE", "NR_FATURE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[BLERJET] WHERE (([ID_BLERJA] = @Original_ID_BLERJA) AND ((@IsNull_ID_FURNITORI = 1 AND [ID_FURNITORI] IS NULL) OR ([ID_FURNITORI] = @Original_ID_FURNITORI)) AND ([DATA_BLERJE] = @Original_DATA_BLERJE) AND ([NR_FATURE] = @Original_NR_FATURE))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_BLERJA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_BLERJA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ID_FURNITORI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_FURNITORI", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_FURNITORI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_FURNITORI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DATA_BLERJE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DATA_BLERJE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NR_FATURE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "NR_FATURE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[BLERJET] ([ID_FURNITORI], [DATA_BLERJE], [NR_FATURE]) VALUES (" +
                "@ID_FURNITORI, @DATA_BLERJE, @NR_FATURE);\r\nSELECT ID_BLERJA, ID_FURNITORI, DATA_" +
                "BLERJE, NR_FATURE FROM BLERJET WHERE (ID_BLERJA = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_FURNITORI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_FURNITORI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DATA_BLERJE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DATA_BLERJE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NR_FATURE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "NR_FATURE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[BLERJET] SET [ID_FURNITORI] = @ID_FURNITORI, [DATA_BLERJE] = @DATA_BLERJE, [NR_FATURE] = @NR_FATURE WHERE (([ID_BLERJA] = @Original_ID_BLERJA) AND ((@IsNull_ID_FURNITORI = 1 AND [ID_FURNITORI] IS NULL) OR ([ID_FURNITORI] = @Original_ID_FURNITORI)) AND ([DATA_BLERJE] = @Original_DATA_BLERJE) AND ([NR_FATURE] = @Original_NR_FATURE));
SELECT ID_BLERJA, ID_FURNITORI, DATA_BLERJE, NR_FATURE FROM BLERJET WHERE (ID_BLERJA = @ID_BLERJA)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_FURNITORI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_FURNITORI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DATA_BLERJE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DATA_BLERJE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NR_FATURE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "NR_FATURE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_BLERJA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_BLERJA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ID_FURNITORI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_FURNITORI", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_FURNITORI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_FURNITORI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DATA_BLERJE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DATA_BLERJE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NR_FATURE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "NR_FATURE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_BLERJA", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "ID_BLERJA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ResManager.Properties.Settings.Default.ResManagerConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_BLERJA, ID_FURNITORI, DATA_BLERJE, NR_FATURE FROM dbo.BLERJET";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ResManagerDataSet.BLERJETDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ResManagerDataSet.BLERJETDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ResManagerDataSet.BLERJETDataTable dataTable = new ResManagerDataSet.BLERJETDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet.BLERJETDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet dataSet) {
            return this.Adapter.Update(dataSet, "BLERJET");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_BLERJA, System.Nullable<int> Original_ID_FURNITORI, System.DateTime Original_DATA_BLERJE, string Original_NR_FATURE) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_BLERJA));
            if ((Original_ID_FURNITORI.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_ID_FURNITORI.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_DATA_BLERJE));
            if ((Original_NR_FATURE == null)) {
                throw new System.ArgumentNullException("Original_NR_FATURE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_NR_FATURE));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.Nullable<int> ID_FURNITORI, System.DateTime DATA_BLERJE, string NR_FATURE) {
            if ((ID_FURNITORI.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_FURNITORI.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(DATA_BLERJE));
            if ((NR_FATURE == null)) {
                throw new System.ArgumentNullException("NR_FATURE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(NR_FATURE));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.Nullable<int> ID_FURNITORI, System.DateTime DATA_BLERJE, string NR_FATURE, int Original_ID_BLERJA, System.Nullable<int> Original_ID_FURNITORI, System.DateTime Original_DATA_BLERJE, string Original_NR_FATURE, int ID_BLERJA) {
            if ((ID_FURNITORI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_FURNITORI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(DATA_BLERJE));
            if ((NR_FATURE == null)) {
                throw new System.ArgumentNullException("NR_FATURE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(NR_FATURE));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_ID_BLERJA));
            if ((Original_ID_FURNITORI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_ID_FURNITORI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(Original_DATA_BLERJE));
            if ((Original_NR_FATURE == null)) {
                throw new System.ArgumentNullException("Original_NR_FATURE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_NR_FATURE));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(ID_BLERJA));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class BLERJET_ARTIKUJTTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public BLERJET_ARTIKUJTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "BLERJET_ARTIKUJT";
            tableMapping.ColumnMappings.Add("ID_BLERJEARTIKUJ", "ID_BLERJEARTIKUJ");
            tableMapping.ColumnMappings.Add("ID_BLERJA", "ID_BLERJA");
            tableMapping.ColumnMappings.Add("ID_ARTIKULLI", "ID_ARTIKULLI");
            tableMapping.ColumnMappings.Add("SASIA", "SASIA");
            tableMapping.ColumnMappings.Add("DATA_SKADENCA", "DATA_SKADENCA");
            tableMapping.ColumnMappings.Add("CMIMI", "CMIMI");
            tableMapping.ColumnMappings.Add("KONSUMUAR", "KONSUMUAR");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[BLERJET_ARTIKUJT] WHERE (([ID_BLERJEARTIKUJ] = @Original_ID_BLERJEARTIKUJ) AND ([ID_BLERJA] = @Original_ID_BLERJA) AND ([ID_ARTIKULLI] = @Original_ID_ARTIKULLI) AND ([SASIA] = @Original_SASIA) AND ([DATA_SKADENCA] = @Original_DATA_SKADENCA) AND ([CMIMI] = @Original_CMIMI) AND ([KONSUMUAR] = @Original_KONSUMUAR))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_BLERJEARTIKUJ", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_BLERJEARTIKUJ", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_BLERJA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_BLERJA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_ARTIKULLI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_ARTIKULLI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SASIA", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "SASIA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DATA_SKADENCA", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DATA_SKADENCA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CMIMI", System.Data.SqlDbType.Real, 0, System.Data.ParameterDirection.Input, 0, 0, "CMIMI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_KONSUMUAR", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "KONSUMUAR", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[BLERJET_ARTIKUJT] ([ID_BLERJA], [ID_ARTIKULLI], [SASIA], [DATA_SKADENCA], [CMIMI], [KONSUMUAR]) VALUES (@ID_BLERJA, @ID_ARTIKULLI, @SASIA, @DATA_SKADENCA, @CMIMI, @KONSUMUAR);
SELECT ID_BLERJEARTIKUJ, ID_BLERJA, ID_ARTIKULLI, SASIA, DATA_SKADENCA, CMIMI, KONSUMUAR FROM BLERJET_ARTIKUJT WHERE (ID_BLERJEARTIKUJ = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_BLERJA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_BLERJA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_ARTIKULLI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_ARTIKULLI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SASIA", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "SASIA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DATA_SKADENCA", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DATA_SKADENCA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CMIMI", System.Data.SqlDbType.Real, 0, System.Data.ParameterDirection.Input, 0, 0, "CMIMI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@KONSUMUAR", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "KONSUMUAR", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[BLERJET_ARTIKUJT] SET [ID_BLERJA] = @ID_BLERJA, [ID_ARTIKULLI] = @ID_ARTIKULLI, [SASIA] = @SASIA, [DATA_SKADENCA] = @DATA_SKADENCA, [CMIMI] = @CMIMI, [KONSUMUAR] = @KONSUMUAR WHERE (([ID_BLERJEARTIKUJ] = @Original_ID_BLERJEARTIKUJ) AND ([ID_BLERJA] = @Original_ID_BLERJA) AND ([ID_ARTIKULLI] = @Original_ID_ARTIKULLI) AND ([SASIA] = @Original_SASIA) AND ([DATA_SKADENCA] = @Original_DATA_SKADENCA) AND ([CMIMI] = @Original_CMIMI) AND ([KONSUMUAR] = @Original_KONSUMUAR));
SELECT ID_BLERJEARTIKUJ, ID_BLERJA, ID_ARTIKULLI, SASIA, DATA_SKADENCA, CMIMI, KONSUMUAR FROM BLERJET_ARTIKUJT WHERE (ID_BLERJEARTIKUJ = @ID_BLERJEARTIKUJ)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_BLERJA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_BLERJA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_ARTIKULLI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_ARTIKULLI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SASIA", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "SASIA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DATA_SKADENCA", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DATA_SKADENCA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CMIMI", System.Data.SqlDbType.Real, 0, System.Data.ParameterDirection.Input, 0, 0, "CMIMI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@KONSUMUAR", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "KONSUMUAR", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_BLERJEARTIKUJ", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_BLERJEARTIKUJ", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_BLERJA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_BLERJA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_ARTIKULLI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_ARTIKULLI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SASIA", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "SASIA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DATA_SKADENCA", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DATA_SKADENCA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CMIMI", System.Data.SqlDbType.Real, 0, System.Data.ParameterDirection.Input, 0, 0, "CMIMI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_KONSUMUAR", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "KONSUMUAR", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_BLERJEARTIKUJ", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "ID_BLERJEARTIKUJ", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ResManager.Properties.Settings.Default.ResManagerConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_BLERJEARTIKUJ, ID_BLERJA, ID_ARTIKULLI, SASIA, DATA_SKADENCA, CMIMI, KO" +
                "NSUMUAR FROM dbo.BLERJET_ARTIKUJT";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ResManagerDataSet.BLERJET_ARTIKUJTDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ResManagerDataSet.BLERJET_ARTIKUJTDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ResManagerDataSet.BLERJET_ARTIKUJTDataTable dataTable = new ResManagerDataSet.BLERJET_ARTIKUJTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet.BLERJET_ARTIKUJTDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet dataSet) {
            return this.Adapter.Update(dataSet, "BLERJET_ARTIKUJT");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_BLERJEARTIKUJ, int Original_ID_BLERJA, int Original_ID_ARTIKULLI, double Original_SASIA, System.DateTime Original_DATA_SKADENCA, float Original_CMIMI, double Original_KONSUMUAR) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_BLERJEARTIKUJ));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ID_BLERJA));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_ID_ARTIKULLI));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((double)(Original_SASIA));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_DATA_SKADENCA));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((float)(Original_CMIMI));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((double)(Original_KONSUMUAR));
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_BLERJA, int ID_ARTIKULLI, double SASIA, System.DateTime DATA_SKADENCA, float CMIMI, double KONSUMUAR) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_BLERJA));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ID_ARTIKULLI));
            this.Adapter.InsertCommand.Parameters[2].Value = ((double)(SASIA));
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(DATA_SKADENCA));
            this.Adapter.InsertCommand.Parameters[4].Value = ((float)(CMIMI));
            this.Adapter.InsertCommand.Parameters[5].Value = ((double)(KONSUMUAR));
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_BLERJA, int ID_ARTIKULLI, double SASIA, System.DateTime DATA_SKADENCA, float CMIMI, double KONSUMUAR, int Original_ID_BLERJEARTIKUJ, int Original_ID_BLERJA, int Original_ID_ARTIKULLI, double Original_SASIA, System.DateTime Original_DATA_SKADENCA, float Original_CMIMI, double Original_KONSUMUAR, int ID_BLERJEARTIKUJ) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_BLERJA));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ID_ARTIKULLI));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((double)(SASIA));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(DATA_SKADENCA));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((float)(CMIMI));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(KONSUMUAR));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_ID_BLERJEARTIKUJ));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_ID_BLERJA));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_ID_ARTIKULLI));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((double)(Original_SASIA));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(Original_DATA_SKADENCA));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((float)(Original_CMIMI));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((double)(Original_KONSUMUAR));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(ID_BLERJEARTIKUJ));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CMIMETTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CMIMETTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CMIMET";
            tableMapping.ColumnMappings.Add("ID_CMIMI", "ID_CMIMI");
            tableMapping.ColumnMappings.Add("ID_CMIMIPERIUDHA", "ID_CMIMIPERIUDHA");
            tableMapping.ColumnMappings.Add("ORE_FILLLIMI", "ORE_FILLLIMI");
            tableMapping.ColumnMappings.Add("ORE_MBARIMI", "ORE_MBARIMI");
            tableMapping.ColumnMappings.Add("VLERA", "VLERA");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[CMIMET] WHERE (([ID_CMIMI] = @Original_ID_CMIMI) AND ([ID_CMIM" +
                "IPERIUDHA] = @Original_ID_CMIMIPERIUDHA) AND ([ORE_FILLLIMI] = @Original_ORE_FIL" +
                "LLIMI) AND ([ORE_MBARIMI] = @Original_ORE_MBARIMI) AND ([VLERA] = @Original_VLER" +
                "A))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_CMIMI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_CMIMI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_CMIMIPERIUDHA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_CMIMIPERIUDHA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ORE_FILLLIMI", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "ORE_FILLLIMI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ORE_MBARIMI", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "ORE_MBARIMI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_VLERA", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "VLERA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[CMIMET] ([ID_CMIMIPERIUDHA], [ORE_FILLLIMI], [ORE_MBARIMI], [VLERA]) VALUES (@ID_CMIMIPERIUDHA, @ORE_FILLLIMI, @ORE_MBARIMI, @VLERA);
SELECT ID_CMIMI, ID_CMIMIPERIUDHA, ORE_FILLLIMI, ORE_MBARIMI, VLERA FROM CMIMET WHERE (ID_CMIMI = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_CMIMIPERIUDHA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_CMIMIPERIUDHA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ORE_FILLLIMI", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "ORE_FILLLIMI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ORE_MBARIMI", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "ORE_MBARIMI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@VLERA", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "VLERA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[CMIMET] SET [ID_CMIMIPERIUDHA] = @ID_CMIMIPERIUDHA, [ORE_FILLLIMI] = @ORE_FILLLIMI, [ORE_MBARIMI] = @ORE_MBARIMI, [VLERA] = @VLERA WHERE (([ID_CMIMI] = @Original_ID_CMIMI) AND ([ID_CMIMIPERIUDHA] = @Original_ID_CMIMIPERIUDHA) AND ([ORE_FILLLIMI] = @Original_ORE_FILLLIMI) AND ([ORE_MBARIMI] = @Original_ORE_MBARIMI) AND ([VLERA] = @Original_VLERA));
SELECT ID_CMIMI, ID_CMIMIPERIUDHA, ORE_FILLLIMI, ORE_MBARIMI, VLERA FROM CMIMET WHERE (ID_CMIMI = @ID_CMIMI)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_CMIMIPERIUDHA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_CMIMIPERIUDHA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ORE_FILLLIMI", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "ORE_FILLLIMI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ORE_MBARIMI", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "ORE_MBARIMI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@VLERA", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "VLERA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_CMIMI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_CMIMI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_CMIMIPERIUDHA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_CMIMIPERIUDHA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ORE_FILLLIMI", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "ORE_FILLLIMI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ORE_MBARIMI", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "ORE_MBARIMI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_VLERA", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "VLERA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_CMIMI", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "ID_CMIMI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ResManager.Properties.Settings.Default.ResManagerConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_CMIMI, ID_CMIMIPERIUDHA, ORE_FILLLIMI, ORE_MBARIMI, VLERA FROM dbo.CMIM" +
                "ET";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ResManagerDataSet.CMIMETDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ResManagerDataSet.CMIMETDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ResManagerDataSet.CMIMETDataTable dataTable = new ResManagerDataSet.CMIMETDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet.CMIMETDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet dataSet) {
            return this.Adapter.Update(dataSet, "CMIMET");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_CMIMI, int Original_ID_CMIMIPERIUDHA, System.DateTime Original_ORE_FILLLIMI, System.DateTime Original_ORE_MBARIMI, double Original_VLERA) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_CMIMI));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ID_CMIMIPERIUDHA));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_ORE_FILLLIMI));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_ORE_MBARIMI));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((double)(Original_VLERA));
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_CMIMIPERIUDHA, System.DateTime ORE_FILLLIMI, System.DateTime ORE_MBARIMI, double VLERA) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_CMIMIPERIUDHA));
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(ORE_FILLLIMI));
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(ORE_MBARIMI));
            this.Adapter.InsertCommand.Parameters[3].Value = ((double)(VLERA));
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_CMIMIPERIUDHA, System.DateTime ORE_FILLLIMI, System.DateTime ORE_MBARIMI, double VLERA, int Original_ID_CMIMI, int Original_ID_CMIMIPERIUDHA, System.DateTime Original_ORE_FILLLIMI, System.DateTime Original_ORE_MBARIMI, double Original_VLERA, int ID_CMIMI) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_CMIMIPERIUDHA));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(ORE_FILLLIMI));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(ORE_MBARIMI));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((double)(VLERA));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_ID_CMIMI));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_ID_CMIMIPERIUDHA));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(Original_ORE_FILLLIMI));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(Original_ORE_MBARIMI));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((double)(Original_VLERA));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(ID_CMIMI));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CMIMET_PERIUDHATableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CMIMET_PERIUDHATableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CMIMET_PERIUDHA";
            tableMapping.ColumnMappings.Add("ID_CMIMIPERIUDHA", "ID_CMIMIPERIUDHA");
            tableMapping.ColumnMappings.Add("ID_ARTIKULLI", "ID_ARTIKULLI");
            tableMapping.ColumnMappings.Add("DATE_FILLIMI", "DATE_FILLIMI");
            tableMapping.ColumnMappings.Add("DATE_MBARIMI", "DATE_MBARIMI");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[CMIMET_PERIUDHA] WHERE (([ID_CMIMIPERIUDHA] = @Original_ID_CMIMIPERIUDHA) AND ([ID_ARTIKULLI] = @Original_ID_ARTIKULLI) AND ([DATE_FILLIMI] = @Original_DATE_FILLIMI) AND ((@IsNull_DATE_MBARIMI = 1 AND [DATE_MBARIMI] IS NULL) OR ([DATE_MBARIMI] = @Original_DATE_MBARIMI)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_CMIMIPERIUDHA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_CMIMIPERIUDHA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_ARTIKULLI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_ARTIKULLI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DATE_FILLIMI", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DATE_FILLIMI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DATE_MBARIMI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DATE_MBARIMI", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DATE_MBARIMI", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DATE_MBARIMI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[CMIMET_PERIUDHA] ([ID_ARTIKULLI], [DATE_FILLIMI], [DATE_MBARIMI]) VALUES (@ID_ARTIKULLI, @DATE_FILLIMI, @DATE_MBARIMI);
SELECT ID_CMIMIPERIUDHA, ID_ARTIKULLI, DATE_FILLIMI, DATE_MBARIMI FROM CMIMET_PERIUDHA WHERE (ID_CMIMIPERIUDHA = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_ARTIKULLI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_ARTIKULLI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DATE_FILLIMI", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DATE_FILLIMI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DATE_MBARIMI", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DATE_MBARIMI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[CMIMET_PERIUDHA] SET [ID_ARTIKULLI] = @ID_ARTIKULLI, [DATE_FILLIMI] = @DATE_FILLIMI, [DATE_MBARIMI] = @DATE_MBARIMI WHERE (([ID_CMIMIPERIUDHA] = @Original_ID_CMIMIPERIUDHA) AND ([ID_ARTIKULLI] = @Original_ID_ARTIKULLI) AND ([DATE_FILLIMI] = @Original_DATE_FILLIMI) AND ((@IsNull_DATE_MBARIMI = 1 AND [DATE_MBARIMI] IS NULL) OR ([DATE_MBARIMI] = @Original_DATE_MBARIMI)));
SELECT ID_CMIMIPERIUDHA, ID_ARTIKULLI, DATE_FILLIMI, DATE_MBARIMI FROM CMIMET_PERIUDHA WHERE (ID_CMIMIPERIUDHA = @ID_CMIMIPERIUDHA)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_ARTIKULLI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_ARTIKULLI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DATE_FILLIMI", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DATE_FILLIMI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DATE_MBARIMI", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DATE_MBARIMI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_CMIMIPERIUDHA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_CMIMIPERIUDHA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_ARTIKULLI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_ARTIKULLI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DATE_FILLIMI", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DATE_FILLIMI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DATE_MBARIMI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DATE_MBARIMI", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DATE_MBARIMI", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DATE_MBARIMI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_CMIMIPERIUDHA", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "ID_CMIMIPERIUDHA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ResManager.Properties.Settings.Default.ResManagerConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_CMIMIPERIUDHA, ID_ARTIKULLI, DATE_FILLIMI, DATE_MBARIMI FROM dbo.CMIMET" +
                "_PERIUDHA";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ResManagerDataSet.CMIMET_PERIUDHADataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ResManagerDataSet.CMIMET_PERIUDHADataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ResManagerDataSet.CMIMET_PERIUDHADataTable dataTable = new ResManagerDataSet.CMIMET_PERIUDHADataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet.CMIMET_PERIUDHADataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet dataSet) {
            return this.Adapter.Update(dataSet, "CMIMET_PERIUDHA");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_CMIMIPERIUDHA, int Original_ID_ARTIKULLI, System.DateTime Original_DATE_FILLIMI, System.Nullable<System.DateTime> Original_DATE_MBARIMI) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_CMIMIPERIUDHA));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ID_ARTIKULLI));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_DATE_FILLIMI));
            if ((Original_DATE_MBARIMI.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_DATE_MBARIMI.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_ARTIKULLI, System.DateTime DATE_FILLIMI, System.Nullable<System.DateTime> DATE_MBARIMI) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_ARTIKULLI));
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(DATE_FILLIMI));
            if ((DATE_MBARIMI.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(DATE_MBARIMI.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_ARTIKULLI, System.DateTime DATE_FILLIMI, System.Nullable<System.DateTime> DATE_MBARIMI, int Original_ID_CMIMIPERIUDHA, int Original_ID_ARTIKULLI, System.DateTime Original_DATE_FILLIMI, System.Nullable<System.DateTime> Original_DATE_MBARIMI, int ID_CMIMIPERIUDHA) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_ARTIKULLI));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(DATE_FILLIMI));
            if ((DATE_MBARIMI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(DATE_MBARIMI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_ID_CMIMIPERIUDHA));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_ID_ARTIKULLI));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(Original_DATE_FILLIMI));
            if ((Original_DATE_MBARIMI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(Original_DATE_MBARIMI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(ID_CMIMIPERIUDHA));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CMIMET_PERIUDHA_RECETATTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CMIMET_PERIUDHA_RECETATTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CMIMET_PERIUDHA_RECETAT";
            tableMapping.ColumnMappings.Add("ID_CMIMIPERIUDHA", "ID_CMIMIPERIUDHA");
            tableMapping.ColumnMappings.Add("ID_RECETA", "ID_RECETA");
            tableMapping.ColumnMappings.Add("DATE_FILLIMI", "DATE_FILLIMI");
            tableMapping.ColumnMappings.Add("DATE_MBARIMI", "DATE_MBARIMI");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[CMIMET_PERIUDHA_RECETAT] WHERE (([ID_CMIMIPERIUDHA] = @Original_ID_CMIMIPERIUDHA) AND ([ID_RECETA] = @Original_ID_RECETA) AND ([DATE_FILLIMI] = @Original_DATE_FILLIMI) AND ((@IsNull_DATE_MBARIMI = 1 AND [DATE_MBARIMI] IS NULL) OR ([DATE_MBARIMI] = @Original_DATE_MBARIMI)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_CMIMIPERIUDHA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_CMIMIPERIUDHA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_RECETA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_RECETA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DATE_FILLIMI", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DATE_FILLIMI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DATE_MBARIMI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DATE_MBARIMI", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DATE_MBARIMI", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DATE_MBARIMI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[CMIMET_PERIUDHA_RECETAT] ([ID_RECETA], [DATE_FILLIMI], [DATE_MBARIMI]) VALUES (@ID_RECETA, @DATE_FILLIMI, @DATE_MBARIMI);
SELECT ID_CMIMIPERIUDHA, ID_RECETA, DATE_FILLIMI, DATE_MBARIMI FROM CMIMET_PERIUDHA_RECETAT WHERE (ID_CMIMIPERIUDHA = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_RECETA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_RECETA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DATE_FILLIMI", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DATE_FILLIMI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DATE_MBARIMI", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DATE_MBARIMI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[CMIMET_PERIUDHA_RECETAT] SET [ID_RECETA] = @ID_RECETA, [DATE_FILLIMI] = @DATE_FILLIMI, [DATE_MBARIMI] = @DATE_MBARIMI WHERE (([ID_CMIMIPERIUDHA] = @Original_ID_CMIMIPERIUDHA) AND ([ID_RECETA] = @Original_ID_RECETA) AND ([DATE_FILLIMI] = @Original_DATE_FILLIMI) AND ((@IsNull_DATE_MBARIMI = 1 AND [DATE_MBARIMI] IS NULL) OR ([DATE_MBARIMI] = @Original_DATE_MBARIMI)));
SELECT ID_CMIMIPERIUDHA, ID_RECETA, DATE_FILLIMI, DATE_MBARIMI FROM CMIMET_PERIUDHA_RECETAT WHERE (ID_CMIMIPERIUDHA = @ID_CMIMIPERIUDHA)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_RECETA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_RECETA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DATE_FILLIMI", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DATE_FILLIMI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DATE_MBARIMI", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DATE_MBARIMI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_CMIMIPERIUDHA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_CMIMIPERIUDHA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_RECETA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_RECETA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DATE_FILLIMI", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DATE_FILLIMI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DATE_MBARIMI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DATE_MBARIMI", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DATE_MBARIMI", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DATE_MBARIMI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_CMIMIPERIUDHA", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "ID_CMIMIPERIUDHA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ResManager.Properties.Settings.Default.ResManagerConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_CMIMIPERIUDHA, ID_RECETA, DATE_FILLIMI, DATE_MBARIMI FROM dbo.CMIMET_PE" +
                "RIUDHA_RECETAT";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ResManagerDataSet.CMIMET_PERIUDHA_RECETATDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ResManagerDataSet.CMIMET_PERIUDHA_RECETATDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ResManagerDataSet.CMIMET_PERIUDHA_RECETATDataTable dataTable = new ResManagerDataSet.CMIMET_PERIUDHA_RECETATDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet.CMIMET_PERIUDHA_RECETATDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet dataSet) {
            return this.Adapter.Update(dataSet, "CMIMET_PERIUDHA_RECETAT");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_CMIMIPERIUDHA, int Original_ID_RECETA, System.DateTime Original_DATE_FILLIMI, System.Nullable<System.DateTime> Original_DATE_MBARIMI) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_CMIMIPERIUDHA));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ID_RECETA));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_DATE_FILLIMI));
            if ((Original_DATE_MBARIMI.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_DATE_MBARIMI.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_RECETA, System.DateTime DATE_FILLIMI, System.Nullable<System.DateTime> DATE_MBARIMI) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_RECETA));
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(DATE_FILLIMI));
            if ((DATE_MBARIMI.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(DATE_MBARIMI.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_RECETA, System.DateTime DATE_FILLIMI, System.Nullable<System.DateTime> DATE_MBARIMI, int Original_ID_CMIMIPERIUDHA, int Original_ID_RECETA, System.DateTime Original_DATE_FILLIMI, System.Nullable<System.DateTime> Original_DATE_MBARIMI, int ID_CMIMIPERIUDHA) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_RECETA));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(DATE_FILLIMI));
            if ((DATE_MBARIMI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(DATE_MBARIMI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_ID_CMIMIPERIUDHA));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_ID_RECETA));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(Original_DATE_FILLIMI));
            if ((Original_DATE_MBARIMI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(Original_DATE_MBARIMI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(ID_CMIMIPERIUDHA));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CMIMET_RECETATTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CMIMET_RECETATTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CMIMET_RECETAT";
            tableMapping.ColumnMappings.Add("ID_CMIMI", "ID_CMIMI");
            tableMapping.ColumnMappings.Add("ID_CMIMIPERIUDHA", "ID_CMIMIPERIUDHA");
            tableMapping.ColumnMappings.Add("ORE_FILLIMI", "ORE_FILLIMI");
            tableMapping.ColumnMappings.Add("ORE_MBARIMI", "ORE_MBARIMI");
            tableMapping.ColumnMappings.Add("VLERA", "VLERA");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[CMIMET_RECETAT] WHERE (([ID_CMIMI] = @Original_ID_CMIMI) AND (" +
                "[ID_CMIMIPERIUDHA] = @Original_ID_CMIMIPERIUDHA) AND ([ORE_FILLIMI] = @Original_" +
                "ORE_FILLIMI) AND ([ORE_MBARIMI] = @Original_ORE_MBARIMI) AND ([VLERA] = @Origina" +
                "l_VLERA))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_CMIMI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_CMIMI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_CMIMIPERIUDHA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_CMIMIPERIUDHA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ORE_FILLIMI", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "ORE_FILLIMI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ORE_MBARIMI", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "ORE_MBARIMI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_VLERA", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "VLERA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[CMIMET_RECETAT] ([ID_CMIMIPERIUDHA], [ORE_FILLIMI], [ORE_MBARIMI], [VLERA]) VALUES (@ID_CMIMIPERIUDHA, @ORE_FILLIMI, @ORE_MBARIMI, @VLERA);
SELECT ID_CMIMI, ID_CMIMIPERIUDHA, ORE_FILLIMI, ORE_MBARIMI, VLERA FROM CMIMET_RECETAT WHERE (ID_CMIMI = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_CMIMIPERIUDHA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_CMIMIPERIUDHA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ORE_FILLIMI", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "ORE_FILLIMI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ORE_MBARIMI", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "ORE_MBARIMI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@VLERA", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "VLERA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[CMIMET_RECETAT] SET [ID_CMIMIPERIUDHA] = @ID_CMIMIPERIUDHA, [ORE_FILLIMI] = @ORE_FILLIMI, [ORE_MBARIMI] = @ORE_MBARIMI, [VLERA] = @VLERA WHERE (([ID_CMIMI] = @Original_ID_CMIMI) AND ([ID_CMIMIPERIUDHA] = @Original_ID_CMIMIPERIUDHA) AND ([ORE_FILLIMI] = @Original_ORE_FILLIMI) AND ([ORE_MBARIMI] = @Original_ORE_MBARIMI) AND ([VLERA] = @Original_VLERA));
SELECT ID_CMIMI, ID_CMIMIPERIUDHA, ORE_FILLIMI, ORE_MBARIMI, VLERA FROM CMIMET_RECETAT WHERE (ID_CMIMI = @ID_CMIMI)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_CMIMIPERIUDHA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_CMIMIPERIUDHA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ORE_FILLIMI", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "ORE_FILLIMI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ORE_MBARIMI", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "ORE_MBARIMI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@VLERA", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "VLERA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_CMIMI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_CMIMI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_CMIMIPERIUDHA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_CMIMIPERIUDHA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ORE_FILLIMI", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "ORE_FILLIMI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ORE_MBARIMI", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "ORE_MBARIMI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_VLERA", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "VLERA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_CMIMI", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "ID_CMIMI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ResManager.Properties.Settings.Default.ResManagerConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_CMIMI, ID_CMIMIPERIUDHA, ORE_FILLIMI, ORE_MBARIMI, VLERA FROM dbo.CMIME" +
                "T_RECETAT";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ResManagerDataSet.CMIMET_RECETATDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ResManagerDataSet.CMIMET_RECETATDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ResManagerDataSet.CMIMET_RECETATDataTable dataTable = new ResManagerDataSet.CMIMET_RECETATDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet.CMIMET_RECETATDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet dataSet) {
            return this.Adapter.Update(dataSet, "CMIMET_RECETAT");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_CMIMI, int Original_ID_CMIMIPERIUDHA, System.DateTime Original_ORE_FILLIMI, System.DateTime Original_ORE_MBARIMI, double Original_VLERA) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_CMIMI));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ID_CMIMIPERIUDHA));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_ORE_FILLIMI));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_ORE_MBARIMI));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((double)(Original_VLERA));
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_CMIMIPERIUDHA, System.DateTime ORE_FILLIMI, System.DateTime ORE_MBARIMI, double VLERA) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_CMIMIPERIUDHA));
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(ORE_FILLIMI));
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(ORE_MBARIMI));
            this.Adapter.InsertCommand.Parameters[3].Value = ((double)(VLERA));
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_CMIMIPERIUDHA, System.DateTime ORE_FILLIMI, System.DateTime ORE_MBARIMI, double VLERA, int Original_ID_CMIMI, int Original_ID_CMIMIPERIUDHA, System.DateTime Original_ORE_FILLIMI, System.DateTime Original_ORE_MBARIMI, double Original_VLERA, int ID_CMIMI) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_CMIMIPERIUDHA));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(ORE_FILLIMI));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(ORE_MBARIMI));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((double)(VLERA));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_ID_CMIMI));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_ID_CMIMIPERIUDHA));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(Original_ORE_FILLIMI));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(Original_ORE_MBARIMI));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((double)(Original_VLERA));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(ID_CMIMI));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class FATURA_ARTIKUJTTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public FATURA_ARTIKUJTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "FATURA_ARTIKUJT";
            tableMapping.ColumnMappings.Add("ID_FATURA", "ID_FATURA");
            tableMapping.ColumnMappings.Add("ID_ARTIKULLI", "ID_ARTIKULLI");
            tableMapping.ColumnMappings.Add("SASIA", "SASIA");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[FATURA_ARTIKUJT] WHERE (([ID_FATURA] = @Original_ID_FATURA) AN" +
                "D ([ID_ARTIKULLI] = @Original_ID_ARTIKULLI) AND ([SASIA] = @Original_SASIA))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_FATURA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_FATURA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_ARTIKULLI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_ARTIKULLI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SASIA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SASIA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[FATURA_ARTIKUJT] ([ID_FATURA], [ID_ARTIKULLI], [SASIA]) VALUES" +
                " (@ID_FATURA, @ID_ARTIKULLI, @SASIA);\r\nSELECT ID_FATURA, ID_ARTIKULLI, SASIA FRO" +
                "M FATURA_ARTIKUJT WHERE (ID_ARTIKULLI = @ID_ARTIKULLI) AND (ID_FATURA = @ID_FATU" +
                "RA)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_FATURA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_FATURA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_ARTIKULLI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_ARTIKULLI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SASIA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SASIA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[FATURA_ARTIKUJT] SET [ID_FATURA] = @ID_FATURA, [ID_ARTIKULLI] = @ID_ARTIKULLI, [SASIA] = @SASIA WHERE (([ID_FATURA] = @Original_ID_FATURA) AND ([ID_ARTIKULLI] = @Original_ID_ARTIKULLI) AND ([SASIA] = @Original_SASIA));
SELECT ID_FATURA, ID_ARTIKULLI, SASIA FROM FATURA_ARTIKUJT WHERE (ID_ARTIKULLI = @ID_ARTIKULLI) AND (ID_FATURA = @ID_FATURA)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_FATURA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_FATURA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_ARTIKULLI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_ARTIKULLI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SASIA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SASIA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_FATURA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_FATURA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_ARTIKULLI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_ARTIKULLI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SASIA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SASIA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ResManager.Properties.Settings.Default.ResManagerConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_FATURA, ID_ARTIKULLI, SASIA FROM dbo.FATURA_ARTIKUJT";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ResManagerDataSet.FATURA_ARTIKUJTDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ResManagerDataSet.FATURA_ARTIKUJTDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ResManagerDataSet.FATURA_ARTIKUJTDataTable dataTable = new ResManagerDataSet.FATURA_ARTIKUJTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet.FATURA_ARTIKUJTDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet dataSet) {
            return this.Adapter.Update(dataSet, "FATURA_ARTIKUJT");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_FATURA, int Original_ID_ARTIKULLI, int Original_SASIA) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_FATURA));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ID_ARTIKULLI));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_SASIA));
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_FATURA, int ID_ARTIKULLI, int SASIA) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_FATURA));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ID_ARTIKULLI));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(SASIA));
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_FATURA, int ID_ARTIKULLI, int SASIA, int Original_ID_FATURA, int Original_ID_ARTIKULLI, int Original_SASIA) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_FATURA));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ID_ARTIKULLI));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(SASIA));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_ID_FATURA));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_ID_ARTIKULLI));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_SASIA));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class FATURA_RECETATTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public FATURA_RECETATTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "FATURA_RECETAT";
            tableMapping.ColumnMappings.Add("ID_FATURA", "ID_FATURA");
            tableMapping.ColumnMappings.Add("ID_RECETA", "ID_RECETA");
            tableMapping.ColumnMappings.Add("SASIA", "SASIA");
            tableMapping.ColumnMappings.Add("rowguid", "rowguid");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[FATURA_RECETAT] WHERE (([ID_FATURA] = @Original_ID_FATURA) AND" +
                " ([ID_RECETA] = @Original_ID_RECETA) AND ([SASIA] = @Original_SASIA) AND ([rowgu" +
                "id] = @Original_rowguid))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_FATURA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_FATURA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_RECETA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_RECETA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SASIA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SASIA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_rowguid", System.Data.SqlDbType.UniqueIdentifier, 0, System.Data.ParameterDirection.Input, 0, 0, "rowguid", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[FATURA_RECETAT] ([ID_FATURA], [ID_RECETA], [SASIA], [rowguid]) VALUES (@ID_FATURA, @ID_RECETA, @SASIA, @rowguid);
SELECT ID_FATURA, ID_RECETA, SASIA, rowguid FROM FATURA_RECETAT WHERE (ID_FATURA = @ID_FATURA) AND (ID_RECETA = @ID_RECETA)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_FATURA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_FATURA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_RECETA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_RECETA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SASIA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SASIA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@rowguid", System.Data.SqlDbType.UniqueIdentifier, 0, System.Data.ParameterDirection.Input, 0, 0, "rowguid", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[FATURA_RECETAT] SET [ID_FATURA] = @ID_FATURA, [ID_RECETA] = @ID_RECETA, [SASIA] = @SASIA, [rowguid] = @rowguid WHERE (([ID_FATURA] = @Original_ID_FATURA) AND ([ID_RECETA] = @Original_ID_RECETA) AND ([SASIA] = @Original_SASIA) AND ([rowguid] = @Original_rowguid));
SELECT ID_FATURA, ID_RECETA, SASIA, rowguid FROM FATURA_RECETAT WHERE (ID_FATURA = @ID_FATURA) AND (ID_RECETA = @ID_RECETA)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_FATURA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_FATURA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_RECETA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_RECETA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SASIA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SASIA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@rowguid", System.Data.SqlDbType.UniqueIdentifier, 0, System.Data.ParameterDirection.Input, 0, 0, "rowguid", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_FATURA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_FATURA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_RECETA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_RECETA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SASIA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SASIA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_rowguid", System.Data.SqlDbType.UniqueIdentifier, 0, System.Data.ParameterDirection.Input, 0, 0, "rowguid", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ResManager.Properties.Settings.Default.ResManagerConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_FATURA, ID_RECETA, SASIA, rowguid FROM dbo.FATURA_RECETAT";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ResManagerDataSet.FATURA_RECETATDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ResManagerDataSet.FATURA_RECETATDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ResManagerDataSet.FATURA_RECETATDataTable dataTable = new ResManagerDataSet.FATURA_RECETATDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet.FATURA_RECETATDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet dataSet) {
            return this.Adapter.Update(dataSet, "FATURA_RECETAT");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_FATURA, int Original_ID_RECETA, int Original_SASIA, System.Guid Original_rowguid) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_FATURA));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ID_RECETA));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_SASIA));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((System.Guid)(Original_rowguid));
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_FATURA, int ID_RECETA, int SASIA, System.Guid rowguid) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_FATURA));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ID_RECETA));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(SASIA));
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.Guid)(rowguid));
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_FATURA, int ID_RECETA, int SASIA, System.Guid rowguid, int Original_ID_FATURA, int Original_ID_RECETA, int Original_SASIA, System.Guid Original_rowguid) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_FATURA));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ID_RECETA));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(SASIA));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.Guid)(rowguid));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_ID_FATURA));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_ID_RECETA));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_SASIA));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((System.Guid)(Original_rowguid));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class FATURATTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public FATURATTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "FATURAT";
            tableMapping.ColumnMappings.Add("ID_FATURA", "ID_FATURA");
            tableMapping.ColumnMappings.Add("ID_PERSONELI", "ID_PERSONELI");
            tableMapping.ColumnMappings.Add("ID_TAVOLINA", "ID_TAVOLINA");
            tableMapping.ColumnMappings.Add("TOTALI", "TOTALI");
            tableMapping.ColumnMappings.Add("DATA_ORA", "DATA_ORA");
            tableMapping.ColumnMappings.Add("SKONTO", "SKONTO");
            tableMapping.ColumnMappings.Add("ID_FORMAPAGESA", "ID_FORMAPAGESA");
            tableMapping.ColumnMappings.Add("NR_FATURE", "NR_FATURE");
            tableMapping.ColumnMappings.Add("ID_KLIENTI", "ID_KLIENTI");
            tableMapping.ColumnMappings.Add("KOSTO", "KOSTO");
            tableMapping.ColumnMappings.Add("ANULLUAR", "ANULLUAR");
            tableMapping.ColumnMappings.Add("rowguid", "rowguid");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[FATURAT] WHERE (([ID_FATURA] = @Original_ID_FATURA) AND ([ID_PERSONELI] = @Original_ID_PERSONELI) AND ([ID_TAVOLINA] = @Original_ID_TAVOLINA) AND ([TOTALI] = @Original_TOTALI) AND ([DATA_ORA] = @Original_DATA_ORA) AND ([SKONTO] = @Original_SKONTO) AND ([ID_FORMAPAGESA] = @Original_ID_FORMAPAGESA) AND ([NR_FATURE] = @Original_NR_FATURE) AND ([ID_KLIENTI] = @Original_ID_KLIENTI) AND ([KOSTO] = @Original_KOSTO) AND ([ANULLUAR] = @Original_ANULLUAR) AND ([rowguid] = @Original_rowguid))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_FATURA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_FATURA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_PERSONELI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_PERSONELI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_TAVOLINA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_TAVOLINA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TOTALI", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "TOTALI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DATA_ORA", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DATA_ORA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SKONTO", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "SKONTO", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_FORMAPAGESA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_FORMAPAGESA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NR_FATURE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "NR_FATURE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_KLIENTI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_KLIENTI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_KOSTO", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "KOSTO", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ANULLUAR", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "ANULLUAR", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_rowguid", System.Data.SqlDbType.UniqueIdentifier, 0, System.Data.ParameterDirection.Input, 0, 0, "rowguid", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[FATURAT] ([ID_PERSONELI], [ID_TAVOLINA], [TOTALI], [DATA_ORA], [SKONTO], [ID_FORMAPAGESA], [NR_FATURE], [ID_KLIENTI], [KOSTO], [ANULLUAR], [rowguid]) VALUES (@ID_PERSONELI, @ID_TAVOLINA, @TOTALI, @DATA_ORA, @SKONTO, @ID_FORMAPAGESA, @NR_FATURE, @ID_KLIENTI, @KOSTO, @ANULLUAR, @rowguid);
SELECT ID_FATURA, ID_PERSONELI, ID_TAVOLINA, TOTALI, DATA_ORA, SKONTO, ID_FORMAPAGESA, NR_FATURE, ID_KLIENTI, KOSTO, ANULLUAR, rowguid FROM FATURAT WHERE (ID_FATURA = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_PERSONELI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_PERSONELI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_TAVOLINA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_TAVOLINA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TOTALI", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "TOTALI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DATA_ORA", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DATA_ORA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SKONTO", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "SKONTO", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_FORMAPAGESA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_FORMAPAGESA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NR_FATURE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "NR_FATURE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_KLIENTI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_KLIENTI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@KOSTO", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "KOSTO", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ANULLUAR", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "ANULLUAR", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@rowguid", System.Data.SqlDbType.UniqueIdentifier, 0, System.Data.ParameterDirection.Input, 0, 0, "rowguid", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[FATURAT] SET [ID_PERSONELI] = @ID_PERSONELI, [ID_TAVOLINA] = @ID_TAVOLINA, [TOTALI] = @TOTALI, [DATA_ORA] = @DATA_ORA, [SKONTO] = @SKONTO, [ID_FORMAPAGESA] = @ID_FORMAPAGESA, [NR_FATURE] = @NR_FATURE, [ID_KLIENTI] = @ID_KLIENTI, [KOSTO] = @KOSTO, [ANULLUAR] = @ANULLUAR, [rowguid] = @rowguid WHERE (([ID_FATURA] = @Original_ID_FATURA) AND ([ID_PERSONELI] = @Original_ID_PERSONELI) AND ([ID_TAVOLINA] = @Original_ID_TAVOLINA) AND ([TOTALI] = @Original_TOTALI) AND ([DATA_ORA] = @Original_DATA_ORA) AND ([SKONTO] = @Original_SKONTO) AND ([ID_FORMAPAGESA] = @Original_ID_FORMAPAGESA) AND ([NR_FATURE] = @Original_NR_FATURE) AND ([ID_KLIENTI] = @Original_ID_KLIENTI) AND ([KOSTO] = @Original_KOSTO) AND ([ANULLUAR] = @Original_ANULLUAR) AND ([rowguid] = @Original_rowguid));
SELECT ID_FATURA, ID_PERSONELI, ID_TAVOLINA, TOTALI, DATA_ORA, SKONTO, ID_FORMAPAGESA, NR_FATURE, ID_KLIENTI, KOSTO, ANULLUAR, rowguid FROM FATURAT WHERE (ID_FATURA = @ID_FATURA)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_PERSONELI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_PERSONELI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_TAVOLINA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_TAVOLINA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TOTALI", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "TOTALI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DATA_ORA", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DATA_ORA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SKONTO", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "SKONTO", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_FORMAPAGESA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_FORMAPAGESA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NR_FATURE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "NR_FATURE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_KLIENTI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_KLIENTI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@KOSTO", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "KOSTO", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ANULLUAR", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "ANULLUAR", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@rowguid", System.Data.SqlDbType.UniqueIdentifier, 0, System.Data.ParameterDirection.Input, 0, 0, "rowguid", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_FATURA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_FATURA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_PERSONELI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_PERSONELI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_TAVOLINA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_TAVOLINA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TOTALI", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "TOTALI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DATA_ORA", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DATA_ORA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SKONTO", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "SKONTO", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_FORMAPAGESA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_FORMAPAGESA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NR_FATURE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "NR_FATURE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_KLIENTI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_KLIENTI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_KOSTO", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "KOSTO", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ANULLUAR", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "ANULLUAR", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_rowguid", System.Data.SqlDbType.UniqueIdentifier, 0, System.Data.ParameterDirection.Input, 0, 0, "rowguid", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_FATURA", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "ID_FATURA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ResManager.Properties.Settings.Default.ResManagerConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_FATURA, ID_PERSONELI, ID_TAVOLINA, TOTALI, DATA_ORA, SKONTO, ID_FORMAPA" +
                "GESA, NR_FATURE, ID_KLIENTI, KOSTO, ANULLUAR, rowguid FROM dbo.FATURAT";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ResManagerDataSet.FATURATDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ResManagerDataSet.FATURATDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ResManagerDataSet.FATURATDataTable dataTable = new ResManagerDataSet.FATURATDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet.FATURATDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet dataSet) {
            return this.Adapter.Update(dataSet, "FATURAT");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_FATURA, int Original_ID_PERSONELI, int Original_ID_TAVOLINA, double Original_TOTALI, System.DateTime Original_DATA_ORA, double Original_SKONTO, int Original_ID_FORMAPAGESA, string Original_NR_FATURE, int Original_ID_KLIENTI, double Original_KOSTO, bool Original_ANULLUAR, System.Guid Original_rowguid) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_FATURA));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ID_PERSONELI));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_ID_TAVOLINA));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((double)(Original_TOTALI));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_DATA_ORA));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((double)(Original_SKONTO));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_ID_FORMAPAGESA));
            if ((Original_NR_FATURE == null)) {
                throw new System.ArgumentNullException("Original_NR_FATURE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_NR_FATURE));
            }
            this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_ID_KLIENTI));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((double)(Original_KOSTO));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((bool)(Original_ANULLUAR));
            this.Adapter.DeleteCommand.Parameters[11].Value = ((System.Guid)(Original_rowguid));
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_PERSONELI, int ID_TAVOLINA, double TOTALI, System.DateTime DATA_ORA, double SKONTO, int ID_FORMAPAGESA, string NR_FATURE, int ID_KLIENTI, double KOSTO, bool ANULLUAR, System.Guid rowguid) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_PERSONELI));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ID_TAVOLINA));
            this.Adapter.InsertCommand.Parameters[2].Value = ((double)(TOTALI));
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(DATA_ORA));
            this.Adapter.InsertCommand.Parameters[4].Value = ((double)(SKONTO));
            this.Adapter.InsertCommand.Parameters[5].Value = ((int)(ID_FORMAPAGESA));
            if ((NR_FATURE == null)) {
                throw new System.ArgumentNullException("NR_FATURE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(NR_FATURE));
            }
            this.Adapter.InsertCommand.Parameters[7].Value = ((int)(ID_KLIENTI));
            this.Adapter.InsertCommand.Parameters[8].Value = ((double)(KOSTO));
            this.Adapter.InsertCommand.Parameters[9].Value = ((bool)(ANULLUAR));
            this.Adapter.InsertCommand.Parameters[10].Value = ((System.Guid)(rowguid));
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int ID_PERSONELI, 
                    int ID_TAVOLINA, 
                    double TOTALI, 
                    System.DateTime DATA_ORA, 
                    double SKONTO, 
                    int ID_FORMAPAGESA, 
                    string NR_FATURE, 
                    int ID_KLIENTI, 
                    double KOSTO, 
                    bool ANULLUAR, 
                    System.Guid rowguid, 
                    int Original_ID_FATURA, 
                    int Original_ID_PERSONELI, 
                    int Original_ID_TAVOLINA, 
                    double Original_TOTALI, 
                    System.DateTime Original_DATA_ORA, 
                    double Original_SKONTO, 
                    int Original_ID_FORMAPAGESA, 
                    string Original_NR_FATURE, 
                    int Original_ID_KLIENTI, 
                    double Original_KOSTO, 
                    bool Original_ANULLUAR, 
                    System.Guid Original_rowguid, 
                    int ID_FATURA) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_PERSONELI));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ID_TAVOLINA));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((double)(TOTALI));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(DATA_ORA));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(SKONTO));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(ID_FORMAPAGESA));
            if ((NR_FATURE == null)) {
                throw new System.ArgumentNullException("NR_FATURE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(NR_FATURE));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(ID_KLIENTI));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((double)(KOSTO));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((bool)(ANULLUAR));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((System.Guid)(rowguid));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_ID_FATURA));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_ID_PERSONELI));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Original_ID_TAVOLINA));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((double)(Original_TOTALI));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(Original_DATA_ORA));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((double)(Original_SKONTO));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Original_ID_FORMAPAGESA));
            if ((Original_NR_FATURE == null)) {
                throw new System.ArgumentNullException("Original_NR_FATURE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_NR_FATURE));
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(Original_ID_KLIENTI));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((double)(Original_KOSTO));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((bool)(Original_ANULLUAR));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((System.Guid)(Original_rowguid));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((int)(ID_FATURA));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class FAVORITETableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public FAVORITETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "FAVORITE";
            tableMapping.ColumnMappings.Add("ID_FAVORITE", "ID_FAVORITE");
            tableMapping.ColumnMappings.Add("EMRI", "EMRI");
            tableMapping.ColumnMappings.Add("LLOJI", "LLOJI");
            tableMapping.ColumnMappings.Add("PRIORITETI", "PRIORITETI");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[FAVORITE] WHERE (([ID_FAVORITE] = @Original_ID_FAVORITE) AND (" +
                "[EMRI] = @Original_EMRI) AND ([LLOJI] = @Original_LLOJI) AND ([PRIORITETI] = @Or" +
                "iginal_PRIORITETI))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_FAVORITE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_FAVORITE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EMRI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMRI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_LLOJI", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "LLOJI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PRIORITETI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PRIORITETI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[FAVORITE] ([ID_FAVORITE], [EMRI], [LLOJI], [PRIORITETI]) VALUE" +
                "S (@ID_FAVORITE, @EMRI, @LLOJI, @PRIORITETI);\r\nSELECT ID_FAVORITE, EMRI, LLOJI, " +
                "PRIORITETI FROM FAVORITE WHERE (ID_FAVORITE = @ID_FAVORITE) AND (LLOJI = @LLOJI)" +
                "";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_FAVORITE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_FAVORITE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EMRI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMRI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@LLOJI", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "LLOJI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PRIORITETI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PRIORITETI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[FAVORITE] SET [ID_FAVORITE] = @ID_FAVORITE, [EMRI] = @EMRI, [LLOJI] = @LLOJI, [PRIORITETI] = @PRIORITETI WHERE (([ID_FAVORITE] = @Original_ID_FAVORITE) AND ([EMRI] = @Original_EMRI) AND ([LLOJI] = @Original_LLOJI) AND ([PRIORITETI] = @Original_PRIORITETI));
SELECT ID_FAVORITE, EMRI, LLOJI, PRIORITETI FROM FAVORITE WHERE (ID_FAVORITE = @ID_FAVORITE) AND (LLOJI = @LLOJI)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_FAVORITE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_FAVORITE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EMRI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMRI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@LLOJI", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "LLOJI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PRIORITETI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PRIORITETI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_FAVORITE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_FAVORITE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EMRI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMRI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_LLOJI", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "LLOJI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PRIORITETI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PRIORITETI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ResManager.Properties.Settings.Default.ResManagerConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_FAVORITE, EMRI, LLOJI, PRIORITETI FROM dbo.FAVORITE";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ResManagerDataSet.FAVORITEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ResManagerDataSet.FAVORITEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ResManagerDataSet.FAVORITEDataTable dataTable = new ResManagerDataSet.FAVORITEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet.FAVORITEDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet dataSet) {
            return this.Adapter.Update(dataSet, "FAVORITE");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_FAVORITE, string Original_EMRI, string Original_LLOJI, int Original_PRIORITETI) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_FAVORITE));
            if ((Original_EMRI == null)) {
                throw new System.ArgumentNullException("Original_EMRI");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_EMRI));
            }
            if ((Original_LLOJI == null)) {
                throw new System.ArgumentNullException("Original_LLOJI");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_LLOJI));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_PRIORITETI));
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_FAVORITE, string EMRI, string LLOJI, int PRIORITETI) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_FAVORITE));
            if ((EMRI == null)) {
                throw new System.ArgumentNullException("EMRI");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(EMRI));
            }
            if ((LLOJI == null)) {
                throw new System.ArgumentNullException("LLOJI");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(LLOJI));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(PRIORITETI));
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_FAVORITE, string EMRI, string LLOJI, int PRIORITETI, int Original_ID_FAVORITE, string Original_EMRI, string Original_LLOJI, int Original_PRIORITETI) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_FAVORITE));
            if ((EMRI == null)) {
                throw new System.ArgumentNullException("EMRI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(EMRI));
            }
            if ((LLOJI == null)) {
                throw new System.ArgumentNullException("LLOJI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(LLOJI));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(PRIORITETI));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_ID_FAVORITE));
            if ((Original_EMRI == null)) {
                throw new System.ArgumentNullException("Original_EMRI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_EMRI));
            }
            if ((Original_LLOJI == null)) {
                throw new System.ArgumentNullException("Original_LLOJI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_LLOJI));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_PRIORITETI));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class FORMA_PAGESATableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public FORMA_PAGESATableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "FORMA_PAGESA";
            tableMapping.ColumnMappings.Add("ID_FORMAPAGESA", "ID_FORMAPAGESA");
            tableMapping.ColumnMappings.Add("FORMA_PAGESA", "FORMA_PAGESA");
            tableMapping.ColumnMappings.Add("KOMISIONI", "KOMISIONI");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[FORMA_PAGESA] WHERE (([ID_FORMAPAGESA] = @Original_ID_FORMAPAG" +
                "ESA) AND ([FORMA_PAGESA] = @Original_FORMA_PAGESA) AND ([KOMISIONI] = @Original_" +
                "KOMISIONI))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_FORMAPAGESA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_FORMAPAGESA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_FORMA_PAGESA", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "FORMA_PAGESA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_KOMISIONI", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "KOMISIONI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[FORMA_PAGESA] ([FORMA_PAGESA], [KOMISIONI]) VALUES (@FORMA_PAG" +
                "ESA, @KOMISIONI);\r\nSELECT ID_FORMAPAGESA, FORMA_PAGESA, KOMISIONI FROM FORMA_PAG" +
                "ESA WHERE (ID_FORMAPAGESA = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@FORMA_PAGESA", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "FORMA_PAGESA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@KOMISIONI", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "KOMISIONI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[FORMA_PAGESA] SET [FORMA_PAGESA] = @FORMA_PAGESA, [KOMISIONI] = @KOMISIONI WHERE (([ID_FORMAPAGESA] = @Original_ID_FORMAPAGESA) AND ([FORMA_PAGESA] = @Original_FORMA_PAGESA) AND ([KOMISIONI] = @Original_KOMISIONI));
SELECT ID_FORMAPAGESA, FORMA_PAGESA, KOMISIONI FROM FORMA_PAGESA WHERE (ID_FORMAPAGESA = @ID_FORMAPAGESA)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@FORMA_PAGESA", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "FORMA_PAGESA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@KOMISIONI", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "KOMISIONI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_FORMAPAGESA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_FORMAPAGESA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_FORMA_PAGESA", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "FORMA_PAGESA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_KOMISIONI", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "KOMISIONI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_FORMAPAGESA", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "ID_FORMAPAGESA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ResManager.Properties.Settings.Default.ResManagerConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_FORMAPAGESA, FORMA_PAGESA, KOMISIONI FROM dbo.FORMA_PAGESA";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ResManagerDataSet.FORMA_PAGESADataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ResManagerDataSet.FORMA_PAGESADataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ResManagerDataSet.FORMA_PAGESADataTable dataTable = new ResManagerDataSet.FORMA_PAGESADataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet.FORMA_PAGESADataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet dataSet) {
            return this.Adapter.Update(dataSet, "FORMA_PAGESA");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_FORMAPAGESA, string Original_FORMA_PAGESA, double Original_KOMISIONI) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_FORMAPAGESA));
            if ((Original_FORMA_PAGESA == null)) {
                throw new System.ArgumentNullException("Original_FORMA_PAGESA");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_FORMA_PAGESA));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((double)(Original_KOMISIONI));
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string FORMA_PAGESA, double KOMISIONI) {
            if ((FORMA_PAGESA == null)) {
                throw new System.ArgumentNullException("FORMA_PAGESA");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(FORMA_PAGESA));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((double)(KOMISIONI));
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string FORMA_PAGESA, double KOMISIONI, int Original_ID_FORMAPAGESA, string Original_FORMA_PAGESA, double Original_KOMISIONI, int ID_FORMAPAGESA) {
            if ((FORMA_PAGESA == null)) {
                throw new System.ArgumentNullException("FORMA_PAGESA");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(FORMA_PAGESA));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((double)(KOMISIONI));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_ID_FORMAPAGESA));
            if ((Original_FORMA_PAGESA == null)) {
                throw new System.ArgumentNullException("Original_FORMA_PAGESA");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_FORMA_PAGESA));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(Original_KOMISIONI));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(ID_FORMAPAGESA));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class FURNITORETTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public FURNITORETTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "FURNITORET";
            tableMapping.ColumnMappings.Add("ID_FURNITORI", "ID_FURNITORI");
            tableMapping.ColumnMappings.Add("EMRI", "EMRI");
            tableMapping.ColumnMappings.Add("MBIEMRI", "MBIEMRI");
            tableMapping.ColumnMappings.Add("ADRESA", "ADRESA");
            tableMapping.ColumnMappings.Add("EMAILI", "EMAILI");
            tableMapping.ColumnMappings.Add("TELEFONI", "TELEFONI");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[FURNITORET] WHERE (([ID_FURNITORI] = @Original_ID_FURNITORI) AND ((@IsNull_EMRI = 1 AND [EMRI] IS NULL) OR ([EMRI] = @Original_EMRI)) AND ((@IsNull_MBIEMRI = 1 AND [MBIEMRI] IS NULL) OR ([MBIEMRI] = @Original_MBIEMRI)) AND ((@IsNull_TELEFONI = 1 AND [TELEFONI] IS NULL) OR ([TELEFONI] = @Original_TELEFONI)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_FURNITORI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_FURNITORI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_EMRI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "EMRI", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EMRI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMRI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MBIEMRI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MBIEMRI", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MBIEMRI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MBIEMRI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TELEFONI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TELEFONI", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TELEFONI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TELEFONI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[FURNITORET] ([EMRI], [MBIEMRI], [ADRESA], [EMAILI], [TELEFONI]" +
                ") VALUES (@EMRI, @MBIEMRI, @ADRESA, @EMAILI, @TELEFONI);\r\nSELECT ID_FURNITORI, E" +
                "MRI, MBIEMRI, ADRESA, EMAILI, TELEFONI FROM FURNITORET WHERE (ID_FURNITORI = SCO" +
                "PE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EMRI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMRI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MBIEMRI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MBIEMRI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ADRESA", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ADRESA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EMAILI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMAILI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TELEFONI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TELEFONI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[FURNITORET] SET [EMRI] = @EMRI, [MBIEMRI] = @MBIEMRI, [ADRESA] = @ADRESA, [EMAILI] = @EMAILI, [TELEFONI] = @TELEFONI WHERE (([ID_FURNITORI] = @Original_ID_FURNITORI) AND ((@IsNull_EMRI = 1 AND [EMRI] IS NULL) OR ([EMRI] = @Original_EMRI)) AND ((@IsNull_MBIEMRI = 1 AND [MBIEMRI] IS NULL) OR ([MBIEMRI] = @Original_MBIEMRI)) AND ((@IsNull_TELEFONI = 1 AND [TELEFONI] IS NULL) OR ([TELEFONI] = @Original_TELEFONI)));
SELECT ID_FURNITORI, EMRI, MBIEMRI, ADRESA, EMAILI, TELEFONI FROM FURNITORET WHERE (ID_FURNITORI = @ID_FURNITORI)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EMRI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMRI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MBIEMRI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MBIEMRI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ADRESA", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ADRESA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EMAILI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMAILI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TELEFONI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TELEFONI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_FURNITORI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_FURNITORI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_EMRI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "EMRI", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EMRI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMRI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MBIEMRI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MBIEMRI", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MBIEMRI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MBIEMRI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TELEFONI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TELEFONI", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TELEFONI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TELEFONI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_FURNITORI", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "ID_FURNITORI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ResManager.Properties.Settings.Default.ResManagerConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_FURNITORI, EMRI, MBIEMRI, ADRESA, EMAILI, TELEFONI FROM dbo.FURNITORET";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ResManagerDataSet.FURNITORETDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ResManagerDataSet.FURNITORETDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ResManagerDataSet.FURNITORETDataTable dataTable = new ResManagerDataSet.FURNITORETDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet.FURNITORETDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet dataSet) {
            return this.Adapter.Update(dataSet, "FURNITORET");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_FURNITORI, string Original_EMRI, string Original_MBIEMRI, string Original_TELEFONI) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_FURNITORI));
            if ((Original_EMRI == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_EMRI));
            }
            if ((Original_MBIEMRI == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_MBIEMRI));
            }
            if ((Original_TELEFONI == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_TELEFONI));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string EMRI, string MBIEMRI, string ADRESA, string EMAILI, string TELEFONI) {
            if ((EMRI == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(EMRI));
            }
            if ((MBIEMRI == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(MBIEMRI));
            }
            if ((ADRESA == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(ADRESA));
            }
            if ((EMAILI == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(EMAILI));
            }
            if ((TELEFONI == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(TELEFONI));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string EMRI, string MBIEMRI, string ADRESA, string EMAILI, string TELEFONI, int Original_ID_FURNITORI, string Original_EMRI, string Original_MBIEMRI, string Original_TELEFONI, int ID_FURNITORI) {
            if ((EMRI == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(EMRI));
            }
            if ((MBIEMRI == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(MBIEMRI));
            }
            if ((ADRESA == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(ADRESA));
            }
            if ((EMAILI == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(EMAILI));
            }
            if ((TELEFONI == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(TELEFONI));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_ID_FURNITORI));
            if ((Original_EMRI == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_EMRI));
            }
            if ((Original_MBIEMRI == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_MBIEMRI));
            }
            if ((Original_TELEFONI == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_TELEFONI));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(ID_FURNITORI));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class GRUPITableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public GRUPITableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "GRUPI";
            tableMapping.ColumnMappings.Add("ID_GRUPI", "ID_GRUPI");
            tableMapping.ColumnMappings.Add("EMRI", "EMRI");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[GRUPI] WHERE (([ID_GRUPI] = @Original_ID_GRUPI) AND ([EMRI] = " +
                "@Original_EMRI))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_GRUPI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_GRUPI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EMRI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMRI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[GRUPI] ([ID_GRUPI], [EMRI]) VALUES (@ID_GRUPI, @EMRI);\r\nSELECT" +
                " ID_GRUPI, EMRI FROM GRUPI WHERE (ID_GRUPI = @ID_GRUPI)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_GRUPI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_GRUPI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EMRI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMRI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[GRUPI] SET [ID_GRUPI] = @ID_GRUPI, [EMRI] = @EMRI WHERE (([ID_GRUPI" +
                "] = @Original_ID_GRUPI) AND ([EMRI] = @Original_EMRI));\r\nSELECT ID_GRUPI, EMRI F" +
                "ROM GRUPI WHERE (ID_GRUPI = @ID_GRUPI)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_GRUPI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_GRUPI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EMRI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMRI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_GRUPI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_GRUPI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EMRI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMRI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ResManager.Properties.Settings.Default.ResManagerConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_GRUPI, EMRI FROM dbo.GRUPI";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ResManagerDataSet.GRUPIDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ResManagerDataSet.GRUPIDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ResManagerDataSet.GRUPIDataTable dataTable = new ResManagerDataSet.GRUPIDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet.GRUPIDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet dataSet) {
            return this.Adapter.Update(dataSet, "GRUPI");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_GRUPI, string Original_EMRI) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_GRUPI));
            if ((Original_EMRI == null)) {
                throw new System.ArgumentNullException("Original_EMRI");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_EMRI));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_GRUPI, string EMRI) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_GRUPI));
            if ((EMRI == null)) {
                throw new System.ArgumentNullException("EMRI");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(EMRI));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_GRUPI, string EMRI, int Original_ID_GRUPI, string Original_EMRI) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_GRUPI));
            if ((EMRI == null)) {
                throw new System.ArgumentNullException("EMRI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(EMRI));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_ID_GRUPI));
            if ((Original_EMRI == null)) {
                throw new System.ArgumentNullException("Original_EMRI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_EMRI));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class KATEGORIA_SHPENZIMIMUJORTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public KATEGORIA_SHPENZIMIMUJORTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "KATEGORIA_SHPENZIMIMUJOR";
            tableMapping.ColumnMappings.Add("ID_KATSHPENNZIMIMUJOR", "ID_KATSHPENNZIMIMUJOR");
            tableMapping.ColumnMappings.Add("CSHPENZIMI", "CSHPENZIMI");
            tableMapping.ColumnMappings.Add("PSHPENZIMI", "PSHPENZIMI");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[KATEGORIA_SHPENZIMIMUJOR] WHERE (([ID_KATSHPENNZIMIMUJOR] = @O" +
                "riginal_ID_KATSHPENNZIMIMUJOR) AND ([CSHPENZIMI] = @Original_CSHPENZIMI))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_KATSHPENNZIMIMUJOR", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_KATSHPENNZIMIMUJOR", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CSHPENZIMI", System.Data.SqlDbType.VarBinary, 0, System.Data.ParameterDirection.Input, 0, 0, "CSHPENZIMI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[KATEGORIA_SHPENZIMIMUJOR] ([ID_KATSHPENNZIMIMUJOR], [CSHPENZIMI], [PSHPENZIMI]) VALUES (@ID_KATSHPENNZIMIMUJOR, @CSHPENZIMI, @PSHPENZIMI);
SELECT ID_KATSHPENNZIMIMUJOR, CSHPENZIMI, PSHPENZIMI FROM KATEGORIA_SHPENZIMIMUJOR WHERE (ID_KATSHPENNZIMIMUJOR = @ID_KATSHPENNZIMIMUJOR)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_KATSHPENNZIMIMUJOR", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_KATSHPENNZIMIMUJOR", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CSHPENZIMI", System.Data.SqlDbType.VarBinary, 0, System.Data.ParameterDirection.Input, 0, 0, "CSHPENZIMI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PSHPENZIMI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PSHPENZIMI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[KATEGORIA_SHPENZIMIMUJOR] SET [ID_KATSHPENNZIMIMUJOR] = @ID_KATSHPENNZIMIMUJOR, [CSHPENZIMI] = @CSHPENZIMI, [PSHPENZIMI] = @PSHPENZIMI WHERE (([ID_KATSHPENNZIMIMUJOR] = @Original_ID_KATSHPENNZIMIMUJOR) AND ([CSHPENZIMI] = @Original_CSHPENZIMI));
SELECT ID_KATSHPENNZIMIMUJOR, CSHPENZIMI, PSHPENZIMI FROM KATEGORIA_SHPENZIMIMUJOR WHERE (ID_KATSHPENNZIMIMUJOR = @ID_KATSHPENNZIMIMUJOR)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_KATSHPENNZIMIMUJOR", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_KATSHPENNZIMIMUJOR", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CSHPENZIMI", System.Data.SqlDbType.VarBinary, 0, System.Data.ParameterDirection.Input, 0, 0, "CSHPENZIMI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PSHPENZIMI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PSHPENZIMI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_KATSHPENNZIMIMUJOR", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_KATSHPENNZIMIMUJOR", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CSHPENZIMI", System.Data.SqlDbType.VarBinary, 0, System.Data.ParameterDirection.Input, 0, 0, "CSHPENZIMI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ResManager.Properties.Settings.Default.ResManagerConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_KATSHPENNZIMIMUJOR, CSHPENZIMI, PSHPENZIMI FROM dbo.KATEGORIA_SHPENZIMI" +
                "MUJOR";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ResManagerDataSet.KATEGORIA_SHPENZIMIMUJORDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ResManagerDataSet.KATEGORIA_SHPENZIMIMUJORDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ResManagerDataSet.KATEGORIA_SHPENZIMIMUJORDataTable dataTable = new ResManagerDataSet.KATEGORIA_SHPENZIMIMUJORDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet.KATEGORIA_SHPENZIMIMUJORDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet dataSet) {
            return this.Adapter.Update(dataSet, "KATEGORIA_SHPENZIMIMUJOR");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_KATSHPENNZIMIMUJOR, byte[] Original_CSHPENZIMI) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_KATSHPENNZIMIMUJOR));
            if ((Original_CSHPENZIMI == null)) {
                throw new System.ArgumentNullException("Original_CSHPENZIMI");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((byte[])(Original_CSHPENZIMI));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_KATSHPENNZIMIMUJOR, byte[] CSHPENZIMI, string PSHPENZIMI) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_KATSHPENNZIMIMUJOR));
            if ((CSHPENZIMI == null)) {
                throw new System.ArgumentNullException("CSHPENZIMI");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((byte[])(CSHPENZIMI));
            }
            if ((PSHPENZIMI == null)) {
                throw new System.ArgumentNullException("PSHPENZIMI");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(PSHPENZIMI));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_KATSHPENNZIMIMUJOR, byte[] CSHPENZIMI, string PSHPENZIMI, int Original_ID_KATSHPENNZIMIMUJOR, byte[] Original_CSHPENZIMI) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_KATSHPENNZIMIMUJOR));
            if ((CSHPENZIMI == null)) {
                throw new System.ArgumentNullException("CSHPENZIMI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((byte[])(CSHPENZIMI));
            }
            if ((PSHPENZIMI == null)) {
                throw new System.ArgumentNullException("PSHPENZIMI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(PSHPENZIMI));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_ID_KATSHPENNZIMIMUJOR));
            if ((Original_CSHPENZIMI == null)) {
                throw new System.ArgumentNullException("Original_CSHPENZIMI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((byte[])(Original_CSHPENZIMI));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class KATEGORITE_ARTIKUJTTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public KATEGORITE_ARTIKUJTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "KATEGORITE_ARTIKUJT";
            tableMapping.ColumnMappings.Add("ID_KATEGORIAARTIKULLI", "ID_KATEGORIAARTIKULLI");
            tableMapping.ColumnMappings.Add("PERSHKRIMI", "PERSHKRIMI");
            tableMapping.ColumnMappings.Add("VISIBLE", "VISIBLE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[KATEGORITE_ARTIKUJT] WHERE (([ID_KATEGORIAARTIKULLI] = @Origin" +
                "al_ID_KATEGORIAARTIKULLI) AND ([PERSHKRIMI] = @Original_PERSHKRIMI) AND ([VISIBL" +
                "E] = @Original_VISIBLE))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_KATEGORIAARTIKULLI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_KATEGORIAARTIKULLI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PERSHKRIMI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PERSHKRIMI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_VISIBLE", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "VISIBLE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[KATEGORITE_ARTIKUJT] ([PERSHKRIMI], [VISIBLE]) VALUES (@PERSHK" +
                "RIMI, @VISIBLE);\r\nSELECT ID_KATEGORIAARTIKULLI, PERSHKRIMI, VISIBLE FROM KATEGOR" +
                "ITE_ARTIKUJT WHERE (ID_KATEGORIAARTIKULLI = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PERSHKRIMI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PERSHKRIMI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@VISIBLE", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "VISIBLE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[KATEGORITE_ARTIKUJT] SET [PERSHKRIMI] = @PERSHKRIMI, [VISIBLE] = @VISIBLE WHERE (([ID_KATEGORIAARTIKULLI] = @Original_ID_KATEGORIAARTIKULLI) AND ([PERSHKRIMI] = @Original_PERSHKRIMI) AND ([VISIBLE] = @Original_VISIBLE));
SELECT ID_KATEGORIAARTIKULLI, PERSHKRIMI, VISIBLE FROM KATEGORITE_ARTIKUJT WHERE (ID_KATEGORIAARTIKULLI = @ID_KATEGORIAARTIKULLI)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PERSHKRIMI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PERSHKRIMI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@VISIBLE", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "VISIBLE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_KATEGORIAARTIKULLI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_KATEGORIAARTIKULLI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PERSHKRIMI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PERSHKRIMI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_VISIBLE", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "VISIBLE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_KATEGORIAARTIKULLI", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "ID_KATEGORIAARTIKULLI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ResManager.Properties.Settings.Default.ResManagerConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_KATEGORIAARTIKULLI, PERSHKRIMI, VISIBLE FROM dbo.KATEGORITE_ARTIKUJT";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ResManagerDataSet.KATEGORITE_ARTIKUJTDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ResManagerDataSet.KATEGORITE_ARTIKUJTDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ResManagerDataSet.KATEGORITE_ARTIKUJTDataTable dataTable = new ResManagerDataSet.KATEGORITE_ARTIKUJTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet.KATEGORITE_ARTIKUJTDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet dataSet) {
            return this.Adapter.Update(dataSet, "KATEGORITE_ARTIKUJT");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_KATEGORIAARTIKULLI, string Original_PERSHKRIMI, bool Original_VISIBLE) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_KATEGORIAARTIKULLI));
            if ((Original_PERSHKRIMI == null)) {
                throw new System.ArgumentNullException("Original_PERSHKRIMI");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_PERSHKRIMI));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((bool)(Original_VISIBLE));
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string PERSHKRIMI, bool VISIBLE) {
            if ((PERSHKRIMI == null)) {
                throw new System.ArgumentNullException("PERSHKRIMI");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(PERSHKRIMI));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((bool)(VISIBLE));
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string PERSHKRIMI, bool VISIBLE, int Original_ID_KATEGORIAARTIKULLI, string Original_PERSHKRIMI, bool Original_VISIBLE, int ID_KATEGORIAARTIKULLI) {
            if ((PERSHKRIMI == null)) {
                throw new System.ArgumentNullException("PERSHKRIMI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(PERSHKRIMI));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((bool)(VISIBLE));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_ID_KATEGORIAARTIKULLI));
            if ((Original_PERSHKRIMI == null)) {
                throw new System.ArgumentNullException("Original_PERSHKRIMI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_PERSHKRIMI));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((bool)(Original_VISIBLE));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(ID_KATEGORIAARTIKULLI));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class KATEGORITE_RECETATTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public KATEGORITE_RECETATTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "KATEGORITE_RECETAT";
            tableMapping.ColumnMappings.Add("ID_KATEGORIARECETA", "ID_KATEGORIARECETA");
            tableMapping.ColumnMappings.Add("PERSHKRIMI", "PERSHKRIMI");
            tableMapping.ColumnMappings.Add("rowguid", "rowguid");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[KATEGORITE_RECETAT] WHERE (([ID_KATEGORIARECETA] = @Original_I" +
                "D_KATEGORIARECETA) AND ([PERSHKRIMI] = @Original_PERSHKRIMI) AND ([rowguid] = @O" +
                "riginal_rowguid))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_KATEGORIARECETA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_KATEGORIARECETA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PERSHKRIMI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PERSHKRIMI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_rowguid", System.Data.SqlDbType.UniqueIdentifier, 0, System.Data.ParameterDirection.Input, 0, 0, "rowguid", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[KATEGORITE_RECETAT] ([ID_KATEGORIARECETA], [PERSHKRIMI], [rowguid]) VALUES (@ID_KATEGORIARECETA, @PERSHKRIMI, @rowguid);
SELECT ID_KATEGORIARECETA, PERSHKRIMI, rowguid FROM KATEGORITE_RECETAT WHERE (ID_KATEGORIARECETA = @ID_KATEGORIARECETA)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_KATEGORIARECETA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_KATEGORIARECETA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PERSHKRIMI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PERSHKRIMI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@rowguid", System.Data.SqlDbType.UniqueIdentifier, 0, System.Data.ParameterDirection.Input, 0, 0, "rowguid", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[KATEGORITE_RECETAT] SET [ID_KATEGORIARECETA] = @ID_KATEGORIARECETA, [PERSHKRIMI] = @PERSHKRIMI, [rowguid] = @rowguid WHERE (([ID_KATEGORIARECETA] = @Original_ID_KATEGORIARECETA) AND ([PERSHKRIMI] = @Original_PERSHKRIMI) AND ([rowguid] = @Original_rowguid));
SELECT ID_KATEGORIARECETA, PERSHKRIMI, rowguid FROM KATEGORITE_RECETAT WHERE (ID_KATEGORIARECETA = @ID_KATEGORIARECETA)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_KATEGORIARECETA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_KATEGORIARECETA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PERSHKRIMI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PERSHKRIMI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@rowguid", System.Data.SqlDbType.UniqueIdentifier, 0, System.Data.ParameterDirection.Input, 0, 0, "rowguid", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_KATEGORIARECETA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_KATEGORIARECETA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PERSHKRIMI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PERSHKRIMI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_rowguid", System.Data.SqlDbType.UniqueIdentifier, 0, System.Data.ParameterDirection.Input, 0, 0, "rowguid", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ResManager.Properties.Settings.Default.ResManagerConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_KATEGORIARECETA, PERSHKRIMI, rowguid FROM dbo.KATEGORITE_RECETAT";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ResManagerDataSet.KATEGORITE_RECETATDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ResManagerDataSet.KATEGORITE_RECETATDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ResManagerDataSet.KATEGORITE_RECETATDataTable dataTable = new ResManagerDataSet.KATEGORITE_RECETATDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet.KATEGORITE_RECETATDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet dataSet) {
            return this.Adapter.Update(dataSet, "KATEGORITE_RECETAT");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_KATEGORIARECETA, string Original_PERSHKRIMI, System.Guid Original_rowguid) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_KATEGORIARECETA));
            if ((Original_PERSHKRIMI == null)) {
                throw new System.ArgumentNullException("Original_PERSHKRIMI");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_PERSHKRIMI));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.Guid)(Original_rowguid));
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_KATEGORIARECETA, string PERSHKRIMI, System.Guid rowguid) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_KATEGORIARECETA));
            if ((PERSHKRIMI == null)) {
                throw new System.ArgumentNullException("PERSHKRIMI");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(PERSHKRIMI));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.Guid)(rowguid));
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_KATEGORIARECETA, string PERSHKRIMI, System.Guid rowguid, int Original_ID_KATEGORIARECETA, string Original_PERSHKRIMI, System.Guid Original_rowguid) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_KATEGORIARECETA));
            if ((PERSHKRIMI == null)) {
                throw new System.ArgumentNullException("PERSHKRIMI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(PERSHKRIMI));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.Guid)(rowguid));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_ID_KATEGORIARECETA));
            if ((Original_PERSHKRIMI == null)) {
                throw new System.ArgumentNullException("Original_PERSHKRIMI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_PERSHKRIMI));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.Guid)(Original_rowguid));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class KATEGORITE_SHPENZIMETTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public KATEGORITE_SHPENZIMETTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "KATEGORITE_SHPENZIMET";
            tableMapping.ColumnMappings.Add("ID_KATEGORIASHPENZIMI", "ID_KATEGORIASHPENZIMI");
            tableMapping.ColumnMappings.Add("PERSHKRIMI", "PERSHKRIMI");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[KATEGORITE_SHPENZIMET] WHERE (([ID_KATEGORIASHPENZIMI] = @Orig" +
                "inal_ID_KATEGORIASHPENZIMI) AND ([PERSHKRIMI] = @Original_PERSHKRIMI))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_KATEGORIASHPENZIMI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_KATEGORIASHPENZIMI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PERSHKRIMI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PERSHKRIMI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[KATEGORITE_SHPENZIMET] ([PERSHKRIMI]) VALUES (@PERSHKRIMI);\r\nS" +
                "ELECT ID_KATEGORIASHPENZIMI, PERSHKRIMI FROM KATEGORITE_SHPENZIMET WHERE (ID_KAT" +
                "EGORIASHPENZIMI = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PERSHKRIMI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PERSHKRIMI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[KATEGORITE_SHPENZIMET] SET [PERSHKRIMI] = @PERSHKRIMI WHERE (([ID_KATEGORIASHPENZIMI] = @Original_ID_KATEGORIASHPENZIMI) AND ([PERSHKRIMI] = @Original_PERSHKRIMI));
SELECT ID_KATEGORIASHPENZIMI, PERSHKRIMI FROM KATEGORITE_SHPENZIMET WHERE (ID_KATEGORIASHPENZIMI = @ID_KATEGORIASHPENZIMI)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PERSHKRIMI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PERSHKRIMI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_KATEGORIASHPENZIMI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_KATEGORIASHPENZIMI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PERSHKRIMI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PERSHKRIMI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_KATEGORIASHPENZIMI", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "ID_KATEGORIASHPENZIMI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ResManager.Properties.Settings.Default.ResManagerConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_KATEGORIASHPENZIMI, PERSHKRIMI FROM dbo.KATEGORITE_SHPENZIMET";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ResManagerDataSet.KATEGORITE_SHPENZIMETDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ResManagerDataSet.KATEGORITE_SHPENZIMETDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ResManagerDataSet.KATEGORITE_SHPENZIMETDataTable dataTable = new ResManagerDataSet.KATEGORITE_SHPENZIMETDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet.KATEGORITE_SHPENZIMETDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet dataSet) {
            return this.Adapter.Update(dataSet, "KATEGORITE_SHPENZIMET");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_KATEGORIASHPENZIMI, string Original_PERSHKRIMI) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_KATEGORIASHPENZIMI));
            if ((Original_PERSHKRIMI == null)) {
                throw new System.ArgumentNullException("Original_PERSHKRIMI");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_PERSHKRIMI));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string PERSHKRIMI) {
            if ((PERSHKRIMI == null)) {
                throw new System.ArgumentNullException("PERSHKRIMI");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(PERSHKRIMI));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string PERSHKRIMI, int Original_ID_KATEGORIASHPENZIMI, string Original_PERSHKRIMI, int ID_KATEGORIASHPENZIMI) {
            if ((PERSHKRIMI == null)) {
                throw new System.ArgumentNullException("PERSHKRIMI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(PERSHKRIMI));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Original_ID_KATEGORIASHPENZIMI));
            if ((Original_PERSHKRIMI == null)) {
                throw new System.ArgumentNullException("Original_PERSHKRIMI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Original_PERSHKRIMI));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(ID_KATEGORIASHPENZIMI));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class KATEGORITE_TAVOLINATTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public KATEGORITE_TAVOLINATTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "KATEGORITE_TAVOLINAT";
            tableMapping.ColumnMappings.Add("ID_KATEGORIATAVOLINA", "ID_KATEGORIATAVOLINA");
            tableMapping.ColumnMappings.Add("PERSHKRIMI", "PERSHKRIMI");
            tableMapping.ColumnMappings.Add("rowguid", "rowguid");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[KATEGORITE_TAVOLINAT] WHERE (([ID_KATEGORIATAVOLINA] = @Origin" +
                "al_ID_KATEGORIATAVOLINA) AND ([PERSHKRIMI] = @Original_PERSHKRIMI) AND ([rowguid" +
                "] = @Original_rowguid))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_KATEGORIATAVOLINA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_KATEGORIATAVOLINA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PERSHKRIMI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PERSHKRIMI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_rowguid", System.Data.SqlDbType.UniqueIdentifier, 0, System.Data.ParameterDirection.Input, 0, 0, "rowguid", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[KATEGORITE_TAVOLINAT] ([PERSHKRIMI], [rowguid]) VALUES (@PERSH" +
                "KRIMI, @rowguid);\r\nSELECT ID_KATEGORIATAVOLINA, PERSHKRIMI, rowguid FROM KATEGOR" +
                "ITE_TAVOLINAT WHERE (ID_KATEGORIATAVOLINA = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PERSHKRIMI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PERSHKRIMI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@rowguid", System.Data.SqlDbType.UniqueIdentifier, 0, System.Data.ParameterDirection.Input, 0, 0, "rowguid", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[KATEGORITE_TAVOLINAT] SET [PERSHKRIMI] = @PERSHKRIMI, [rowguid] = @rowguid WHERE (([ID_KATEGORIATAVOLINA] = @Original_ID_KATEGORIATAVOLINA) AND ([PERSHKRIMI] = @Original_PERSHKRIMI) AND ([rowguid] = @Original_rowguid));
SELECT ID_KATEGORIATAVOLINA, PERSHKRIMI, rowguid FROM KATEGORITE_TAVOLINAT WHERE (ID_KATEGORIATAVOLINA = @ID_KATEGORIATAVOLINA)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PERSHKRIMI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PERSHKRIMI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@rowguid", System.Data.SqlDbType.UniqueIdentifier, 0, System.Data.ParameterDirection.Input, 0, 0, "rowguid", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_KATEGORIATAVOLINA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_KATEGORIATAVOLINA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PERSHKRIMI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PERSHKRIMI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_rowguid", System.Data.SqlDbType.UniqueIdentifier, 0, System.Data.ParameterDirection.Input, 0, 0, "rowguid", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_KATEGORIATAVOLINA", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "ID_KATEGORIATAVOLINA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ResManager.Properties.Settings.Default.ResManagerConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_KATEGORIATAVOLINA, PERSHKRIMI, rowguid FROM dbo.KATEGORITE_TAVOLINAT";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ResManagerDataSet.KATEGORITE_TAVOLINATDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ResManagerDataSet.KATEGORITE_TAVOLINATDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ResManagerDataSet.KATEGORITE_TAVOLINATDataTable dataTable = new ResManagerDataSet.KATEGORITE_TAVOLINATDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet.KATEGORITE_TAVOLINATDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet dataSet) {
            return this.Adapter.Update(dataSet, "KATEGORITE_TAVOLINAT");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_KATEGORIATAVOLINA, string Original_PERSHKRIMI, System.Guid Original_rowguid) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_KATEGORIATAVOLINA));
            if ((Original_PERSHKRIMI == null)) {
                throw new System.ArgumentNullException("Original_PERSHKRIMI");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_PERSHKRIMI));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.Guid)(Original_rowguid));
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string PERSHKRIMI, System.Guid rowguid) {
            if ((PERSHKRIMI == null)) {
                throw new System.ArgumentNullException("PERSHKRIMI");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(PERSHKRIMI));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.Guid)(rowguid));
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string PERSHKRIMI, System.Guid rowguid, int Original_ID_KATEGORIATAVOLINA, string Original_PERSHKRIMI, System.Guid Original_rowguid, int ID_KATEGORIATAVOLINA) {
            if ((PERSHKRIMI == null)) {
                throw new System.ArgumentNullException("PERSHKRIMI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(PERSHKRIMI));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.Guid)(rowguid));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_ID_KATEGORIATAVOLINA));
            if ((Original_PERSHKRIMI == null)) {
                throw new System.ArgumentNullException("Original_PERSHKRIMI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_PERSHKRIMI));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.Guid)(Original_rowguid));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(ID_KATEGORIATAVOLINA));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class KLIENTETTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public KLIENTETTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "KLIENTET";
            tableMapping.ColumnMappings.Add("ID_KLIENTI", "ID_KLIENTI");
            tableMapping.ColumnMappings.Add("ID_GRUPI", "ID_GRUPI");
            tableMapping.ColumnMappings.Add("EMER", "EMER");
            tableMapping.ColumnMappings.Add("MBIEMER", "MBIEMER");
            tableMapping.ColumnMappings.Add("DATELINDJA", "DATELINDJA");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[KLIENTET] WHERE (([ID_KLIENTI] = @Original_ID_KLIENTI) AND ([I" +
                "D_GRUPI] = @Original_ID_GRUPI) AND ([EMER] = @Original_EMER) AND ([MBIEMER] = @O" +
                "riginal_MBIEMER) AND ([DATELINDJA] = @Original_DATELINDJA))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_KLIENTI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_KLIENTI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_GRUPI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_GRUPI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EMER", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMER", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MBIEMER", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MBIEMER", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DATELINDJA", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DATELINDJA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[KLIENTET] ([ID_KLIENTI], [ID_GRUPI], [EMER], [MBIEMER], [DATEL" +
                "INDJA]) VALUES (@ID_KLIENTI, @ID_GRUPI, @EMER, @MBIEMER, @DATELINDJA);\r\nSELECT I" +
                "D_KLIENTI, ID_GRUPI, EMER, MBIEMER, DATELINDJA FROM KLIENTET WHERE (ID_KLIENTI =" +
                " @ID_KLIENTI)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_KLIENTI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_KLIENTI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_GRUPI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_GRUPI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EMER", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMER", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MBIEMER", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MBIEMER", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DATELINDJA", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DATELINDJA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[KLIENTET] SET [ID_KLIENTI] = @ID_KLIENTI, [ID_GRUPI] = @ID_GRUPI, [EMER] = @EMER, [MBIEMER] = @MBIEMER, [DATELINDJA] = @DATELINDJA WHERE (([ID_KLIENTI] = @Original_ID_KLIENTI) AND ([ID_GRUPI] = @Original_ID_GRUPI) AND ([EMER] = @Original_EMER) AND ([MBIEMER] = @Original_MBIEMER) AND ([DATELINDJA] = @Original_DATELINDJA));
SELECT ID_KLIENTI, ID_GRUPI, EMER, MBIEMER, DATELINDJA FROM KLIENTET WHERE (ID_KLIENTI = @ID_KLIENTI)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_KLIENTI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_KLIENTI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_GRUPI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_GRUPI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EMER", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMER", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MBIEMER", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MBIEMER", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DATELINDJA", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DATELINDJA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_KLIENTI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_KLIENTI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_GRUPI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_GRUPI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EMER", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMER", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MBIEMER", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MBIEMER", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DATELINDJA", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DATELINDJA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ResManager.Properties.Settings.Default.ResManagerConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_KLIENTI, ID_GRUPI, EMER, MBIEMER, DATELINDJA FROM dbo.KLIENTET";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ResManagerDataSet.KLIENTETDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ResManagerDataSet.KLIENTETDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ResManagerDataSet.KLIENTETDataTable dataTable = new ResManagerDataSet.KLIENTETDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet.KLIENTETDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet dataSet) {
            return this.Adapter.Update(dataSet, "KLIENTET");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_KLIENTI, int Original_ID_GRUPI, string Original_EMER, string Original_MBIEMER, System.DateTime Original_DATELINDJA) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_KLIENTI));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ID_GRUPI));
            if ((Original_EMER == null)) {
                throw new System.ArgumentNullException("Original_EMER");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_EMER));
            }
            if ((Original_MBIEMER == null)) {
                throw new System.ArgumentNullException("Original_MBIEMER");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_MBIEMER));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_DATELINDJA));
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_KLIENTI, int ID_GRUPI, string EMER, string MBIEMER, System.DateTime DATELINDJA) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_KLIENTI));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ID_GRUPI));
            if ((EMER == null)) {
                throw new System.ArgumentNullException("EMER");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(EMER));
            }
            if ((MBIEMER == null)) {
                throw new System.ArgumentNullException("MBIEMER");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(MBIEMER));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(DATELINDJA));
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_KLIENTI, int ID_GRUPI, string EMER, string MBIEMER, System.DateTime DATELINDJA, int Original_ID_KLIENTI, int Original_ID_GRUPI, string Original_EMER, string Original_MBIEMER, System.DateTime Original_DATELINDJA) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_KLIENTI));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ID_GRUPI));
            if ((EMER == null)) {
                throw new System.ArgumentNullException("EMER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(EMER));
            }
            if ((MBIEMER == null)) {
                throw new System.ArgumentNullException("MBIEMER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(MBIEMER));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(DATELINDJA));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_ID_KLIENTI));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_ID_GRUPI));
            if ((Original_EMER == null)) {
                throw new System.ArgumentNullException("Original_EMER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_EMER));
            }
            if ((Original_MBIEMER == null)) {
                throw new System.ArgumentNullException("Original_MBIEMER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_MBIEMER));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(Original_DATELINDJA));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class KLIENTET_RESTORANTITableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public KLIENTET_RESTORANTITableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "KLIENTET_RESTORANTI";
            tableMapping.ColumnMappings.Add("ID_KLIENTI", "ID_KLIENTI");
            tableMapping.ColumnMappings.Add("EMRI", "EMRI");
            tableMapping.ColumnMappings.Add("MBIEMRI", "MBIEMRI");
            tableMapping.ColumnMappings.Add("TELEFONI", "TELEFONI");
            tableMapping.ColumnMappings.Add("KODI_KLIENTI", "KODI_KLIENTI");
            tableMapping.ColumnMappings.Add("ADRESA", "ADRESA");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[KLIENTET_RESTORANTI] WHERE (([ID_KLIENTI] = @Original_ID_KLIEN" +
                "TI) AND ([EMRI] = @Original_EMRI) AND ([MBIEMRI] = @Original_MBIEMRI) AND ([TELE" +
                "FONI] = @Original_TELEFONI) AND ([KODI_KLIENTI] = @Original_KODI_KLIENTI))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_KLIENTI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_KLIENTI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EMRI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMRI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MBIEMRI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MBIEMRI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TELEFONI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TELEFONI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_KODI_KLIENTI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "KODI_KLIENTI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[KLIENTET_RESTORANTI] ([ID_KLIENTI], [EMRI], [MBIEMRI], [TELEFONI], [KODI_KLIENTI], [ADRESA]) VALUES (@ID_KLIENTI, @EMRI, @MBIEMRI, @TELEFONI, @KODI_KLIENTI, @ADRESA);
SELECT ID_KLIENTI, EMRI, MBIEMRI, TELEFONI, KODI_KLIENTI, ADRESA FROM KLIENTET_RESTORANTI WHERE (ID_KLIENTI = @ID_KLIENTI)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_KLIENTI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_KLIENTI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EMRI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMRI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MBIEMRI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MBIEMRI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TELEFONI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TELEFONI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@KODI_KLIENTI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "KODI_KLIENTI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ADRESA", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ADRESA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[KLIENTET_RESTORANTI] SET [ID_KLIENTI] = @ID_KLIENTI, [EMRI] = @EMRI, [MBIEMRI] = @MBIEMRI, [TELEFONI] = @TELEFONI, [KODI_KLIENTI] = @KODI_KLIENTI, [ADRESA] = @ADRESA WHERE (([ID_KLIENTI] = @Original_ID_KLIENTI) AND ([EMRI] = @Original_EMRI) AND ([MBIEMRI] = @Original_MBIEMRI) AND ([TELEFONI] = @Original_TELEFONI) AND ([KODI_KLIENTI] = @Original_KODI_KLIENTI));
SELECT ID_KLIENTI, EMRI, MBIEMRI, TELEFONI, KODI_KLIENTI, ADRESA FROM KLIENTET_RESTORANTI WHERE (ID_KLIENTI = @ID_KLIENTI)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_KLIENTI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_KLIENTI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EMRI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMRI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MBIEMRI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MBIEMRI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TELEFONI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TELEFONI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@KODI_KLIENTI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "KODI_KLIENTI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ADRESA", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ADRESA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_KLIENTI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_KLIENTI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EMRI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMRI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MBIEMRI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MBIEMRI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TELEFONI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TELEFONI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_KODI_KLIENTI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "KODI_KLIENTI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ResManager.Properties.Settings.Default.ResManagerConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_KLIENTI, EMRI, MBIEMRI, TELEFONI, KODI_KLIENTI, ADRESA FROM dbo.KLIENTE" +
                "T_RESTORANTI";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ResManagerDataSet.KLIENTET_RESTORANTIDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ResManagerDataSet.KLIENTET_RESTORANTIDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ResManagerDataSet.KLIENTET_RESTORANTIDataTable dataTable = new ResManagerDataSet.KLIENTET_RESTORANTIDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet.KLIENTET_RESTORANTIDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet dataSet) {
            return this.Adapter.Update(dataSet, "KLIENTET_RESTORANTI");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_KLIENTI, string Original_EMRI, string Original_MBIEMRI, string Original_TELEFONI, string Original_KODI_KLIENTI) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_KLIENTI));
            if ((Original_EMRI == null)) {
                throw new System.ArgumentNullException("Original_EMRI");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_EMRI));
            }
            if ((Original_MBIEMRI == null)) {
                throw new System.ArgumentNullException("Original_MBIEMRI");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_MBIEMRI));
            }
            if ((Original_TELEFONI == null)) {
                throw new System.ArgumentNullException("Original_TELEFONI");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_TELEFONI));
            }
            if ((Original_KODI_KLIENTI == null)) {
                throw new System.ArgumentNullException("Original_KODI_KLIENTI");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_KODI_KLIENTI));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_KLIENTI, string EMRI, string MBIEMRI, string TELEFONI, string KODI_KLIENTI, string ADRESA) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_KLIENTI));
            if ((EMRI == null)) {
                throw new System.ArgumentNullException("EMRI");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(EMRI));
            }
            if ((MBIEMRI == null)) {
                throw new System.ArgumentNullException("MBIEMRI");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(MBIEMRI));
            }
            if ((TELEFONI == null)) {
                throw new System.ArgumentNullException("TELEFONI");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(TELEFONI));
            }
            if ((KODI_KLIENTI == null)) {
                throw new System.ArgumentNullException("KODI_KLIENTI");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(KODI_KLIENTI));
            }
            if ((ADRESA == null)) {
                throw new System.ArgumentNullException("ADRESA");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(ADRESA));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_KLIENTI, string EMRI, string MBIEMRI, string TELEFONI, string KODI_KLIENTI, string ADRESA, int Original_ID_KLIENTI, string Original_EMRI, string Original_MBIEMRI, string Original_TELEFONI, string Original_KODI_KLIENTI) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_KLIENTI));
            if ((EMRI == null)) {
                throw new System.ArgumentNullException("EMRI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(EMRI));
            }
            if ((MBIEMRI == null)) {
                throw new System.ArgumentNullException("MBIEMRI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(MBIEMRI));
            }
            if ((TELEFONI == null)) {
                throw new System.ArgumentNullException("TELEFONI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(TELEFONI));
            }
            if ((KODI_KLIENTI == null)) {
                throw new System.ArgumentNullException("KODI_KLIENTI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(KODI_KLIENTI));
            }
            if ((ADRESA == null)) {
                throw new System.ArgumentNullException("ADRESA");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(ADRESA));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_ID_KLIENTI));
            if ((Original_EMRI == null)) {
                throw new System.ArgumentNullException("Original_EMRI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_EMRI));
            }
            if ((Original_MBIEMRI == null)) {
                throw new System.ArgumentNullException("Original_MBIEMRI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_MBIEMRI));
            }
            if ((Original_TELEFONI == null)) {
                throw new System.ArgumentNullException("Original_TELEFONI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_TELEFONI));
            }
            if ((Original_KODI_KLIENTI == null)) {
                throw new System.ArgumentNullException("Original_KODI_KLIENTI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_KODI_KLIENTI));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class NJESITETableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public NJESITETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "NJESITE";
            tableMapping.ColumnMappings.Add("ID_NJESIA", "ID_NJESIA");
            tableMapping.ColumnMappings.Add("NJESIA", "NJESIA");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[NJESITE] WHERE (([ID_NJESIA] = @Original_ID_NJESIA) AND ([NJES" +
                "IA] = @Original_NJESIA))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_NJESIA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_NJESIA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NJESIA", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "NJESIA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[NJESITE] ([NJESIA]) VALUES (@NJESIA);\r\nSELECT ID_NJESIA, NJESI" +
                "A FROM NJESITE WHERE (ID_NJESIA = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NJESIA", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "NJESIA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[NJESITE] SET [NJESIA] = @NJESIA WHERE (([ID_NJESIA] = @Original_ID_" +
                "NJESIA) AND ([NJESIA] = @Original_NJESIA));\r\nSELECT ID_NJESIA, NJESIA FROM NJESI" +
                "TE WHERE (ID_NJESIA = @ID_NJESIA)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NJESIA", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "NJESIA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_NJESIA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_NJESIA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NJESIA", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "NJESIA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_NJESIA", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "ID_NJESIA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ResManager.Properties.Settings.Default.ResManagerConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_NJESIA, NJESIA FROM dbo.NJESITE";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ResManagerDataSet.NJESITEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ResManagerDataSet.NJESITEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ResManagerDataSet.NJESITEDataTable dataTable = new ResManagerDataSet.NJESITEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet.NJESITEDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet dataSet) {
            return this.Adapter.Update(dataSet, "NJESITE");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_NJESIA, string Original_NJESIA) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_NJESIA));
            if ((Original_NJESIA == null)) {
                throw new System.ArgumentNullException("Original_NJESIA");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_NJESIA));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string NJESIA) {
            if ((NJESIA == null)) {
                throw new System.ArgumentNullException("NJESIA");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(NJESIA));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string NJESIA, int Original_ID_NJESIA, string Original_NJESIA, int ID_NJESIA) {
            if ((NJESIA == null)) {
                throw new System.ArgumentNullException("NJESIA");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(NJESIA));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Original_ID_NJESIA));
            if ((Original_NJESIA == null)) {
                throw new System.ArgumentNullException("Original_NJESIA");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Original_NJESIA));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(ID_NJESIA));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class OFERTATTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public OFERTATTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "OFERTAT";
            tableMapping.ColumnMappings.Add("ID_OFERTA", "ID_OFERTA");
            tableMapping.ColumnMappings.Add("ID_ARTIKULLI", "ID_ARTIKULLI");
            tableMapping.ColumnMappings.Add("SASIA_ARTIKULLI", "SASIA_ARTIKULLI");
            tableMapping.ColumnMappings.Add("ID_RECETA", "ID_RECETA");
            tableMapping.ColumnMappings.Add("SASIA_RECETA", "SASIA_RECETA");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[OFERTAT] WHERE (([ID_OFERTA] = @Original_ID_OFERTA) AND ([ID_A" +
                "RTIKULLI] = @Original_ID_ARTIKULLI) AND ([SASIA_ARTIKULLI] = @Original_SASIA_ART" +
                "IKULLI) AND ([ID_RECETA] = @Original_ID_RECETA) AND ([SASIA_RECETA] = @Original_" +
                "SASIA_RECETA))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_OFERTA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_OFERTA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_ARTIKULLI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_ARTIKULLI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SASIA_ARTIKULLI", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "SASIA_ARTIKULLI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_RECETA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_RECETA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SASIA_RECETA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SASIA_RECETA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[OFERTAT] ([ID_OFERTA], [ID_ARTIKULLI], [SASIA_ARTIKULLI], [ID_RECETA], [SASIA_RECETA]) VALUES (@ID_OFERTA, @ID_ARTIKULLI, @SASIA_ARTIKULLI, @ID_RECETA, @SASIA_RECETA);
SELECT ID_OFERTA, ID_ARTIKULLI, SASIA_ARTIKULLI, ID_RECETA, SASIA_RECETA FROM OFERTAT WHERE (ID_OFERTA = @ID_OFERTA)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_OFERTA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_OFERTA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_ARTIKULLI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_ARTIKULLI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SASIA_ARTIKULLI", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "SASIA_ARTIKULLI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_RECETA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_RECETA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SASIA_RECETA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SASIA_RECETA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[OFERTAT] SET [ID_OFERTA] = @ID_OFERTA, [ID_ARTIKULLI] = @ID_ARTIKULLI, [SASIA_ARTIKULLI] = @SASIA_ARTIKULLI, [ID_RECETA] = @ID_RECETA, [SASIA_RECETA] = @SASIA_RECETA WHERE (([ID_OFERTA] = @Original_ID_OFERTA) AND ([ID_ARTIKULLI] = @Original_ID_ARTIKULLI) AND ([SASIA_ARTIKULLI] = @Original_SASIA_ARTIKULLI) AND ([ID_RECETA] = @Original_ID_RECETA) AND ([SASIA_RECETA] = @Original_SASIA_RECETA));
SELECT ID_OFERTA, ID_ARTIKULLI, SASIA_ARTIKULLI, ID_RECETA, SASIA_RECETA FROM OFERTAT WHERE (ID_OFERTA = @ID_OFERTA)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_OFERTA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_OFERTA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_ARTIKULLI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_ARTIKULLI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SASIA_ARTIKULLI", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "SASIA_ARTIKULLI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_RECETA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_RECETA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SASIA_RECETA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SASIA_RECETA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_OFERTA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_OFERTA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_ARTIKULLI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_ARTIKULLI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SASIA_ARTIKULLI", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "SASIA_ARTIKULLI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_RECETA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_RECETA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SASIA_RECETA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SASIA_RECETA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ResManager.Properties.Settings.Default.ResManagerConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_OFERTA, ID_ARTIKULLI, SASIA_ARTIKULLI, ID_RECETA, SASIA_RECETA FROM dbo" +
                ".OFERTAT";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ResManagerDataSet.OFERTATDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ResManagerDataSet.OFERTATDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ResManagerDataSet.OFERTATDataTable dataTable = new ResManagerDataSet.OFERTATDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet.OFERTATDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet dataSet) {
            return this.Adapter.Update(dataSet, "OFERTAT");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_OFERTA, int Original_ID_ARTIKULLI, double Original_SASIA_ARTIKULLI, int Original_ID_RECETA, int Original_SASIA_RECETA) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_OFERTA));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ID_ARTIKULLI));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((double)(Original_SASIA_ARTIKULLI));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_ID_RECETA));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_SASIA_RECETA));
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_OFERTA, int ID_ARTIKULLI, double SASIA_ARTIKULLI, int ID_RECETA, int SASIA_RECETA) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_OFERTA));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ID_ARTIKULLI));
            this.Adapter.InsertCommand.Parameters[2].Value = ((double)(SASIA_ARTIKULLI));
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(ID_RECETA));
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(SASIA_RECETA));
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_OFERTA, int ID_ARTIKULLI, double SASIA_ARTIKULLI, int ID_RECETA, int SASIA_RECETA, int Original_ID_OFERTA, int Original_ID_ARTIKULLI, double Original_SASIA_ARTIKULLI, int Original_ID_RECETA, int Original_SASIA_RECETA) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_OFERTA));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ID_ARTIKULLI));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((double)(SASIA_ARTIKULLI));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(ID_RECETA));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(SASIA_RECETA));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_ID_OFERTA));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_ID_ARTIKULLI));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((double)(Original_SASIA_ARTIKULLI));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_ID_RECETA));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_SASIA_RECETA));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class OFERTAT_BLERJETableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public OFERTAT_BLERJETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "OFERTAT_BLERJE";
            tableMapping.ColumnMappings.Add("ID_BLERJEARTIKUJ", "ID_BLERJEARTIKUJ");
            tableMapping.ColumnMappings.Add("ID_ARTIKULLIFILLESTAR", "ID_ARTIKULLIFILLESTAR");
            tableMapping.ColumnMappings.Add("SASIA_KUSHT_OFERTA", "SASIA_KUSHT_OFERTA");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[OFERTAT_BLERJE] WHERE (([ID_BLERJEARTIKUJ] = @Original_ID_BLER" +
                "JEARTIKUJ) AND ([ID_ARTIKULLIFILLESTAR] = @Original_ID_ARTIKULLIFILLESTAR) AND (" +
                "[SASIA_KUSHT_OFERTA] = @Original_SASIA_KUSHT_OFERTA))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_BLERJEARTIKUJ", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_BLERJEARTIKUJ", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_ARTIKULLIFILLESTAR", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_ARTIKULLIFILLESTAR", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SASIA_KUSHT_OFERTA", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "SASIA_KUSHT_OFERTA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[OFERTAT_BLERJE] ([ID_BLERJEARTIKUJ], [ID_ARTIKULLIFILLESTAR], [SASIA_KUSHT_OFERTA]) VALUES (@ID_BLERJEARTIKUJ, @ID_ARTIKULLIFILLESTAR, @SASIA_KUSHT_OFERTA);
SELECT ID_BLERJEARTIKUJ, ID_ARTIKULLIFILLESTAR, SASIA_KUSHT_OFERTA FROM OFERTAT_BLERJE WHERE (ID_BLERJEARTIKUJ = @ID_BLERJEARTIKUJ)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_BLERJEARTIKUJ", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_BLERJEARTIKUJ", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_ARTIKULLIFILLESTAR", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_ARTIKULLIFILLESTAR", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SASIA_KUSHT_OFERTA", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "SASIA_KUSHT_OFERTA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[OFERTAT_BLERJE] SET [ID_BLERJEARTIKUJ] = @ID_BLERJEARTIKUJ, [ID_ARTIKULLIFILLESTAR] = @ID_ARTIKULLIFILLESTAR, [SASIA_KUSHT_OFERTA] = @SASIA_KUSHT_OFERTA WHERE (([ID_BLERJEARTIKUJ] = @Original_ID_BLERJEARTIKUJ) AND ([ID_ARTIKULLIFILLESTAR] = @Original_ID_ARTIKULLIFILLESTAR) AND ([SASIA_KUSHT_OFERTA] = @Original_SASIA_KUSHT_OFERTA));
SELECT ID_BLERJEARTIKUJ, ID_ARTIKULLIFILLESTAR, SASIA_KUSHT_OFERTA FROM OFERTAT_BLERJE WHERE (ID_BLERJEARTIKUJ = @ID_BLERJEARTIKUJ)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_BLERJEARTIKUJ", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_BLERJEARTIKUJ", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_ARTIKULLIFILLESTAR", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_ARTIKULLIFILLESTAR", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SASIA_KUSHT_OFERTA", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "SASIA_KUSHT_OFERTA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_BLERJEARTIKUJ", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_BLERJEARTIKUJ", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_ARTIKULLIFILLESTAR", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_ARTIKULLIFILLESTAR", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SASIA_KUSHT_OFERTA", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "SASIA_KUSHT_OFERTA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ResManager.Properties.Settings.Default.ResManagerConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_BLERJEARTIKUJ, ID_ARTIKULLIFILLESTAR, SASIA_KUSHT_OFERTA FROM dbo.OFERT" +
                "AT_BLERJE";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ResManagerDataSet.OFERTAT_BLERJEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ResManagerDataSet.OFERTAT_BLERJEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ResManagerDataSet.OFERTAT_BLERJEDataTable dataTable = new ResManagerDataSet.OFERTAT_BLERJEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet.OFERTAT_BLERJEDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet dataSet) {
            return this.Adapter.Update(dataSet, "OFERTAT_BLERJE");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_BLERJEARTIKUJ, int Original_ID_ARTIKULLIFILLESTAR, double Original_SASIA_KUSHT_OFERTA) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_BLERJEARTIKUJ));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ID_ARTIKULLIFILLESTAR));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((double)(Original_SASIA_KUSHT_OFERTA));
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_BLERJEARTIKUJ, int ID_ARTIKULLIFILLESTAR, double SASIA_KUSHT_OFERTA) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_BLERJEARTIKUJ));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ID_ARTIKULLIFILLESTAR));
            this.Adapter.InsertCommand.Parameters[2].Value = ((double)(SASIA_KUSHT_OFERTA));
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_BLERJEARTIKUJ, int ID_ARTIKULLIFILLESTAR, double SASIA_KUSHT_OFERTA, int Original_ID_BLERJEARTIKUJ, int Original_ID_ARTIKULLIFILLESTAR, double Original_SASIA_KUSHT_OFERTA) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_BLERJEARTIKUJ));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ID_ARTIKULLIFILLESTAR));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((double)(SASIA_KUSHT_OFERTA));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_ID_BLERJEARTIKUJ));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_ID_ARTIKULLIFILLESTAR));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(Original_SASIA_KUSHT_OFERTA));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PERIUDHATTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PERIUDHATTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PERIUDHAT";
            tableMapping.ColumnMappings.Add("ORE_FILLIMI", "ORE_FILLIMI");
            tableMapping.ColumnMappings.Add("ORE_MBARIMI", "ORE_MBARIMI");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[PERIUDHAT] ([ORE_FILLIMI], [ORE_MBARIMI]) VALUES (@ORE_FILLIMI" +
                ", @ORE_MBARIMI)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ORE_FILLIMI", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "ORE_FILLIMI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ORE_MBARIMI", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "ORE_MBARIMI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ResManager.Properties.Settings.Default.ResManagerConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ORE_FILLIMI, ORE_MBARIMI FROM dbo.PERIUDHAT";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ResManagerDataSet.PERIUDHATDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ResManagerDataSet.PERIUDHATDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ResManagerDataSet.PERIUDHATDataTable dataTable = new ResManagerDataSet.PERIUDHATDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet.PERIUDHATDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet dataSet) {
            return this.Adapter.Update(dataSet, "PERIUDHAT");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.DateTime ORE_FILLIMI, System.DateTime ORE_MBARIMI) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(ORE_FILLIMI));
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(ORE_MBARIMI));
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PERSONELITableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PERSONELITableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PERSONELI";
            tableMapping.ColumnMappings.Add("ID_PERSONELI", "ID_PERSONELI");
            tableMapping.ColumnMappings.Add("EMRI", "EMRI");
            tableMapping.ColumnMappings.Add("MBIEMRI", "MBIEMRI");
            tableMapping.ColumnMappings.Add("TELEFONI", "TELEFONI");
            tableMapping.ColumnMappings.Add("ID_ROLI", "ID_ROLI");
            tableMapping.ColumnMappings.Add("PERDORUESI", "PERDORUESI");
            tableMapping.ColumnMappings.Add("FJALEKALIMI", "FJALEKALIMI");
            tableMapping.ColumnMappings.Add("EMAILI", "EMAILI");
            tableMapping.ColumnMappings.Add("ADRESA", "ADRESA");
            tableMapping.ColumnMappings.Add("FOTO", "FOTO");
            tableMapping.ColumnMappings.Add("AKTIV", "AKTIV");
            tableMapping.ColumnMappings.Add("FOTO_IMAZH", "FOTO_IMAZH");
            tableMapping.ColumnMappings.Add("DISPONUESHEM", "DISPONUESHEM");
            tableMapping.ColumnMappings.Add("rowguid", "rowguid");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[PERSONELI] WHERE (([ID_PERSONELI] = @Original_ID_PERSONELI) AND ([EMRI] = @Original_EMRI) AND ([MBIEMRI] = @Original_MBIEMRI) AND ([TELEFONI] = @Original_TELEFONI) AND ([ID_ROLI] = @Original_ID_ROLI) AND ([PERDORUESI] = @Original_PERDORUESI) AND ([FJALEKALIMI] = @Original_FJALEKALIMI) AND ([EMAILI] = @Original_EMAILI) AND ([AKTIV] = @Original_AKTIV) AND ([DISPONUESHEM] = @Original_DISPONUESHEM) AND ([rowguid] = @Original_rowguid))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_PERSONELI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_PERSONELI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EMRI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMRI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MBIEMRI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MBIEMRI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TELEFONI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TELEFONI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_ROLI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_ROLI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PERDORUESI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PERDORUESI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_FJALEKALIMI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "FJALEKALIMI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EMAILI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMAILI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_AKTIV", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "AKTIV", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DISPONUESHEM", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "DISPONUESHEM", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_rowguid", System.Data.SqlDbType.UniqueIdentifier, 0, System.Data.ParameterDirection.Input, 0, 0, "rowguid", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[PERSONELI] ([EMRI], [MBIEMRI], [TELEFONI], [ID_ROLI], [PERDORUESI], [FJALEKALIMI], [EMAILI], [ADRESA], [FOTO], [AKTIV], [FOTO_IMAZH], [DISPONUESHEM], [rowguid]) VALUES (@EMRI, @MBIEMRI, @TELEFONI, @ID_ROLI, @PERDORUESI, @FJALEKALIMI, @EMAILI, @ADRESA, @FOTO, @AKTIV, @FOTO_IMAZH, @DISPONUESHEM, @rowguid);
SELECT ID_PERSONELI, EMRI, MBIEMRI, TELEFONI, ID_ROLI, PERDORUESI, FJALEKALIMI, EMAILI, ADRESA, FOTO, AKTIV, FOTO_IMAZH, DISPONUESHEM, rowguid FROM PERSONELI WHERE (ID_PERSONELI = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EMRI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMRI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MBIEMRI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MBIEMRI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TELEFONI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TELEFONI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_ROLI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_ROLI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PERDORUESI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PERDORUESI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@FJALEKALIMI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "FJALEKALIMI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EMAILI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMAILI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ADRESA", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ADRESA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@FOTO", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "FOTO", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@AKTIV", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "AKTIV", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@FOTO_IMAZH", System.Data.SqlDbType.Image, 0, System.Data.ParameterDirection.Input, 0, 0, "FOTO_IMAZH", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DISPONUESHEM", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "DISPONUESHEM", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@rowguid", System.Data.SqlDbType.UniqueIdentifier, 0, System.Data.ParameterDirection.Input, 0, 0, "rowguid", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[PERSONELI] SET [EMRI] = @EMRI, [MBIEMRI] = @MBIEMRI, [TELEFONI] = @TELEFONI, [ID_ROLI] = @ID_ROLI, [PERDORUESI] = @PERDORUESI, [FJALEKALIMI] = @FJALEKALIMI, [EMAILI] = @EMAILI, [ADRESA] = @ADRESA, [FOTO] = @FOTO, [AKTIV] = @AKTIV, [FOTO_IMAZH] = @FOTO_IMAZH, [DISPONUESHEM] = @DISPONUESHEM, [rowguid] = @rowguid WHERE (([ID_PERSONELI] = @Original_ID_PERSONELI) AND ([EMRI] = @Original_EMRI) AND ([MBIEMRI] = @Original_MBIEMRI) AND ([TELEFONI] = @Original_TELEFONI) AND ([ID_ROLI] = @Original_ID_ROLI) AND ([PERDORUESI] = @Original_PERDORUESI) AND ([FJALEKALIMI] = @Original_FJALEKALIMI) AND ([EMAILI] = @Original_EMAILI) AND ([AKTIV] = @Original_AKTIV) AND ([DISPONUESHEM] = @Original_DISPONUESHEM) AND ([rowguid] = @Original_rowguid));
SELECT ID_PERSONELI, EMRI, MBIEMRI, TELEFONI, ID_ROLI, PERDORUESI, FJALEKALIMI, EMAILI, ADRESA, FOTO, AKTIV, FOTO_IMAZH, DISPONUESHEM, rowguid FROM PERSONELI WHERE (ID_PERSONELI = @ID_PERSONELI)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EMRI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMRI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MBIEMRI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MBIEMRI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TELEFONI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TELEFONI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_ROLI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_ROLI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PERDORUESI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PERDORUESI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@FJALEKALIMI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "FJALEKALIMI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EMAILI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMAILI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ADRESA", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ADRESA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@FOTO", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "FOTO", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@AKTIV", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "AKTIV", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@FOTO_IMAZH", System.Data.SqlDbType.Image, 0, System.Data.ParameterDirection.Input, 0, 0, "FOTO_IMAZH", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DISPONUESHEM", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "DISPONUESHEM", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@rowguid", System.Data.SqlDbType.UniqueIdentifier, 0, System.Data.ParameterDirection.Input, 0, 0, "rowguid", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_PERSONELI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_PERSONELI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EMRI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMRI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MBIEMRI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MBIEMRI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TELEFONI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TELEFONI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_ROLI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_ROLI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PERDORUESI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PERDORUESI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_FJALEKALIMI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "FJALEKALIMI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EMAILI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMAILI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_AKTIV", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "AKTIV", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DISPONUESHEM", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "DISPONUESHEM", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_rowguid", System.Data.SqlDbType.UniqueIdentifier, 0, System.Data.ParameterDirection.Input, 0, 0, "rowguid", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_PERSONELI", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "ID_PERSONELI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ResManager.Properties.Settings.Default.ResManagerConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_PERSONELI, EMRI, MBIEMRI, TELEFONI, ID_ROLI, PERDORUESI, FJALEKALIMI, E" +
                "MAILI, ADRESA, FOTO, AKTIV, FOTO_IMAZH, DISPONUESHEM, rowguid FROM dbo.PERSONELI" +
                "";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ResManagerDataSet.PERSONELIDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ResManagerDataSet.PERSONELIDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ResManagerDataSet.PERSONELIDataTable dataTable = new ResManagerDataSet.PERSONELIDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet.PERSONELIDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet dataSet) {
            return this.Adapter.Update(dataSet, "PERSONELI");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_PERSONELI, string Original_EMRI, string Original_MBIEMRI, string Original_TELEFONI, int Original_ID_ROLI, string Original_PERDORUESI, string Original_FJALEKALIMI, string Original_EMAILI, bool Original_AKTIV, bool Original_DISPONUESHEM, System.Guid Original_rowguid) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_PERSONELI));
            if ((Original_EMRI == null)) {
                throw new System.ArgumentNullException("Original_EMRI");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_EMRI));
            }
            if ((Original_MBIEMRI == null)) {
                throw new System.ArgumentNullException("Original_MBIEMRI");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_MBIEMRI));
            }
            if ((Original_TELEFONI == null)) {
                throw new System.ArgumentNullException("Original_TELEFONI");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_TELEFONI));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_ID_ROLI));
            if ((Original_PERDORUESI == null)) {
                throw new System.ArgumentNullException("Original_PERDORUESI");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_PERDORUESI));
            }
            if ((Original_FJALEKALIMI == null)) {
                throw new System.ArgumentNullException("Original_FJALEKALIMI");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_FJALEKALIMI));
            }
            if ((Original_EMAILI == null)) {
                throw new System.ArgumentNullException("Original_EMAILI");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_EMAILI));
            }
            this.Adapter.DeleteCommand.Parameters[8].Value = ((bool)(Original_AKTIV));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((bool)(Original_DISPONUESHEM));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((System.Guid)(Original_rowguid));
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string EMRI, string MBIEMRI, string TELEFONI, int ID_ROLI, string PERDORUESI, string FJALEKALIMI, string EMAILI, string ADRESA, string FOTO, bool AKTIV, byte[] FOTO_IMAZH, bool DISPONUESHEM, System.Guid rowguid) {
            if ((EMRI == null)) {
                throw new System.ArgumentNullException("EMRI");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(EMRI));
            }
            if ((MBIEMRI == null)) {
                throw new System.ArgumentNullException("MBIEMRI");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(MBIEMRI));
            }
            if ((TELEFONI == null)) {
                throw new System.ArgumentNullException("TELEFONI");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(TELEFONI));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(ID_ROLI));
            if ((PERDORUESI == null)) {
                throw new System.ArgumentNullException("PERDORUESI");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(PERDORUESI));
            }
            if ((FJALEKALIMI == null)) {
                throw new System.ArgumentNullException("FJALEKALIMI");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(FJALEKALIMI));
            }
            if ((EMAILI == null)) {
                throw new System.ArgumentNullException("EMAILI");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(EMAILI));
            }
            if ((ADRESA == null)) {
                throw new System.ArgumentNullException("ADRESA");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(ADRESA));
            }
            if ((FOTO == null)) {
                throw new System.ArgumentNullException("FOTO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(FOTO));
            }
            this.Adapter.InsertCommand.Parameters[9].Value = ((bool)(AKTIV));
            if ((FOTO_IMAZH == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((byte[])(FOTO_IMAZH));
            }
            this.Adapter.InsertCommand.Parameters[11].Value = ((bool)(DISPONUESHEM));
            this.Adapter.InsertCommand.Parameters[12].Value = ((System.Guid)(rowguid));
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string EMRI, 
                    string MBIEMRI, 
                    string TELEFONI, 
                    int ID_ROLI, 
                    string PERDORUESI, 
                    string FJALEKALIMI, 
                    string EMAILI, 
                    string ADRESA, 
                    string FOTO, 
                    bool AKTIV, 
                    byte[] FOTO_IMAZH, 
                    bool DISPONUESHEM, 
                    System.Guid rowguid, 
                    int Original_ID_PERSONELI, 
                    string Original_EMRI, 
                    string Original_MBIEMRI, 
                    string Original_TELEFONI, 
                    int Original_ID_ROLI, 
                    string Original_PERDORUESI, 
                    string Original_FJALEKALIMI, 
                    string Original_EMAILI, 
                    bool Original_AKTIV, 
                    bool Original_DISPONUESHEM, 
                    System.Guid Original_rowguid, 
                    int ID_PERSONELI) {
            if ((EMRI == null)) {
                throw new System.ArgumentNullException("EMRI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(EMRI));
            }
            if ((MBIEMRI == null)) {
                throw new System.ArgumentNullException("MBIEMRI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(MBIEMRI));
            }
            if ((TELEFONI == null)) {
                throw new System.ArgumentNullException("TELEFONI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(TELEFONI));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(ID_ROLI));
            if ((PERDORUESI == null)) {
                throw new System.ArgumentNullException("PERDORUESI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(PERDORUESI));
            }
            if ((FJALEKALIMI == null)) {
                throw new System.ArgumentNullException("FJALEKALIMI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(FJALEKALIMI));
            }
            if ((EMAILI == null)) {
                throw new System.ArgumentNullException("EMAILI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(EMAILI));
            }
            if ((ADRESA == null)) {
                throw new System.ArgumentNullException("ADRESA");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(ADRESA));
            }
            if ((FOTO == null)) {
                throw new System.ArgumentNullException("FOTO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(FOTO));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((bool)(AKTIV));
            if ((FOTO_IMAZH == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((byte[])(FOTO_IMAZH));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((bool)(DISPONUESHEM));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((System.Guid)(rowguid));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Original_ID_PERSONELI));
            if ((Original_EMRI == null)) {
                throw new System.ArgumentNullException("Original_EMRI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_EMRI));
            }
            if ((Original_MBIEMRI == null)) {
                throw new System.ArgumentNullException("Original_MBIEMRI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_MBIEMRI));
            }
            if ((Original_TELEFONI == null)) {
                throw new System.ArgumentNullException("Original_TELEFONI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_TELEFONI));
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Original_ID_ROLI));
            if ((Original_PERDORUESI == null)) {
                throw new System.ArgumentNullException("Original_PERDORUESI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_PERDORUESI));
            }
            if ((Original_FJALEKALIMI == null)) {
                throw new System.ArgumentNullException("Original_FJALEKALIMI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_FJALEKALIMI));
            }
            if ((Original_EMAILI == null)) {
                throw new System.ArgumentNullException("Original_EMAILI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_EMAILI));
            }
            this.Adapter.UpdateCommand.Parameters[21].Value = ((bool)(Original_AKTIV));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((bool)(Original_DISPONUESHEM));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((System.Guid)(Original_rowguid));
            this.Adapter.UpdateCommand.Parameters[24].Value = ((int)(ID_PERSONELI));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class RECETA_ARTIKUJTTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public RECETA_ARTIKUJTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "RECETA_ARTIKUJT";
            tableMapping.ColumnMappings.Add("ID_RECETA", "ID_RECETA");
            tableMapping.ColumnMappings.Add("ID_ARTIKULLI", "ID_ARTIKULLI");
            tableMapping.ColumnMappings.Add("SASIA", "SASIA");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[RECETA_ARTIKUJT] WHERE (([ID_RECETA] = @Original_ID_RECETA) AN" +
                "D ([ID_ARTIKULLI] = @Original_ID_ARTIKULLI) AND ([SASIA] = @Original_SASIA))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_RECETA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_RECETA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_ARTIKULLI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_ARTIKULLI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SASIA", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "SASIA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[RECETA_ARTIKUJT] ([ID_RECETA], [ID_ARTIKULLI], [SASIA]) VALUES" +
                " (@ID_RECETA, @ID_ARTIKULLI, @SASIA);\r\nSELECT ID_RECETA, ID_ARTIKULLI, SASIA FRO" +
                "M RECETA_ARTIKUJT WHERE (ID_ARTIKULLI = @ID_ARTIKULLI) AND (ID_RECETA = @ID_RECE" +
                "TA)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_RECETA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_RECETA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_ARTIKULLI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_ARTIKULLI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SASIA", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "SASIA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[RECETA_ARTIKUJT] SET [ID_RECETA] = @ID_RECETA, [ID_ARTIKULLI] = @ID_ARTIKULLI, [SASIA] = @SASIA WHERE (([ID_RECETA] = @Original_ID_RECETA) AND ([ID_ARTIKULLI] = @Original_ID_ARTIKULLI) AND ([SASIA] = @Original_SASIA));
SELECT ID_RECETA, ID_ARTIKULLI, SASIA FROM RECETA_ARTIKUJT WHERE (ID_ARTIKULLI = @ID_ARTIKULLI) AND (ID_RECETA = @ID_RECETA)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_RECETA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_RECETA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_ARTIKULLI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_ARTIKULLI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SASIA", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "SASIA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_RECETA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_RECETA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_ARTIKULLI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_ARTIKULLI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SASIA", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "SASIA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ResManager.Properties.Settings.Default.ResManagerConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_RECETA, ID_ARTIKULLI, SASIA FROM dbo.RECETA_ARTIKUJT";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ResManagerDataSet.RECETA_ARTIKUJTDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ResManagerDataSet.RECETA_ARTIKUJTDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ResManagerDataSet.RECETA_ARTIKUJTDataTable dataTable = new ResManagerDataSet.RECETA_ARTIKUJTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet.RECETA_ARTIKUJTDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet dataSet) {
            return this.Adapter.Update(dataSet, "RECETA_ARTIKUJT");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_RECETA, int Original_ID_ARTIKULLI, double Original_SASIA) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_RECETA));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ID_ARTIKULLI));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((double)(Original_SASIA));
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_RECETA, int ID_ARTIKULLI, double SASIA) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_RECETA));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ID_ARTIKULLI));
            this.Adapter.InsertCommand.Parameters[2].Value = ((double)(SASIA));
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_RECETA, int ID_ARTIKULLI, double SASIA, int Original_ID_RECETA, int Original_ID_ARTIKULLI, double Original_SASIA) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_RECETA));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ID_ARTIKULLI));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((double)(SASIA));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_ID_RECETA));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_ID_ARTIKULLI));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(Original_SASIA));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class RECETATTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public RECETATTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "RECETAT";
            tableMapping.ColumnMappings.Add("ID_RECETA", "ID_RECETA");
            tableMapping.ColumnMappings.Add("EMRI", "EMRI");
            tableMapping.ColumnMappings.Add("ID_KATEGORIARECETA", "ID_KATEGORIARECETA");
            tableMapping.ColumnMappings.Add("DISPONUESHEM", "DISPONUESHEM");
            tableMapping.ColumnMappings.Add("AKTIVE", "AKTIVE");
            tableMapping.ColumnMappings.Add("rowguid", "rowguid");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[RECETAT] WHERE (([ID_RECETA] = @Original_ID_RECETA) AND ([EMRI] = @Original_EMRI) AND ([ID_KATEGORIARECETA] = @Original_ID_KATEGORIARECETA) AND ([DISPONUESHEM] = @Original_DISPONUESHEM) AND ([AKTIVE] = @Original_AKTIVE) AND ([rowguid] = @Original_rowguid))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_RECETA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_RECETA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EMRI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMRI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_KATEGORIARECETA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_KATEGORIARECETA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DISPONUESHEM", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "DISPONUESHEM", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_AKTIVE", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "AKTIVE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_rowguid", System.Data.SqlDbType.UniqueIdentifier, 0, System.Data.ParameterDirection.Input, 0, 0, "rowguid", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[RECETAT] ([EMRI], [ID_KATEGORIARECETA], [DISPONUESHEM], [AKTIVE], [rowguid]) VALUES (@EMRI, @ID_KATEGORIARECETA, @DISPONUESHEM, @AKTIVE, @rowguid);
SELECT ID_RECETA, EMRI, ID_KATEGORIARECETA, DISPONUESHEM, AKTIVE, rowguid FROM RECETAT WHERE (ID_RECETA = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EMRI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMRI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_KATEGORIARECETA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_KATEGORIARECETA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DISPONUESHEM", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "DISPONUESHEM", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@AKTIVE", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "AKTIVE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@rowguid", System.Data.SqlDbType.UniqueIdentifier, 0, System.Data.ParameterDirection.Input, 0, 0, "rowguid", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[RECETAT] SET [EMRI] = @EMRI, [ID_KATEGORIARECETA] = @ID_KATEGORIARECETA, [DISPONUESHEM] = @DISPONUESHEM, [AKTIVE] = @AKTIVE, [rowguid] = @rowguid WHERE (([ID_RECETA] = @Original_ID_RECETA) AND ([EMRI] = @Original_EMRI) AND ([ID_KATEGORIARECETA] = @Original_ID_KATEGORIARECETA) AND ([DISPONUESHEM] = @Original_DISPONUESHEM) AND ([AKTIVE] = @Original_AKTIVE) AND ([rowguid] = @Original_rowguid));
SELECT ID_RECETA, EMRI, ID_KATEGORIARECETA, DISPONUESHEM, AKTIVE, rowguid FROM RECETAT WHERE (ID_RECETA = @ID_RECETA)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EMRI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMRI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_KATEGORIARECETA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_KATEGORIARECETA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DISPONUESHEM", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "DISPONUESHEM", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@AKTIVE", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "AKTIVE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@rowguid", System.Data.SqlDbType.UniqueIdentifier, 0, System.Data.ParameterDirection.Input, 0, 0, "rowguid", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_RECETA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_RECETA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EMRI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMRI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_KATEGORIARECETA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_KATEGORIARECETA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DISPONUESHEM", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "DISPONUESHEM", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_AKTIVE", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "AKTIVE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_rowguid", System.Data.SqlDbType.UniqueIdentifier, 0, System.Data.ParameterDirection.Input, 0, 0, "rowguid", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_RECETA", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "ID_RECETA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ResManager.Properties.Settings.Default.ResManagerConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_RECETA, EMRI, ID_KATEGORIARECETA, DISPONUESHEM, AKTIVE, rowguid FROM db" +
                "o.RECETAT";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ResManagerDataSet.RECETATDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ResManagerDataSet.RECETATDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ResManagerDataSet.RECETATDataTable dataTable = new ResManagerDataSet.RECETATDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet.RECETATDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet dataSet) {
            return this.Adapter.Update(dataSet, "RECETAT");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_RECETA, string Original_EMRI, int Original_ID_KATEGORIARECETA, bool Original_DISPONUESHEM, bool Original_AKTIVE, System.Guid Original_rowguid) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_RECETA));
            if ((Original_EMRI == null)) {
                throw new System.ArgumentNullException("Original_EMRI");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_EMRI));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_ID_KATEGORIARECETA));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((bool)(Original_DISPONUESHEM));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((bool)(Original_AKTIVE));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((System.Guid)(Original_rowguid));
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string EMRI, int ID_KATEGORIARECETA, bool DISPONUESHEM, bool AKTIVE, System.Guid rowguid) {
            if ((EMRI == null)) {
                throw new System.ArgumentNullException("EMRI");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(EMRI));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ID_KATEGORIARECETA));
            this.Adapter.InsertCommand.Parameters[2].Value = ((bool)(DISPONUESHEM));
            this.Adapter.InsertCommand.Parameters[3].Value = ((bool)(AKTIVE));
            this.Adapter.InsertCommand.Parameters[4].Value = ((System.Guid)(rowguid));
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string EMRI, int ID_KATEGORIARECETA, bool DISPONUESHEM, bool AKTIVE, System.Guid rowguid, int Original_ID_RECETA, string Original_EMRI, int Original_ID_KATEGORIARECETA, bool Original_DISPONUESHEM, bool Original_AKTIVE, System.Guid Original_rowguid, int ID_RECETA) {
            if ((EMRI == null)) {
                throw new System.ArgumentNullException("EMRI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(EMRI));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ID_KATEGORIARECETA));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((bool)(DISPONUESHEM));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((bool)(AKTIVE));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.Guid)(rowguid));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_ID_RECETA));
            if ((Original_EMRI == null)) {
                throw new System.ArgumentNullException("Original_EMRI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_EMRI));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_ID_KATEGORIARECETA));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((bool)(Original_DISPONUESHEM));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((bool)(Original_AKTIVE));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((System.Guid)(Original_rowguid));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(ID_RECETA));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class REZERVIMETTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public REZERVIMETTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "REZERVIMET";
            tableMapping.ColumnMappings.Add("ID_REZERVIMI", "ID_REZERVIMI");
            tableMapping.ColumnMappings.Add("EMRI", "EMRI");
            tableMapping.ColumnMappings.Add("MBIEMRI", "MBIEMRI");
            tableMapping.ColumnMappings.Add("DATA", "DATA");
            tableMapping.ColumnMappings.Add("ORA_FILLIMI", "ORA_FILLIMI");
            tableMapping.ColumnMappings.Add("ORA_MBARIMI", "ORA_MBARIMI");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[REZERVIMET] WHERE (([ID_REZERVIMI] = @Original_ID_REZERVIMI) AND ([EMRI] = @Original_EMRI) AND ([MBIEMRI] = @Original_MBIEMRI) AND ([DATA] = @Original_DATA) AND ([ORA_FILLIMI] = @Original_ORA_FILLIMI) AND ([ORA_MBARIMI] = @Original_ORA_MBARIMI))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_REZERVIMI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_REZERVIMI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EMRI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMRI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MBIEMRI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MBIEMRI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DATA", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DATA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ORA_FILLIMI", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "ORA_FILLIMI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ORA_MBARIMI", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "ORA_MBARIMI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[REZERVIMET] ([EMRI], [MBIEMRI], [DATA], [ORA_FILLIMI], [ORA_MBARIMI]) VALUES (@EMRI, @MBIEMRI, @DATA, @ORA_FILLIMI, @ORA_MBARIMI);
SELECT ID_REZERVIMI, EMRI, MBIEMRI, DATA, ORA_FILLIMI, ORA_MBARIMI FROM REZERVIMET WHERE (ID_REZERVIMI = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EMRI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMRI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MBIEMRI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MBIEMRI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DATA", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DATA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ORA_FILLIMI", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "ORA_FILLIMI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ORA_MBARIMI", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "ORA_MBARIMI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[REZERVIMET] SET [EMRI] = @EMRI, [MBIEMRI] = @MBIEMRI, [DATA] = @DATA, [ORA_FILLIMI] = @ORA_FILLIMI, [ORA_MBARIMI] = @ORA_MBARIMI WHERE (([ID_REZERVIMI] = @Original_ID_REZERVIMI) AND ([EMRI] = @Original_EMRI) AND ([MBIEMRI] = @Original_MBIEMRI) AND ([DATA] = @Original_DATA) AND ([ORA_FILLIMI] = @Original_ORA_FILLIMI) AND ([ORA_MBARIMI] = @Original_ORA_MBARIMI));
SELECT ID_REZERVIMI, EMRI, MBIEMRI, DATA, ORA_FILLIMI, ORA_MBARIMI FROM REZERVIMET WHERE (ID_REZERVIMI = @ID_REZERVIMI)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EMRI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMRI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MBIEMRI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MBIEMRI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DATA", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DATA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ORA_FILLIMI", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "ORA_FILLIMI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ORA_MBARIMI", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "ORA_MBARIMI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_REZERVIMI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_REZERVIMI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EMRI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMRI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MBIEMRI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MBIEMRI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DATA", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DATA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ORA_FILLIMI", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "ORA_FILLIMI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ORA_MBARIMI", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "ORA_MBARIMI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_REZERVIMI", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "ID_REZERVIMI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ResManager.Properties.Settings.Default.ResManagerConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_REZERVIMI, EMRI, MBIEMRI, DATA, ORA_FILLIMI, ORA_MBARIMI FROM dbo.REZER" +
                "VIMET";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ResManagerDataSet.REZERVIMETDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ResManagerDataSet.REZERVIMETDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ResManagerDataSet.REZERVIMETDataTable dataTable = new ResManagerDataSet.REZERVIMETDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet.REZERVIMETDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet dataSet) {
            return this.Adapter.Update(dataSet, "REZERVIMET");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_REZERVIMI, string Original_EMRI, string Original_MBIEMRI, System.DateTime Original_DATA, System.DateTime Original_ORA_FILLIMI, System.DateTime Original_ORA_MBARIMI) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_REZERVIMI));
            if ((Original_EMRI == null)) {
                throw new System.ArgumentNullException("Original_EMRI");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_EMRI));
            }
            if ((Original_MBIEMRI == null)) {
                throw new System.ArgumentNullException("Original_MBIEMRI");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_MBIEMRI));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_DATA));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_ORA_FILLIMI));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_ORA_MBARIMI));
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string EMRI, string MBIEMRI, System.DateTime DATA, System.DateTime ORA_FILLIMI, System.DateTime ORA_MBARIMI) {
            if ((EMRI == null)) {
                throw new System.ArgumentNullException("EMRI");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(EMRI));
            }
            if ((MBIEMRI == null)) {
                throw new System.ArgumentNullException("MBIEMRI");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(MBIEMRI));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(DATA));
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(ORA_FILLIMI));
            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(ORA_MBARIMI));
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string EMRI, string MBIEMRI, System.DateTime DATA, System.DateTime ORA_FILLIMI, System.DateTime ORA_MBARIMI, int Original_ID_REZERVIMI, string Original_EMRI, string Original_MBIEMRI, System.DateTime Original_DATA, System.DateTime Original_ORA_FILLIMI, System.DateTime Original_ORA_MBARIMI, int ID_REZERVIMI) {
            if ((EMRI == null)) {
                throw new System.ArgumentNullException("EMRI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(EMRI));
            }
            if ((MBIEMRI == null)) {
                throw new System.ArgumentNullException("MBIEMRI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(MBIEMRI));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(DATA));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(ORA_FILLIMI));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(ORA_MBARIMI));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_ID_REZERVIMI));
            if ((Original_EMRI == null)) {
                throw new System.ArgumentNullException("Original_EMRI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_EMRI));
            }
            if ((Original_MBIEMRI == null)) {
                throw new System.ArgumentNullException("Original_MBIEMRI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_MBIEMRI));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(Original_DATA));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(Original_ORA_FILLIMI));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(Original_ORA_MBARIMI));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(ID_REZERVIMI));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class REZERVIMI_TAVOLINATTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public REZERVIMI_TAVOLINATTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "REZERVIMI_TAVOLINAT";
            tableMapping.ColumnMappings.Add("ID_REZERVIMI", "ID_REZERVIMI");
            tableMapping.ColumnMappings.Add("ID_TAVOLINA", "ID_TAVOLINA");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[REZERVIMI_TAVOLINAT] WHERE (([ID_REZERVIMI] = @Original_ID_REZ" +
                "ERVIMI) AND ([ID_TAVOLINA] = @Original_ID_TAVOLINA))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_REZERVIMI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_REZERVIMI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_TAVOLINA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_TAVOLINA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[REZERVIMI_TAVOLINAT] ([ID_REZERVIMI], [ID_TAVOLINA]) VALUES (@" +
                "ID_REZERVIMI, @ID_TAVOLINA);\r\nSELECT ID_REZERVIMI, ID_TAVOLINA FROM REZERVIMI_TA" +
                "VOLINAT WHERE (ID_REZERVIMI = @ID_REZERVIMI) AND (ID_TAVOLINA = @ID_TAVOLINA)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_REZERVIMI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_REZERVIMI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_TAVOLINA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_TAVOLINA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[REZERVIMI_TAVOLINAT] SET [ID_REZERVIMI] = @ID_REZERVIMI, [ID_TAVOLINA] = @ID_TAVOLINA WHERE (([ID_REZERVIMI] = @Original_ID_REZERVIMI) AND ([ID_TAVOLINA] = @Original_ID_TAVOLINA));
SELECT ID_REZERVIMI, ID_TAVOLINA FROM REZERVIMI_TAVOLINAT WHERE (ID_REZERVIMI = @ID_REZERVIMI) AND (ID_TAVOLINA = @ID_TAVOLINA)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_REZERVIMI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_REZERVIMI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_TAVOLINA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_TAVOLINA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_REZERVIMI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_REZERVIMI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_TAVOLINA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_TAVOLINA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ResManager.Properties.Settings.Default.ResManagerConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_REZERVIMI, ID_TAVOLINA FROM dbo.REZERVIMI_TAVOLINAT";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ResManagerDataSet.REZERVIMI_TAVOLINATDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ResManagerDataSet.REZERVIMI_TAVOLINATDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ResManagerDataSet.REZERVIMI_TAVOLINATDataTable dataTable = new ResManagerDataSet.REZERVIMI_TAVOLINATDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet.REZERVIMI_TAVOLINATDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet dataSet) {
            return this.Adapter.Update(dataSet, "REZERVIMI_TAVOLINAT");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_REZERVIMI, int Original_ID_TAVOLINA) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_REZERVIMI));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ID_TAVOLINA));
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_REZERVIMI, int ID_TAVOLINA) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_REZERVIMI));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ID_TAVOLINA));
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_REZERVIMI, int ID_TAVOLINA, int Original_ID_REZERVIMI, int Original_ID_TAVOLINA) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_REZERVIMI));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ID_TAVOLINA));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_ID_REZERVIMI));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_ID_TAVOLINA));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ROLETTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ROLETTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ROLET";
            tableMapping.ColumnMappings.Add("ID_ROLI", "ID_ROLI");
            tableMapping.ColumnMappings.Add("ROLI", "ROLI");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[ROLET] WHERE (([ID_ROLI] = @Original_ID_ROLI) AND ([ROLI] = @O" +
                "riginal_ROLI))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_ROLI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_ROLI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ROLI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ROLI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[ROLET] ([ID_ROLI], [ROLI]) VALUES (@ID_ROLI, @ROLI);\r\nSELECT I" +
                "D_ROLI, ROLI FROM ROLET WHERE (ID_ROLI = @ID_ROLI)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_ROLI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_ROLI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ROLI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ROLI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[ROLET] SET [ID_ROLI] = @ID_ROLI, [ROLI] = @ROLI WHERE (([ID_ROLI] =" +
                " @Original_ID_ROLI) AND ([ROLI] = @Original_ROLI));\r\nSELECT ID_ROLI, ROLI FROM R" +
                "OLET WHERE (ID_ROLI = @ID_ROLI)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_ROLI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_ROLI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ROLI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ROLI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_ROLI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_ROLI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ROLI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ROLI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ResManager.Properties.Settings.Default.ResManagerConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_ROLI, ROLI FROM dbo.ROLET";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ResManagerDataSet.ROLETDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ResManagerDataSet.ROLETDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ResManagerDataSet.ROLETDataTable dataTable = new ResManagerDataSet.ROLETDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet.ROLETDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet dataSet) {
            return this.Adapter.Update(dataSet, "ROLET");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_ROLI, string Original_ROLI) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_ROLI));
            if ((Original_ROLI == null)) {
                throw new System.ArgumentNullException("Original_ROLI");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_ROLI));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_ROLI, string ROLI) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_ROLI));
            if ((ROLI == null)) {
                throw new System.ArgumentNullException("ROLI");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(ROLI));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_ROLI, string ROLI, int Original_ID_ROLI, string Original_ROLI) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_ROLI));
            if ((ROLI == null)) {
                throw new System.ArgumentNullException("ROLI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(ROLI));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_ID_ROLI));
            if ((Original_ROLI == null)) {
                throw new System.ArgumentNullException("Original_ROLI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_ROLI));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SHPENZIMETTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SHPENZIMETTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SHPENZIMET";
            tableMapping.ColumnMappings.Add("ID_SHPENZIMI", "ID_SHPENZIMI");
            tableMapping.ColumnMappings.Add("ID_KATEGORIASHPENZIMI", "ID_KATEGORIASHPENZIMI");
            tableMapping.ColumnMappings.Add("KOMENT", "KOMENT");
            tableMapping.ColumnMappings.Add("SASIA", "SASIA");
            tableMapping.ColumnMappings.Add("DATA", "DATA");
            tableMapping.ColumnMappings.Add("ID_PERSONELI", "ID_PERSONELI");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[SHPENZIMET] WHERE (([ID_SHPENZIMI] = @Original_ID_SHPENZIMI) AND ([ID_KATEGORIASHPENZIMI] = @Original_ID_KATEGORIASHPENZIMI) AND ([SASIA] = @Original_SASIA) AND ([DATA] = @Original_DATA) AND ((@IsNull_ID_PERSONELI = 1 AND [ID_PERSONELI] IS NULL) OR ([ID_PERSONELI] = @Original_ID_PERSONELI)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_SHPENZIMI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_SHPENZIMI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_KATEGORIASHPENZIMI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_KATEGORIASHPENZIMI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SASIA", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "SASIA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DATA", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DATA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ID_PERSONELI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_PERSONELI", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_PERSONELI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_PERSONELI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[SHPENZIMET] ([ID_KATEGORIASHPENZIMI], [KOMENT], [SASIA], [DATA], [ID_PERSONELI]) VALUES (@ID_KATEGORIASHPENZIMI, @KOMENT, @SASIA, @DATA, @ID_PERSONELI);
SELECT ID_SHPENZIMI, ID_KATEGORIASHPENZIMI, KOMENT, SASIA, DATA, ID_PERSONELI FROM SHPENZIMET WHERE (ID_SHPENZIMI = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_KATEGORIASHPENZIMI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_KATEGORIASHPENZIMI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@KOMENT", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "KOMENT", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SASIA", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "SASIA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DATA", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DATA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_PERSONELI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_PERSONELI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[SHPENZIMET] SET [ID_KATEGORIASHPENZIMI] = @ID_KATEGORIASHPENZIMI, [KOMENT] = @KOMENT, [SASIA] = @SASIA, [DATA] = @DATA, [ID_PERSONELI] = @ID_PERSONELI WHERE (([ID_SHPENZIMI] = @Original_ID_SHPENZIMI) AND ([ID_KATEGORIASHPENZIMI] = @Original_ID_KATEGORIASHPENZIMI) AND ([SASIA] = @Original_SASIA) AND ([DATA] = @Original_DATA) AND ((@IsNull_ID_PERSONELI = 1 AND [ID_PERSONELI] IS NULL) OR ([ID_PERSONELI] = @Original_ID_PERSONELI)));
SELECT ID_SHPENZIMI, ID_KATEGORIASHPENZIMI, KOMENT, SASIA, DATA, ID_PERSONELI FROM SHPENZIMET WHERE (ID_SHPENZIMI = @ID_SHPENZIMI)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_KATEGORIASHPENZIMI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_KATEGORIASHPENZIMI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@KOMENT", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "KOMENT", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SASIA", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "SASIA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DATA", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DATA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_PERSONELI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_PERSONELI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_SHPENZIMI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_SHPENZIMI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_KATEGORIASHPENZIMI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_KATEGORIASHPENZIMI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SASIA", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "SASIA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DATA", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DATA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ID_PERSONELI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_PERSONELI", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_PERSONELI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_PERSONELI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_SHPENZIMI", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "ID_SHPENZIMI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ResManager.Properties.Settings.Default.ResManagerConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_SHPENZIMI, ID_KATEGORIASHPENZIMI, KOMENT, SASIA, DATA, ID_PERSONELI FRO" +
                "M dbo.SHPENZIMET";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ResManagerDataSet.SHPENZIMETDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ResManagerDataSet.SHPENZIMETDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ResManagerDataSet.SHPENZIMETDataTable dataTable = new ResManagerDataSet.SHPENZIMETDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet.SHPENZIMETDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet dataSet) {
            return this.Adapter.Update(dataSet, "SHPENZIMET");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_SHPENZIMI, int Original_ID_KATEGORIASHPENZIMI, double Original_SASIA, System.DateTime Original_DATA, System.Nullable<int> Original_ID_PERSONELI) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_SHPENZIMI));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ID_KATEGORIASHPENZIMI));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((double)(Original_SASIA));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_DATA));
            if ((Original_ID_PERSONELI.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_ID_PERSONELI.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_KATEGORIASHPENZIMI, string KOMENT, double SASIA, System.DateTime DATA, System.Nullable<int> ID_PERSONELI) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_KATEGORIASHPENZIMI));
            if ((KOMENT == null)) {
                throw new System.ArgumentNullException("KOMENT");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(KOMENT));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((double)(SASIA));
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(DATA));
            if ((ID_PERSONELI.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((int)(ID_PERSONELI.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_KATEGORIASHPENZIMI, string KOMENT, double SASIA, System.DateTime DATA, System.Nullable<int> ID_PERSONELI, int Original_ID_SHPENZIMI, int Original_ID_KATEGORIASHPENZIMI, double Original_SASIA, System.DateTime Original_DATA, System.Nullable<int> Original_ID_PERSONELI, int ID_SHPENZIMI) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_KATEGORIASHPENZIMI));
            if ((KOMENT == null)) {
                throw new System.ArgumentNullException("KOMENT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(KOMENT));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((double)(SASIA));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(DATA));
            if ((ID_PERSONELI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(ID_PERSONELI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_ID_SHPENZIMI));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_ID_KATEGORIASHPENZIMI));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((double)(Original_SASIA));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(Original_DATA));
            if ((Original_ID_PERSONELI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_ID_PERSONELI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(ID_SHPENZIMI));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SHPENZIMET_MUJORETableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SHPENZIMET_MUJORETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SHPENZIMET_MUJORE";
            tableMapping.ColumnMappings.Add("ID_SHPENZIMIMUJOR", "ID_SHPENZIMIMUJOR");
            tableMapping.ColumnMappings.Add("ID_KATSHPENZIMIMUJOR", "ID_KATSHPENZIMIMUJOR");
            tableMapping.ColumnMappings.Add("MUAJI", "MUAJI");
            tableMapping.ColumnMappings.Add("VITI", "VITI");
            tableMapping.ColumnMappings.Add("VLERA", "VLERA");
            tableMapping.ColumnMappings.Add("KOMENTI", "KOMENTI");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[SHPENZIMET_MUJORE] WHERE (([ID_SHPENZIMIMUJOR] = @Original_ID_" +
                "SHPENZIMIMUJOR) AND ([ID_KATSHPENZIMIMUJOR] = @Original_ID_KATSHPENZIMIMUJOR) AN" +
                "D ([MUAJI] = @Original_MUAJI) AND ([VITI] = @Original_VITI) AND ([VLERA] = @Orig" +
                "inal_VLERA))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_SHPENZIMIMUJOR", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_SHPENZIMIMUJOR", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_KATSHPENZIMIMUJOR", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_KATSHPENZIMIMUJOR", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MUAJI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MUAJI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_VITI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "VITI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_VLERA", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "VLERA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[SHPENZIMET_MUJORE] ([ID_KATSHPENZIMIMUJOR], [MUAJI], [VITI], [VLERA], [KOMENTI]) VALUES (@ID_KATSHPENZIMIMUJOR, @MUAJI, @VITI, @VLERA, @KOMENTI);
SELECT ID_SHPENZIMIMUJOR, ID_KATSHPENZIMIMUJOR, MUAJI, VITI, VLERA, KOMENTI FROM SHPENZIMET_MUJORE WHERE (ID_SHPENZIMIMUJOR = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_KATSHPENZIMIMUJOR", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_KATSHPENZIMIMUJOR", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MUAJI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MUAJI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@VITI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "VITI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@VLERA", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "VLERA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@KOMENTI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "KOMENTI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[SHPENZIMET_MUJORE] SET [ID_KATSHPENZIMIMUJOR] = @ID_KATSHPENZIMIMUJOR, [MUAJI] = @MUAJI, [VITI] = @VITI, [VLERA] = @VLERA, [KOMENTI] = @KOMENTI WHERE (([ID_SHPENZIMIMUJOR] = @Original_ID_SHPENZIMIMUJOR) AND ([ID_KATSHPENZIMIMUJOR] = @Original_ID_KATSHPENZIMIMUJOR) AND ([MUAJI] = @Original_MUAJI) AND ([VITI] = @Original_VITI) AND ([VLERA] = @Original_VLERA));
SELECT ID_SHPENZIMIMUJOR, ID_KATSHPENZIMIMUJOR, MUAJI, VITI, VLERA, KOMENTI FROM SHPENZIMET_MUJORE WHERE (ID_SHPENZIMIMUJOR = @ID_SHPENZIMIMUJOR)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_KATSHPENZIMIMUJOR", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_KATSHPENZIMIMUJOR", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MUAJI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MUAJI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@VITI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "VITI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@VLERA", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "VLERA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@KOMENTI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "KOMENTI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_SHPENZIMIMUJOR", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_SHPENZIMIMUJOR", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_KATSHPENZIMIMUJOR", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_KATSHPENZIMIMUJOR", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MUAJI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MUAJI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_VITI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "VITI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_VLERA", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "VLERA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_SHPENZIMIMUJOR", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "ID_SHPENZIMIMUJOR", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ResManager.Properties.Settings.Default.ResManagerConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_SHPENZIMIMUJOR, ID_KATSHPENZIMIMUJOR, MUAJI, VITI, VLERA, KOMENTI FROM " +
                "dbo.SHPENZIMET_MUJORE";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ResManagerDataSet.SHPENZIMET_MUJOREDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ResManagerDataSet.SHPENZIMET_MUJOREDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ResManagerDataSet.SHPENZIMET_MUJOREDataTable dataTable = new ResManagerDataSet.SHPENZIMET_MUJOREDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet.SHPENZIMET_MUJOREDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet dataSet) {
            return this.Adapter.Update(dataSet, "SHPENZIMET_MUJORE");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_SHPENZIMIMUJOR, int Original_ID_KATSHPENZIMIMUJOR, int Original_MUAJI, int Original_VITI, double Original_VLERA) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_SHPENZIMIMUJOR));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ID_KATSHPENZIMIMUJOR));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_MUAJI));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_VITI));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((double)(Original_VLERA));
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_KATSHPENZIMIMUJOR, int MUAJI, int VITI, double VLERA, string KOMENTI) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_KATSHPENZIMIMUJOR));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(MUAJI));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(VITI));
            this.Adapter.InsertCommand.Parameters[3].Value = ((double)(VLERA));
            if ((KOMENTI == null)) {
                throw new System.ArgumentNullException("KOMENTI");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(KOMENTI));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_KATSHPENZIMIMUJOR, int MUAJI, int VITI, double VLERA, string KOMENTI, int Original_ID_SHPENZIMIMUJOR, int Original_ID_KATSHPENZIMIMUJOR, int Original_MUAJI, int Original_VITI, double Original_VLERA, int ID_SHPENZIMIMUJOR) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_KATSHPENZIMIMUJOR));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(MUAJI));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(VITI));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((double)(VLERA));
            if ((KOMENTI == null)) {
                throw new System.ArgumentNullException("KOMENTI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(KOMENTI));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_ID_SHPENZIMIMUJOR));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_ID_KATSHPENZIMIMUJOR));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_MUAJI));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_VITI));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((double)(Original_VLERA));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(ID_SHPENZIMIMUJOR));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TAVOLINATTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TAVOLINATTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TAVOLINAT";
            tableMapping.ColumnMappings.Add("ID_TAVOLINA", "ID_TAVOLINA");
            tableMapping.ColumnMappings.Add("EMRI", "EMRI");
            tableMapping.ColumnMappings.Add("KAPACITETI", "KAPACITETI");
            tableMapping.ColumnMappings.Add("GJENDJA", "GJENDJA");
            tableMapping.ColumnMappings.Add("ID_KATEGORIATAVOLINA", "ID_KATEGORIATAVOLINA");
            tableMapping.ColumnMappings.Add("rowguid", "rowguid");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[TAVOLINAT] WHERE (([ID_TAVOLINA] = @Original_ID_TAVOLINA) AND ([EMRI] = @Original_EMRI) AND ([KAPACITETI] = @Original_KAPACITETI) AND ([GJENDJA] = @Original_GJENDJA) AND ([ID_KATEGORIATAVOLINA] = @Original_ID_KATEGORIATAVOLINA) AND ([rowguid] = @Original_rowguid))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_TAVOLINA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_TAVOLINA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EMRI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "EMRI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_KAPACITETI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "KAPACITETI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_GJENDJA", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "GJENDJA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_KATEGORIATAVOLINA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_KATEGORIATAVOLINA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_rowguid", System.Data.SqlDbType.UniqueIdentifier, 0, System.Data.ParameterDirection.Input, 0, 0, "rowguid", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[TAVOLINAT] ([EMRI], [KAPACITETI], [GJENDJA], [ID_KATEGORIATAVOLINA], [rowguid]) VALUES (@EMRI, @KAPACITETI, @GJENDJA, @ID_KATEGORIATAVOLINA, @rowguid);
SELECT ID_TAVOLINA, EMRI, KAPACITETI, GJENDJA, ID_KATEGORIATAVOLINA, rowguid FROM TAVOLINAT WHERE (ID_TAVOLINA = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EMRI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "EMRI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@KAPACITETI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "KAPACITETI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@GJENDJA", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "GJENDJA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_KATEGORIATAVOLINA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_KATEGORIATAVOLINA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@rowguid", System.Data.SqlDbType.UniqueIdentifier, 0, System.Data.ParameterDirection.Input, 0, 0, "rowguid", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[TAVOLINAT] SET [EMRI] = @EMRI, [KAPACITETI] = @KAPACITETI, [GJENDJA] = @GJENDJA, [ID_KATEGORIATAVOLINA] = @ID_KATEGORIATAVOLINA, [rowguid] = @rowguid WHERE (([ID_TAVOLINA] = @Original_ID_TAVOLINA) AND ([EMRI] = @Original_EMRI) AND ([KAPACITETI] = @Original_KAPACITETI) AND ([GJENDJA] = @Original_GJENDJA) AND ([ID_KATEGORIATAVOLINA] = @Original_ID_KATEGORIATAVOLINA) AND ([rowguid] = @Original_rowguid));
SELECT ID_TAVOLINA, EMRI, KAPACITETI, GJENDJA, ID_KATEGORIATAVOLINA, rowguid FROM TAVOLINAT WHERE (ID_TAVOLINA = @ID_TAVOLINA)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EMRI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "EMRI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@KAPACITETI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "KAPACITETI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@GJENDJA", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "GJENDJA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_KATEGORIATAVOLINA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_KATEGORIATAVOLINA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@rowguid", System.Data.SqlDbType.UniqueIdentifier, 0, System.Data.ParameterDirection.Input, 0, 0, "rowguid", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_TAVOLINA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_TAVOLINA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EMRI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "EMRI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_KAPACITETI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "KAPACITETI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_GJENDJA", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "GJENDJA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_KATEGORIATAVOLINA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_KATEGORIATAVOLINA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_rowguid", System.Data.SqlDbType.UniqueIdentifier, 0, System.Data.ParameterDirection.Input, 0, 0, "rowguid", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_TAVOLINA", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "ID_TAVOLINA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ResManager.Properties.Settings.Default.ResManagerConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_TAVOLINA, EMRI, KAPACITETI, GJENDJA, ID_KATEGORIATAVOLINA, rowguid FROM" +
                " dbo.TAVOLINAT";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ResManagerDataSet.TAVOLINATDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ResManagerDataSet.TAVOLINATDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ResManagerDataSet.TAVOLINATDataTable dataTable = new ResManagerDataSet.TAVOLINATDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet.TAVOLINATDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet dataSet) {
            return this.Adapter.Update(dataSet, "TAVOLINAT");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_TAVOLINA, int Original_EMRI, int Original_KAPACITETI, string Original_GJENDJA, int Original_ID_KATEGORIATAVOLINA, System.Guid Original_rowguid) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_TAVOLINA));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_EMRI));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_KAPACITETI));
            if ((Original_GJENDJA == null)) {
                throw new System.ArgumentNullException("Original_GJENDJA");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_GJENDJA));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_ID_KATEGORIATAVOLINA));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((System.Guid)(Original_rowguid));
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int EMRI, int KAPACITETI, string GJENDJA, int ID_KATEGORIATAVOLINA, System.Guid rowguid) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(EMRI));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(KAPACITETI));
            if ((GJENDJA == null)) {
                throw new System.ArgumentNullException("GJENDJA");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(GJENDJA));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(ID_KATEGORIATAVOLINA));
            this.Adapter.InsertCommand.Parameters[4].Value = ((System.Guid)(rowguid));
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int EMRI, int KAPACITETI, string GJENDJA, int ID_KATEGORIATAVOLINA, System.Guid rowguid, int Original_ID_TAVOLINA, int Original_EMRI, int Original_KAPACITETI, string Original_GJENDJA, int Original_ID_KATEGORIATAVOLINA, System.Guid Original_rowguid, int ID_TAVOLINA) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(EMRI));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(KAPACITETI));
            if ((GJENDJA == null)) {
                throw new System.ArgumentNullException("GJENDJA");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(GJENDJA));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(ID_KATEGORIATAVOLINA));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.Guid)(rowguid));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_ID_TAVOLINA));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_EMRI));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_KAPACITETI));
            if ((Original_GJENDJA == null)) {
                throw new System.ArgumentNullException("Original_GJENDJA");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_GJENDJA));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_ID_KATEGORIATAVOLINA));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((System.Guid)(Original_rowguid));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(ID_TAVOLINA));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TURNETTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TURNETTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TURNET";
            tableMapping.ColumnMappings.Add("ID_TURNI", "ID_TURNI");
            tableMapping.ColumnMappings.Add("FILLIMI", "FILLIMI");
            tableMapping.ColumnMappings.Add("MBARIMI", "MBARIMI");
            tableMapping.ColumnMappings.Add("ID_PERSONELI", "ID_PERSONELI");
            tableMapping.ColumnMappings.Add("MBYLLUR", "MBYLLUR");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[TURNET] WHERE (([ID_TURNI] = @Original_ID_TURNI) AND ([FILLIMI] = @Original_FILLIMI) AND ((@IsNull_MBARIMI = 1 AND [MBARIMI] IS NULL) OR ([MBARIMI] = @Original_MBARIMI)) AND ([ID_PERSONELI] = @Original_ID_PERSONELI) AND ([MBYLLUR] = @Original_MBYLLUR))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_TURNI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_TURNI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_FILLIMI", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "FILLIMI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MBARIMI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MBARIMI", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MBARIMI", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MBARIMI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_PERSONELI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_PERSONELI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MBYLLUR", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "MBYLLUR", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[TURNET] ([ID_TURNI], [FILLIMI], [MBARIMI], [ID_PERSONELI], [MB" +
                "YLLUR]) VALUES (@ID_TURNI, @FILLIMI, @MBARIMI, @ID_PERSONELI, @MBYLLUR);\r\nSELECT" +
                " ID_TURNI, FILLIMI, MBARIMI, ID_PERSONELI, MBYLLUR FROM TURNET WHERE (ID_TURNI =" +
                " @ID_TURNI)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_TURNI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_TURNI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@FILLIMI", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "FILLIMI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MBARIMI", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MBARIMI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_PERSONELI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_PERSONELI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MBYLLUR", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "MBYLLUR", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[TURNET] SET [ID_TURNI] = @ID_TURNI, [FILLIMI] = @FILLIMI, [MBARIMI] = @MBARIMI, [ID_PERSONELI] = @ID_PERSONELI, [MBYLLUR] = @MBYLLUR WHERE (([ID_TURNI] = @Original_ID_TURNI) AND ([FILLIMI] = @Original_FILLIMI) AND ((@IsNull_MBARIMI = 1 AND [MBARIMI] IS NULL) OR ([MBARIMI] = @Original_MBARIMI)) AND ([ID_PERSONELI] = @Original_ID_PERSONELI) AND ([MBYLLUR] = @Original_MBYLLUR));
SELECT ID_TURNI, FILLIMI, MBARIMI, ID_PERSONELI, MBYLLUR FROM TURNET WHERE (ID_TURNI = @ID_TURNI)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_TURNI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_TURNI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@FILLIMI", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "FILLIMI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MBARIMI", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MBARIMI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ID_PERSONELI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_PERSONELI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MBYLLUR", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "MBYLLUR", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_TURNI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_TURNI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_FILLIMI", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "FILLIMI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MBARIMI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MBARIMI", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MBARIMI", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MBARIMI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ID_PERSONELI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ID_PERSONELI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MBYLLUR", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "MBYLLUR", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ResManager.Properties.Settings.Default.ResManagerConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_TURNI, FILLIMI, MBARIMI, ID_PERSONELI, MBYLLUR FROM dbo.TURNET";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ResManagerDataSet.TURNETDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ResManagerDataSet.TURNETDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ResManagerDataSet.TURNETDataTable dataTable = new ResManagerDataSet.TURNETDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet.TURNETDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ResManagerDataSet dataSet) {
            return this.Adapter.Update(dataSet, "TURNET");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_TURNI, System.DateTime Original_FILLIMI, System.Nullable<System.DateTime> Original_MBARIMI, int Original_ID_PERSONELI, bool Original_MBYLLUR) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_TURNI));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_FILLIMI));
            if ((Original_MBARIMI.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_MBARIMI.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_ID_PERSONELI));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((bool)(Original_MBYLLUR));
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_TURNI, System.DateTime FILLIMI, System.Nullable<System.DateTime> MBARIMI, int ID_PERSONELI, bool MBYLLUR) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_TURNI));
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(FILLIMI));
            if ((MBARIMI.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(MBARIMI.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(ID_PERSONELI));
            this.Adapter.InsertCommand.Parameters[4].Value = ((bool)(MBYLLUR));
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_TURNI, System.DateTime FILLIMI, System.Nullable<System.DateTime> MBARIMI, int ID_PERSONELI, bool MBYLLUR, int Original_ID_TURNI, System.DateTime Original_FILLIMI, System.Nullable<System.DateTime> Original_MBARIMI, int Original_ID_PERSONELI, bool Original_MBYLLUR) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_TURNI));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(FILLIMI));
            if ((MBARIMI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(MBARIMI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(ID_PERSONELI));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((bool)(MBYLLUR));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_ID_TURNI));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(Original_FILLIMI));
            if ((Original_MBARIMI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(Original_MBARIMI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_ID_PERSONELI));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((bool)(Original_MBYLLUR));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
}

#pragma warning restore 1591