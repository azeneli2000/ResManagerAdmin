<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="grida.LayoutData" xml:space="preserve">
    <value>&lt;GridEXLayoutData&gt;&lt;RootTable&gt;&lt;Columns Collection="true"&gt;&lt;Column0 ID="SHPORTA"&gt;&lt;Caption&gt;Shporta&lt;/Caption&gt;&lt;DataMember&gt;SHPORTA&lt;/DataMember&gt;&lt;Key&gt;SHPORTA&lt;/Key&gt;&lt;Position&gt;0&lt;/Position&gt;&lt;Visible&gt;False&lt;/Visible&gt;&lt;/Column0&gt;&lt;Column1 ID="ID_RECETA"&gt;&lt;Caption&gt;IdReceta&lt;/Caption&gt;&lt;DataMember&gt;ID_RECETA&lt;/DataMember&gt;&lt;Key&gt;ID_RECETA&lt;/Key&gt;&lt;Position&gt;1&lt;/Position&gt;&lt;Visible&gt;False&lt;/Visible&gt;&lt;/Column1&gt;&lt;Column2 ID="RECETA"&gt;&lt;Caption&gt;Receta&lt;/Caption&gt;&lt;DataMember&gt;RECETA&lt;/DataMember&gt;&lt;Key&gt;RECETA&lt;/Key&gt;&lt;Position&gt;2&lt;/Position&gt;&lt;Width&gt;250&lt;/Width&gt;&lt;/Column2&gt;&lt;Column3 ID="SASIA"&gt;&lt;Caption&gt;Sasia&lt;/Caption&gt;&lt;DataMember&gt;SASIA&lt;/DataMember&gt;&lt;Key&gt;SASIA&lt;/Key&gt;&lt;Position&gt;3&lt;/Position&gt;&lt;/Column3&gt;&lt;Column4 ID="ZGJEDHUR"&gt;&lt;Caption&gt;Zgjedhur&lt;/Caption&gt;&lt;ColumnType&gt;CheckBox&lt;/ColumnType&gt;&lt;DataMember&gt;ZGJEDHUR&lt;/DataMember&gt;&lt;Key&gt;ZGJEDHUR&lt;/Key&gt;&lt;Position&gt;4&lt;/Position&gt;&lt;Visible&gt;False&lt;/Visible&gt;&lt;/Column4&gt;&lt;/Columns&gt;&lt;GroupCondition ID="" /&gt;&lt;Groups Collection="true"&gt;&lt;Group0 ID="Group0"&gt;&lt;ColIndex&gt;0&lt;/ColIndex&gt;&lt;GroupInterval&gt;Value&lt;/GroupInterval&gt;&lt;/Group0&gt;&lt;/Groups&gt;&lt;/RootTable&gt;&lt;/GridEXLayoutData&gt;</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="buttonBarGroup1.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Af//gAH//8AD///wD///////
</value>
  </data>
</root>