<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnOk.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        NNHVOX8AG3GVBVSUd8AAAAAASUVORK5CYII=
</value>
  </data>
</root>